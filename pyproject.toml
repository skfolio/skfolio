[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "skfolio"
version = "0.1.3"
maintainers = [
    { name = "Hugo Delatte", email = "delatte.hugo@gmail.com" },
]
authors = [
    { name = "Hugo Delatte", email = "delatte.hugo@gmail.com" },
]
description = "Portfolio optimization built on top of scikit-learn"
readme = "README.rst"
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.23.4",
    "scipy>=1.8.0",
    "pandas>=1.4.1",
    "cvxpy>=1.4.1",
    "scikit-learn>=1.3.2",
    "joblib>=1.3.2",
    "plotly>=5.15.0"
]
keywords = [
    "portfolio",
    "optimization",
    "optimisation",
    "finance",
    "asset",
    "allocation",
    "quantitative",
    "quant",
    "investment",
    "strategy",
    "machine-learning",
    "scikit-learn",
    "data-mining",
    "data-science",
]
license = { file = "LICENSE" }
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: BSD License",
    "Operating System :: Unix",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
    'Topic :: Office/Business :: Financial :: Investment',
    "Topic :: Software Development",
]

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-cov",
    "ruff"
]
docs = [
    "Sphinx",
    "sphinx-gallery",
    "sphinx-design",
    "pydata-sphinx-theme==0.13.3",
    "matplotlib",
    "kaleido",
    "sphinx-copybutton",
    "numpydoc",
    "sphinx-togglebutton",
    "sphinx-favicon",
    "sphinx-prompt",
    "sphinxext.opengraph",
    "sphinx-sitemap",
    "sphinx-favicon"
]

[project.urls]
"API Reference" = "https://www.skfolio.org/api_reference.html"
Documentation = "https://www.skfolio.org"
Tutorials = "https://www.skfolio.org"
Repository = "https://github.com/skfolio/skfolio"

[tool.setuptools.packages.find]
where = ["src"]

[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version",
]
branch = "main"
major_on_zero = true
tag_format = "v{version}"
upload_to_pypi = false
upload_to_vcs_release = true
build_command = "python -m pip install build; python -m build --sdist --wheel"
commit_message = "v{version} [skip ci]\n\nAutomatically generated by python-semantic-release " # skip triggering ci pipelines for version commits

[tool.semantic_release.remote]
token = { env = "GH_TOKEN" }

[tool.ruff]
include = ["pyproject.toml", "src/**/*.py"]
line-length = 88
src = ["src"]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "A", # prevent using keywords that clobber python builtins
    "B", # bugbear: security warnings
    "F", # pyflakes
    "ISC", # implicit string concatenation
    "UP", # alert you when better syntax is available in your python version
    "RUF", # the ruff developer's own rules
]
ignore = ["E203", "ISC001", "ISC002", "E111", "E114", "E117"] # rules redundant with the formatter.

[tool.ruff.lint.isort]
case-sensitive = true

[tool.ruff.lint.pycodestyle]
max-line-length = 320

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]