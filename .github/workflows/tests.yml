name: Tests

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    name: Test wheels on ${{ matrix.os }} with ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # to not fail all combinations if just one fail
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Create and activate virtual environment
        run: |
          uv venv
          if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" ]]; then
            # Windows-specific virtual environment activation
            . .venv/Scripts/activate
          else
            # Unix-like systems (Linux/macOS)
            . .venv/bin/activate
          fi

      - name: Install dependencies
        run: |
          . .venv/bin/activate || . .venv/Scripts/activate
          uv pip install -e .[dev]

      - name: Check Lint and Format with Ruff
        run: |
          uv run ruff check --output-format=github
          uv run ruff format --check

      - name: Run and write pytest
        run: |
          uv run pytest --cov=./ --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
