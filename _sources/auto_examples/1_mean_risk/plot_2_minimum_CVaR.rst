
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/1_mean_risk/plot_2_minimum_CVaR.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_1_mean_risk_plot_2_minimum_CVaR.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_1_mean_risk_plot_2_minimum_CVaR.py:


============
Minimum CVaR
============

This tutorial uses the :class:`~skfolio.optimization.MeanRisk` optimization to find the
minimum CVaR (Conditional Value at Risk) portfolio.

.. GENERATED FROM PYTHON SOURCE LINES 11-18

Data
====
We load the S&P 500 :ref:`dataset <datasets>` composed of the daily prices of 20
assets from the S&P 500 Index composition starting from 1990-01-02 up to 2022-12-28.
Prices are transformed into linear returns (see :ref:`data preparation
<data_preparation>`) and split into a training set and a test set without shuffling to
avoid :ref:`data leakage <data_leakage>`.

.. GENERATED FROM PYTHON SOURCE LINES 18-35

.. code-block:: Python


    import numpy as np
    from plotly.io import show
    from sklearn.model_selection import train_test_split

    from skfolio import Population, RiskMeasure
    from skfolio.datasets import load_sp500_dataset
    from skfolio.optimization import EqualWeighted, MeanRisk, ObjectiveFunction
    from skfolio.preprocessing import prices_to_returns

    prices = load_sp500_dataset()

    X = prices_to_returns(prices)
    X_train, X_test = train_test_split(X, test_size=0.33, shuffle=False)

    print(X_train.head())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

                    AAPL       AMD       BAC  ...       UNH       WMT       XOM
    Date                                      ...                              
    1990-01-03  0.007576 -0.030303  0.008045  ... -0.019355  0.000000 -0.010079
    1990-01-04  0.003759 -0.015500 -0.021355  ... -0.009868 -0.005201 -0.009933
    1990-01-05  0.003745 -0.031996 -0.021821  ... -0.043189 -0.010732 -0.005267
    1990-01-08  0.003731  0.000000  0.005633  ... -0.020833  0.013630  0.015381
    1990-01-09 -0.007435  0.016527  0.000000  ... -0.024823 -0.026619 -0.020114

    [5 rows x 20 columns]




.. GENERATED FROM PYTHON SOURCE LINES 36-42

Model
=====
We create a Minimum CVaR model and then fit it on the training set.
`portfolio_params` are parameters passed to the :class:`~skfolio.portfolio.Portfolio`
returned by the `predict` method. It can be
omitted, here we use it to give a name to our minimum CVaR portfolio:

.. GENERATED FROM PYTHON SOURCE LINES 42-50

.. code-block:: Python

    model = MeanRisk(
        risk_measure=RiskMeasure.CVAR,
        objective_function=ObjectiveFunction.MINIMIZE_RISK,
        portfolio_params=dict(name="Min CVaR"),
    )
    model.fit(X_train)
    model.weights_





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([2.16562529e-02, 1.41742527e-10, 3.64888981e-11, 1.47358386e-02,
           1.35927671e-01, 1.91035768e-10, 3.58350612e-10, 2.10319630e-01,
           4.89793803e-11, 8.14733606e-02, 1.92817471e-02, 4.13607836e-10,
           7.79844555e-10, 1.26155697e-01, 4.04585759e-10, 1.52708811e-01,
           1.20106233e-02, 6.41726679e-03, 1.01024013e-01, 1.18289085e-01])



.. GENERATED FROM PYTHON SOURCE LINES 51-53

To compare this model, we use an equal-weighted benchmark using
:class:`~skfolio.optimization.EqualWeighted`:

.. GENERATED FROM PYTHON SOURCE LINES 53-59

.. code-block:: Python

    benchmark = EqualWeighted(portfolio_params=dict(name="Equal Weighted"))
    # Even if `X` has no impact (as it is equal weighted), we still need to call `fit` for
    # API consistency.
    benchmark.fit(X_train)
    benchmark.weights_





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05,
           0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05])



.. GENERATED FROM PYTHON SOURCE LINES 60-63

Prediction
==========
We predict the model and the benchmark on the test set:

.. GENERATED FROM PYTHON SOURCE LINES 63-66

.. code-block:: Python

    pred_model = model.predict(X_test)
    pred_bench = benchmark.predict(X_test)








.. GENERATED FROM PYTHON SOURCE LINES 67-72

The `predict` method returns a :class:`~skfolio.portfolio.Portfolio` object.

:class:`~skfolio.portfolio.Portfolio` is an array-container making it compatible
with `scikit-learn` tools: calling `np.asarray(pred_model)` gives the portfolio
returns (same as `pred_model.returns`):

.. GENERATED FROM PYTHON SOURCE LINES 72-74

.. code-block:: Python

    np.asarray(pred_model)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([ 0.00354605,  0.00342423, -0.00105085, ...,  0.01069377,
            0.00542224, -0.01217676])



.. GENERATED FROM PYTHON SOURCE LINES 75-83

The :class:`~skfolio.portfolio.Portfolio` class contains a vast number of properties
and methods used for analysis.

| For example:

* pred_model.plot_cumulative_returns()
* pred_model.plot_composition()
* pred_model.summary()

.. GENERATED FROM PYTHON SOURCE LINES 83-86

.. code-block:: Python

    print(pred_model.cvar)
    print(pred_bench.cvar)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    0.021741551637176403
    0.025061083134673378




.. GENERATED FROM PYTHON SOURCE LINES 87-91

Analysis
========
For improved analysis, we load both predicted portfolios into a
:class:`~skfolio.population.Population`:

.. GENERATED FROM PYTHON SOURCE LINES 91-93

.. code-block:: Python

    population = Population([pred_model, pred_bench])








.. GENERATED FROM PYTHON SOURCE LINES 94-97

The :class:`~skfolio.population.Population` class also contains a
vast number of properties and methods used for analysis.
Let's plot each portfolio composition:

.. GENERATED FROM PYTHON SOURCE LINES 97-99

.. code-block:: Python

    population.plot_composition()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.35.2.min.js"></script>                <div id="b2edb32d-5a74-4504-b8c4-d2f4b87c464c" class="plotly-graph-div" style="height:100%; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("b2edb32d-5a74-4504-b8c4-d2f4b87c464c")) {                    Plotly.newPlot(                        "b2edb32d-5a74-4504-b8c4-d2f4b87c464c",                        [{"alignmentgroup":"True","hovertemplate":"asset=JNJ\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"JNJ","marker":{"color":"#636efa","pattern":{"shape":""}},"name":"JNJ","offsetgroup":"JNJ","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.21031963034484571,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=PG\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"PG","marker":{"color":"#EF553B","pattern":{"shape":""}},"name":"PG","offsetgroup":"PG","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.15270881119578594,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=CVX\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"CVX","marker":{"color":"#00cc96","pattern":{"shape":""}},"name":"CVX","offsetgroup":"CVX","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.1359276712886806,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=PEP\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"PEP","marker":{"color":"#ab63fa","pattern":{"shape":""}},"name":"PEP","offsetgroup":"PEP","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.12615569727741083,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=XOM\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"XOM","marker":{"color":"#FFA15A","pattern":{"shape":""}},"name":"XOM","offsetgroup":"XOM","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.1182890849351138,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=WMT\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"WMT","marker":{"color":"#19d3f3","pattern":{"shape":""}},"name":"WMT","offsetgroup":"WMT","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.10102401330358841,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=KO\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"KO","marker":{"color":"#FF6692","pattern":{"shape":""}},"name":"KO","offsetgroup":"KO","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.08147336064190414,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=AAPL\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"AAPL","marker":{"color":"#B6E880","pattern":{"shape":""}},"name":"AAPL","offsetgroup":"AAPL","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.021656252853628315,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=LLY\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"LLY","marker":{"color":"#FF97FF","pattern":{"shape":""}},"name":"LLY","offsetgroup":"LLY","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.01928174706690875,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=BBY\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"BBY","marker":{"color":"#FECB52","pattern":{"shape":""}},"name":"BBY","offsetgroup":"BBY","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.014735838645703783,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=RRC\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"RRC","marker":{"color":"#636efa","pattern":{"shape":""}},"name":"RRC","offsetgroup":"RRC","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.012010623279531505,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=UNH\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"UNH","marker":{"color":"#EF553B","pattern":{"shape":""}},"name":"UNH","offsetgroup":"UNH","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.0064172667922627385,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=AMD\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"AMD","marker":{"color":"#00cc96","pattern":{"shape":""}},"name":"AMD","offsetgroup":"AMD","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.0,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=BAC\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"BAC","marker":{"color":"#ab63fa","pattern":{"shape":""}},"name":"BAC","offsetgroup":"BAC","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.0,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=GE\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"GE","marker":{"color":"#FFA15A","pattern":{"shape":""}},"name":"GE","offsetgroup":"GE","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.0,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=HD\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"HD","marker":{"color":"#19d3f3","pattern":{"shape":""}},"name":"HD","offsetgroup":"HD","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.0,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=JPM\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"JPM","marker":{"color":"#FF6692","pattern":{"shape":""}},"name":"JPM","offsetgroup":"JPM","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.0,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=MRK\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"MRK","marker":{"color":"#B6E880","pattern":{"shape":""}},"name":"MRK","offsetgroup":"MRK","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.0,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=MSFT\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"MSFT","marker":{"color":"#FF97FF","pattern":{"shape":""}},"name":"MSFT","offsetgroup":"MSFT","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.0,0.05],"yaxis":"y","type":"bar"},{"alignmentgroup":"True","hovertemplate":"asset=PFE\u003cbr\u003eindex=%{x}\u003cbr\u003evalue=%{y}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"PFE","marker":{"color":"#FECB52","pattern":{"shape":""}},"name":"PFE","offsetgroup":"PFE","orientation":"v","showlegend":true,"textposition":"auto","x":["Min CVaR","Equal Weighted"],"xaxis":"x","y":[0.0,0.05],"yaxis":"y","type":"bar"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"title":{"text":"Portfolios"}},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"Weight"},"tickformat":",.0%"},"legend":{"title":{"text":"asset"},"tracegroupgap":0,"yanchor":"top","y":0.99,"xanchor":"left","x":1.15},"margin":{"t":60},"barmode":"relative","title":{"text":"Portfolios Composition"}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 100-106

.. note::
      Every `plot` methods in `skfolio` returns a `plotly` figure.
      To display a plotly figure, you may need to call `show()` and change the
      default renderer: https://plotly.com/python/renderers/

Let's plot each portfolio cumulative returns:

.. GENERATED FROM PYTHON SOURCE LINES 106-110

.. code-block:: Python

    fig = population.plot_cumulative_returns()
    # show(fig) is only used for the documentation sticker.
    show(fig)




.. raw:: html
    :file: images/sphx_glr_plot_2_minimum_CVaR_001.html





.. GENERATED FROM PYTHON SOURCE LINES 111-115

|

Finally, let's display the full summary of both strategies evaluated on the test
set:

.. GENERATED FROM PYTHON SOURCE LINES 115-117

.. code-block:: Python

    population.summary()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Min CVaR</th>
          <th>Equal Weighted</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Mean</th>
          <td>0.052%</td>
          <td>0.069%</td>
        </tr>
        <tr>
          <th>Annualized Mean</th>
          <td>13.07%</td>
          <td>17.30%</td>
        </tr>
        <tr>
          <th>Variance</th>
          <td>0.0090%</td>
          <td>0.012%</td>
        </tr>
        <tr>
          <th>Annualized Variance</th>
          <td>2.26%</td>
          <td>2.94%</td>
        </tr>
        <tr>
          <th>Semi-Variance</th>
          <td>0.0046%</td>
          <td>0.0060%</td>
        </tr>
        <tr>
          <th>Annualized Semi-Variance</th>
          <td>1.16%</td>
          <td>1.52%</td>
        </tr>
        <tr>
          <th>Standard Deviation</th>
          <td>0.95%</td>
          <td>1.08%</td>
        </tr>
        <tr>
          <th>Annualized Standard Deviation</th>
          <td>15.02%</td>
          <td>17.15%</td>
        </tr>
        <tr>
          <th>Semi-Deviation</th>
          <td>0.68%</td>
          <td>0.78%</td>
        </tr>
        <tr>
          <th>Annualized Semi-Deviation</th>
          <td>10.76%</td>
          <td>12.32%</td>
        </tr>
        <tr>
          <th>Mean Absolute Deviation</th>
          <td>0.61%</td>
          <td>0.71%</td>
        </tr>
        <tr>
          <th>CVaR at 95%</th>
          <td>2.17%</td>
          <td>2.51%</td>
        </tr>
        <tr>
          <th>EVaR at 95%</th>
          <td>4.62%</td>
          <td>5.43%</td>
        </tr>
        <tr>
          <th>Worst Realization</th>
          <td>8.53%</td>
          <td>10.77%</td>
        </tr>
        <tr>
          <th>CDaR at 95%</th>
          <td>14.81%</td>
          <td>13.35%</td>
        </tr>
        <tr>
          <th>MAX Drawdown</th>
          <td>34.70%</td>
          <td>34.70%</td>
        </tr>
        <tr>
          <th>Average Drawdown</th>
          <td>3.12%</td>
          <td>2.67%</td>
        </tr>
        <tr>
          <th>EDaR at 95%</th>
          <td>20.48%</td>
          <td>20.49%</td>
        </tr>
        <tr>
          <th>First Lower Partial Moment</th>
          <td>0.31%</td>
          <td>0.35%</td>
        </tr>
        <tr>
          <th>Ulcer Index</th>
          <td>0.050</td>
          <td>0.044</td>
        </tr>
        <tr>
          <th>Gini Mean Difference</th>
          <td>0.92%</td>
          <td>1.06%</td>
        </tr>
        <tr>
          <th>Value at Risk at 95%</th>
          <td>1.33%</td>
          <td>1.54%</td>
        </tr>
        <tr>
          <th>Drawdown at Risk at 95%</th>
          <td>11.23%</td>
          <td>9.48%</td>
        </tr>
        <tr>
          <th>Entropic Risk Measure at 95%</th>
          <td>3.00</td>
          <td>3.00</td>
        </tr>
        <tr>
          <th>Fourth Central Moment</th>
          <td>0.000016%</td>
          <td>0.000027%</td>
        </tr>
        <tr>
          <th>Fourth Lower Partial Moment</th>
          <td>0.000008%</td>
          <td>0.000013%</td>
        </tr>
        <tr>
          <th>Skew</th>
          <td>-0.13%</td>
          <td>-2.79%</td>
        </tr>
        <tr>
          <th>Kurtosis</th>
          <td>1976.27%</td>
          <td>1959.90%</td>
        </tr>
        <tr>
          <th>Sharpe Ratio</th>
          <td>0.055</td>
          <td>0.064</td>
        </tr>
        <tr>
          <th>Annualized Sharpe Ratio</th>
          <td>0.87</td>
          <td>1.01</td>
        </tr>
        <tr>
          <th>Sortino Ratio</th>
          <td>0.076</td>
          <td>0.088</td>
        </tr>
        <tr>
          <th>Annualized Sortino Ratio</th>
          <td>1.21</td>
          <td>1.40</td>
        </tr>
        <tr>
          <th>Mean Absolute Deviation Ratio</th>
          <td>0.085</td>
          <td>0.097</td>
        </tr>
        <tr>
          <th>First Lower Partial Moment Ratio</th>
          <td>0.17</td>
          <td>0.19</td>
        </tr>
        <tr>
          <th>Value at Risk Ratio at 95%</th>
          <td>0.039</td>
          <td>0.045</td>
        </tr>
        <tr>
          <th>CVaR Ratio at 95%</th>
          <td>0.024</td>
          <td>0.027</td>
        </tr>
        <tr>
          <th>Entropic Risk Measure Ratio at 95%</th>
          <td>0.00017</td>
          <td>0.00023</td>
        </tr>
        <tr>
          <th>EVaR Ratio at 95%</th>
          <td>0.011</td>
          <td>0.013</td>
        </tr>
        <tr>
          <th>Worst Realization Ratio</th>
          <td>0.0061</td>
          <td>0.0064</td>
        </tr>
        <tr>
          <th>Drawdown at Risk Ratio at 95%</th>
          <td>0.0046</td>
          <td>0.0072</td>
        </tr>
        <tr>
          <th>CDaR Ratio at 95%</th>
          <td>0.0035</td>
          <td>0.0051</td>
        </tr>
        <tr>
          <th>Calmar Ratio</th>
          <td>0.0015</td>
          <td>0.0020</td>
        </tr>
        <tr>
          <th>Average Drawdown Ratio</th>
          <td>0.017</td>
          <td>0.026</td>
        </tr>
        <tr>
          <th>EDaR Ratio at 95%</th>
          <td>0.0025</td>
          <td>0.0033</td>
        </tr>
        <tr>
          <th>Ulcer Index Ratio</th>
          <td>0.010</td>
          <td>0.015</td>
        </tr>
        <tr>
          <th>Gini Mean Difference Ratio</th>
          <td>0.056</td>
          <td>0.064</td>
        </tr>
        <tr>
          <th>Effective Number of Assets</th>
          <td>7.461275191312059</td>
          <td>19.999999999999993</td>
        </tr>
        <tr>
          <th>Assets Number</th>
          <td>20</td>
          <td>20</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 118-128

Conclusion
==========
From the analysis on the test set, we see that the Minimum CVaR portfolio outperforms
the equal-weighted benchmark for all deviation and shortfall risk measures, except for
the drawdown measures, and underperforms for the mean and ratio measures.

.. seealso::
      This was a toy example, for more advanced concepts check the
      :ref:`user guide <user_guide>` or the :ref:`other examples <general_examples>`.



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.492 seconds)


.. _sphx_glr_download_auto_examples_1_mean_risk_plot_2_minimum_CVaR.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/skfolio/skfolio/gh-pages?urlpath=lab/tree/notebooks/auto_examples/1_mean_risk/plot_2_minimum_CVaR.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_2_minimum_CVaR.ipynb <plot_2_minimum_CVaR.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_2_minimum_CVaR.py <plot_2_minimum_CVaR.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_2_minimum_CVaR.zip <plot_2_minimum_CVaR.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
