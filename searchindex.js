Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Analysis": [[7, "analysis"], [8, "analysis"], [9, "analysis"], [10, "analysis"], [18, "analysis"], [19, "analysis"], [20, "analysis"], [23, "analysis"], [26, "analysis"], [31, "analysis"], [33, "analysis"], [36, "analysis"]], "Analyst views": [[4, "analyst-views"], [6, "analyst-views"]], "Attributes and Methods": [[189, "attributes-and-methods"], [189, "id3"]], "Available models": [[174, "available-models"]], "Base Class": [[0, "base-class"], [0, "id10"], [0, "id12"], [0, "id15"]], "Base Classe": [[0, "base-classe"], [0, "id2"]], "Base Classes": [[0, "base-classes"], [0, "id21"]], "Base Portfolio": [[189, "base-portfolio"]], "Benchmark": [[3, "benchmark"], [36, "benchmark"]], "Black & Litterman": [[4, null], [191, "black-litterman"]], "Black & Litterman Factor Model": [[6, null], [6, "id1"], [174, "black-litterman-factor-model"]], "Black & Litterman Model": [[4, "black-litterman-model"], [174, "black-litterman-model"]], "Budget": [[11, "budget"]], "Citation": [[174, "citation"]], "Classes": [[0, "classes"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id9"], [0, "id11"], [0, "id13"], [0, "id16"], [0, "id17"], [0, "id19"], [0, "id20"], [0, "id22"]], "Clustering Estimator": [[32, "clustering-estimator"]], "Clustering Estimators": [[176, null]], "Combinatorial Purged Cross-Validation": [[31, "combinatorial-purged-cross-validation"], [33, "combinatorial-purged-cross-validation"], [36, "combinatorial-purged-cross-validation"], [39, "combinatorial-purged-cross-validation"], [174, "combinatorial-purged-cross-validation"], [186, "combinatorial-purged-cross-validation"]], "Combining Multiple Prior Estimators": [[191, "combining-multiple-prior-estimators"]], "Combining Prior Estimators": [[187, "combining-prior-estimators"]], "Composite Estimators and Parameter Spaces": [[182, "composite-estimators-and-parameter-spaces"]], "Composition": [[29, "composition"], [30, "composition"], [32, "composition"]], "Computation times": [[16, null], [21, null], [24, null], [27, null], [34, null], [37, null], [43, null], [46, null], [49, null], [51, null], [175, null]], "Conclusion": [[7, "conclusion"], [8, "conclusion"], [33, "conclusion"], [36, "conclusion"], [45, "conclusion"]], "Covariance Estimator": [[177, null]], "Cross Validation": [[45, "cross-validation"]], "Cross-Validation": [[41, "cross-validation"]], "Cross-Validation Prediction": [[186, "cross-validation-prediction"]], "Custom Estimator": [[187, "custom-estimator"]], "Custom Pre-selection Transformer": [[41, "custom-pre-selection-transformer"]], "Custom Pre-selection Using Volumes": [[41, null]], "Data": [[2, "data"], [3, "data"], [4, "data"], [5, "data"], [6, "data"], [7, "data"], [8, "data"], [9, "data"], [10, "data"], [11, "data"], [12, "data"], [13, "data"], [14, "data"], [15, "data"], [18, "data"], [19, "data"], [20, "data"], [23, "data"], [26, "data"], [29, "data"], [30, "data"], [31, "data"], [32, "data"], [33, "data"], [36, "data"], [39, "data"], [40, "data"], [41, "data"], [42, "data"]], "Data Preparation": [[47, null], [50, "data-preparation"], [178, null]], "Datasets": [[179, null]], "Dendrogram": [[29, "dendrogram"], [30, "dendrogram"], [32, "dendrogram"]], "Denoised Covariance & Shrunk Expected Returns": [[174, "denoised-covariance-shrunk-expected-returns"]], "Distance Estimator": [[29, "distance-estimator"], [30, "distance-estimator"], [32, "distance-estimator"], [180, null]], "Distribution": [[31, "distribution"], [33, "distribution"], [36, "distribution"], [39, "distribution"]], "Distributionally Robust CVaR": [[25, null], [26, null], [50, "distributionally-robust-cvar"], [187, "distributionally-robust-cvar"]], "Diversification Analysis": [[23, "diversification-analysis"]], "Drop Highly Correlated Assets": [[39, null]], "Efficient Frontier": [[9, null], [14, "efficient-frontier"], [15, "efficient-frontier"]], "Empirical Model": [[4, "empirical-model"], [5, "empirical-model"]], "Empirical Prior": [[3, null], [191, "empirical-prior"]], "Ensemble Optimizations": [[35, null], [50, "ensemble-optimizations"]], "Enum": [[0, "enum"]], "Example for stocks": [[178, "example-for-stocks"]], "Examples": [[50, null]], "Exhaustive Grid Search": [[182, "exhaustive-grid-search"]], "Expected Return Estimator": [[181, null]], "Factor Analysis": [[5, "factor-analysis"]], "Factor Model": [[5, null], [5, "id1"], [174, "factor-model"], [191, "factor-model"]], "Factor Model & Covariance Detoning": [[174, "factor-model-covariance-detoning"]], "Fit on training set": [[174, "fit-on-training-set"]], "Functions": [[0, "functions"], [0, "id23"], [0, "id24"], [0, "id25"], [0, "id26"], [0, "id27"]], "Going Further": [[6, "going-further"], [187, "going-further"]], "Grid Search on embedded parameters": [[174, "grid-search-on-embedded-parameters"]], "Group and Linear Constraints": [[11, "group-and-linear-constraints"]], "HRP vs HERC": [[31, null]], "Handling Incomplete Datasets: Inception, Expiry, and Default": [[42, null]], "Hierarchical Clustering and NCO": [[28, null], [50, "hierarchical-clustering-and-nco"]], "Hierarchical Equal Risk Contribution": [[187, "hierarchical-equal-risk-contribution"]], "Hierarchical Equal Risk Contribution - CDaR": [[30, null]], "Hierarchical Risk Parity": [[187, "hierarchical-risk-parity"]], "Hierarchical Risk Parity - CVaR": [[29, null]], "Hyper-Parameter Tuning": [[15, "hyper-parameter-tuning"], [42, "hyper-parameter-tuning"]], "Hyper-Parameters Tuning": [[45, "hyper-parameters-tuning"], [182, null]], "Hyper-parameter Tuning": [[14, "hyper-parameter-tuning"]], "Implied Covariance Estimator": [[45, "implied-covariance-estimator"]], "Imports": [[174, "imports"]], "In skfolio": [[178, "in-skfolio"]], "Installation": [[174, "installation"], [184, null]], "Inverse Volatility": [[45, "inverse-volatility"]], "Investment Horizon": [[48, null]], "K-fold Cross-Validation": [[174, "k-fold-cross-validation"]], "Key Concepts": [[174, "key-concepts"]], "L1 and L2 Regularization": [[14, null]], "Left and Right Inequalities": [[11, "left-and-right-inequalities"]], "Linear Returns": [[48, "linear-returns"]], "Linear return": [[178, "linear-return"]], "Linkage Methods": [[29, "linkage-methods"], [30, "linkage-methods"], [32, "linkage-methods"]], "Load Dataset": [[174, "load-dataset"]], "Load Datasets": [[45, "load-datasets"]], "Loading Matrix Classes for Factor Models": [[0, "loading-matrix-classes-for-factor-models"]], "Logarithmic return": [[178, "logarithmic-return"]], "Lower and Upper Bounds on Weights": [[11, "lower-and-upper-bounds-on-weights"]], "Management Fees": [[13, null], [13, "id1"]], "Maximum Diversification": [[22, null], [23, null], [50, "maximum-diversification"], [187, "maximum-diversification"]], "Maximum Sharpe Ratio": [[7, null]], "Maximum Sortino Ratio": [[174, "maximum-sortino-ratio"]], "Mean-Risk": [[1, null], [50, "mean-risk"]], "Mean-Risk Optimization": [[187, "mean-risk-optimization"]], "Mean-Variance-CDaR Surface": [[10, null]], "Metadata Routing": [[44, null], [50, "metadata-routing"], [185, null]], "Minimum CVaR": [[8, null]], "Minimum Variance": [[174, "minimum-variance"]], "Model": [[2, "model"], [3, "model"], [7, "model"], [8, "model"], [9, "model"], [10, "model"], [11, "model"], [12, "model"], [13, "model"], [18, "model"], [19, "model"], [20, "model"], [23, "model"], [26, "model"], [29, "model"], [30, "model"], [31, "model"], [32, "model"], [33, "model"], [39, "model"], [40, "model"], [48, "model"]], "Model Dataclass": [[0, "model-dataclass"], [0, "id18"]], "Model Selection": [[186, null]], "Multi Period Portfolio": [[189, "multi-period-portfolio"]], "Multi-period portfolio": [[12, "multi-period-portfolio"], [13, "multi-period-portfolio"]], "NCO - Combinatorial Purged CV": [[33, null]], "Naive Allocation": [[187, "naive-allocation"]], "Nested Cluster Optimization with cross-validation and parallelization": [[174, "nested-cluster-optimization-with-cross-validation-and-parallelization"]], "Nested Clusters Optimization": [[32, null], [187, "nested-clusters-optimization"]], "Optimization": [[187, null]], "Parallelism": [[182, "parallelism"]], "Parameter Tuning": [[31, "parameter-tuning"], [33, "parameter-tuning"], [36, "parameter-tuning"], [40, "parameter-tuning"]], "Pareto Optimal Surface": [[10, "pareto-optimal-surface"]], "Pipeline": [[39, "pipeline"], [40, "pipeline"], [41, "pipeline"], [42, "pipeline"]], "Pitfall in Portfolio Optimization": [[178, "pitfall-in-portfolio-optimization"]], "Population": [[188, null]], "Portfolio": [[189, null], [189, "id2"]], "Pre-Selection Pipeline": [[174, "pre-selection-pipeline"]], "Pre-Selection Transformers": [[190, null]], "Pre-selection": [[38, null], [50, "pre-selection"]], "Predict on test set": [[174, "predict-on-test-set"]], "Prediction": [[2, "prediction"], [3, "prediction"], [4, "prediction"], [5, "prediction"], [6, "prediction"], [7, "prediction"], [8, "prediction"], [9, "prediction"], [14, "prediction"], [18, "prediction"], [19, "prediction"], [20, "prediction"], [23, "prediction"], [26, "prediction"], [29, "prediction"], [30, "prediction"], [31, "prediction"], [32, "prediction"], [33, "prediction"], [36, "prediction"], [39, "prediction"], [40, "prediction"]], "Prices": [[48, "prices"]], "Prior Estimator": [[29, "prior-estimator"], [187, "prior-estimator"], [191, null]], "Quickstart": [[174, "quickstart"]], "Randomized Parameter Optimization": [[182, "randomized-parameter-optimization"]], "Randomized Search of the L2 Norm": [[174, "randomized-search-of-the-l2-norm"]], "Recognition": [[174, "recognition"]], "Risk Budget": [[19, "risk-budget"]], "Risk Budgeting": [[17, null], [50, "risk-budgeting"], [187, "risk-budgeting"]], "Risk Budgeting - CVaR": [[19, null]], "Risk Contribution": [[29, "risk-contribution"], [30, "risk-contribution"]], "Risk Contribution Analysis": [[18, "risk-contribution-analysis"], [19, "risk-contribution-analysis"]], "Risk Parity & Gerber Covariance": [[174, "risk-parity-gerber-covariance"]], "Risk Parity - Covariance shrinkage": [[20, null]], "Risk Parity - Variance": [[18, null]], "Risk Parity on CVaR": [[174, "risk-parity-on-cvar"]], "Select Best Performers": [[40, null]], "Short and Long Position Constraints": [[11, "short-and-long-position-constraints"]], "Specifying an Objective Metric": [[182, "specifying-an-objective-metric"]], "Stacking Model": [[36, "stacking-model"]], "Stacking Optimization": [[36, null], [187, "stacking-optimization"]], "Step-by-Step Fitting with WalkForward": [[42, "step-by-step-fitting-with-walkforward"]], "Summary": [[29, "summary"]], "The correct approach": [[178, "the-correct-approach"]], "Tips for Parameter Search": [[182, "tips-for-parameter-search"]], "Tracking Error": [[2, null]], "Train/Test split": [[174, "train-test-split"]], "Transaction Cost": [[12, "transaction-cost"]], "Transaction Costs": [[12, null]], "Uncertainty Set": [[15, null]], "Uncertainty Set Estimator": [[192, null]], "Uncertainty Set on Expected Returns": [[174, "uncertainty-set-on-expected-returns"]], "User Guide": [[183, null]], "Using Implied Volatility with Metadata Routing": [[45, null]], "Walk-Forward Cross-Validation": [[42, "walk-forward-cross-validation"]], "Weight Constraints": [[11, null]], "Weight Constraints & Transaction Costs": [[174, "weight-constraints-transaction-costs"]], "Worst-Case Optimization": [[187, "worst-case-optimization"]], "skfolio": [[174, null]], "skfolio.cluster.HierarchicalClustering": [[52, null]], "skfolio.cluster.LinkageMethod": [[53, null]], "skfolio.cluster: Cluster Estimators": [[0, "module-3"]], "skfolio.datasets.load_factors_dataset": [[54, null]], "skfolio.datasets.load_ftse100_dataset": [[55, null]], "skfolio.datasets.load_nasdaq_dataset": [[56, null]], "skfolio.datasets.load_sp500_dataset": [[57, null]], "skfolio.datasets.load_sp500_index": [[58, null]], "skfolio.datasets: Datasets": [[0, "skfolio-datasets-datasets"]], "skfolio.distance.BaseDistance": [[59, null]], "skfolio.distance.CovarianceDistance": [[60, null]], "skfolio.distance.DistanceCorrelation": [[61, null]], "skfolio.distance.KendallDistance": [[62, null]], "skfolio.distance.MutualInformation": [[63, null]], "skfolio.distance.PearsonDistance": [[64, null]], "skfolio.distance.SpearmanDistance": [[65, null]], "skfolio.distance: Distance Estimators": [[0, "module-2"]], "skfolio.measures.BaseMeasure": [[66, null]], "skfolio.measures.ExtraRiskMeasure": [[67, null]], "skfolio.measures.PerfMeasure": [[68, null]], "skfolio.measures.RatioMeasure": [[69, null]], "skfolio.measures.RiskMeasure": [[70, null]], "skfolio.measures.average_drawdown": [[71, null]], "skfolio.measures.cdar": [[72, null]], "skfolio.measures.cvar": [[73, null]], "skfolio.measures.drawdown_at_risk": [[74, null]], "skfolio.measures.edar": [[75, null]], "skfolio.measures.effective_number_assets": [[76, null]], "skfolio.measures.entropic_risk_measure": [[77, null]], "skfolio.measures.evar": [[78, null]], "skfolio.measures.first_lower_partial_moment": [[79, null]], "skfolio.measures.fourth_central_moment": [[80, null]], "skfolio.measures.fourth_lower_partial_moment": [[81, null]], "skfolio.measures.get_cumulative_returns": [[82, null]], "skfolio.measures.get_drawdowns": [[83, null]], "skfolio.measures.gini_mean_difference": [[84, null]], "skfolio.measures.max_drawdown": [[85, null]], "skfolio.measures.mean": [[86, null]], "skfolio.measures.mean_absolute_deviation": [[87, null]], "skfolio.measures.owa_gmd_weights": [[88, null]], "skfolio.measures.semi_deviation": [[89, null]], "skfolio.measures.semi_variance": [[90, null]], "skfolio.measures.standard_deviation": [[91, null]], "skfolio.measures.third_central_moment": [[92, null]], "skfolio.measures.ulcer_index": [[93, null]], "skfolio.measures.value_at_risk": [[94, null]], "skfolio.measures.variance": [[95, null]], "skfolio.measures.worst_realization": [[96, null]], "skfolio.measures: Measures": [[0, "module-skfolio.measures"]], "skfolio.metrics.make_scorer": [[97, null]], "skfolio.metrics: Metrics": [[0, "module-7"]], "skfolio.model_selection.BaseCombinatorialCV": [[98, null]], "skfolio.model_selection.CombinatorialPurgedCV": [[99, null]], "skfolio.model_selection.WalkForward": [[100, null]], "skfolio.model_selection.cross_val_predict": [[101, null]], "skfolio.model_selection.optimal_folds_number": [[102, null]], "skfolio.model_selection: Model Selection": [[0, "module-6"]], "skfolio.moments.BaseCovariance": [[103, null]], "skfolio.moments.BaseMu": [[104, null]], "skfolio.moments.DenoiseCovariance": [[105, null]], "skfolio.moments.DetoneCovariance": [[106, null]], "skfolio.moments.EWCovariance": [[107, null]], "skfolio.moments.EWMu": [[108, null]], "skfolio.moments.EmpiricalCovariance": [[109, null]], "skfolio.moments.EmpiricalMu": [[110, null]], "skfolio.moments.EquilibriumMu": [[111, null]], "skfolio.moments.GerberCovariance": [[112, null]], "skfolio.moments.GraphicalLassoCV": [[113, null]], "skfolio.moments.ImpliedCovariance": [[114, null]], "skfolio.moments.LedoitWolf": [[115, null]], "skfolio.moments.OAS": [[116, null]], "skfolio.moments.ShrunkCovariance": [[117, null]], "skfolio.moments.ShrunkMu": [[118, null]], "skfolio.moments.ShrunkMuMethods": [[119, null]], "skfolio.moments.covariance: Covariance Estimators": [[0, "module-1"]], "skfolio.moments.mu: Mu Estimators": [[0, "module-0"]], "skfolio.optimization.BaseComposition": [[120, null]], "skfolio.optimization.BaseHierarchicalOptimization": [[121, null]], "skfolio.optimization.ConvexOptimization": [[122, null]], "skfolio.optimization.DistributionallyRobustCVaR": [[123, null]], "skfolio.optimization.EqualWeighted": [[124, null]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[125, null]], "skfolio.optimization.HierarchicalRiskParity": [[126, null]], "skfolio.optimization.InverseVolatility": [[127, null]], "skfolio.optimization.MaximumDiversification": [[128, null]], "skfolio.optimization.MeanRisk": [[129, null]], "skfolio.optimization.NestedClustersOptimization": [[130, null]], "skfolio.optimization.ObjectiveFunction": [[131, null]], "skfolio.optimization.Random": [[132, null]], "skfolio.optimization.RiskBudgeting": [[133, null]], "skfolio.optimization.StackingOptimization": [[134, null]], "skfolio.optimization.cluster: Clustering Optimization Estimators": [[0, "module-skfolio.optimization.cluster"]], "skfolio.optimization.convex: Convex Optimization Estimators": [[0, "module-skfolio.optimization.convex"]], "skfolio.optimization.ensemble: Ensemble Optimization Estimators": [[0, "module-skfolio.optimization.ensemble"]], "skfolio.optimization.naive: Naive Optimization Estimators": [[0, "module-skfolio.optimization.naive"]], "skfolio.population.Population": [[135, null]], "skfolio.population: Population": [[0, "module-skfolio.population"]], "skfolio.portfolio.BasePortfolio": [[136, null]], "skfolio.portfolio.MultiPeriodPortfolio": [[137, null]], "skfolio.portfolio.Portfolio": [[138, null]], "skfolio.portfolio: Portfolio": [[0, "module-skfolio.portfolio"]], "skfolio.pre_selection.DropCorrelated": [[139, null]], "skfolio.pre_selection.SelectComplete": [[140, null]], "skfolio.pre_selection.SelectKExtremes": [[141, null]], "skfolio.pre_selection.SelectNonDominated": [[142, null]], "skfolio.pre_selection.SelectNonExpiring": [[143, null]], "skfolio.pre_selection: Pre-selection Transformers": [[0, "module-5"]], "skfolio.preprocessing.prices_to_returns": [[144, null]], "skfolio.preprocessing: Preprocessing": [[0, "skfolio-preprocessing-preprocessing"]], "skfolio.prior.BaseLoadingMatrix": [[145, null]], "skfolio.prior.BasePrior": [[146, null]], "skfolio.prior.BlackLitterman": [[147, null]], "skfolio.prior.EmpiricalPrior": [[148, null]], "skfolio.prior.FactorModel": [[149, null]], "skfolio.prior.LoadingMatrixRegression": [[150, null]], "skfolio.prior.PriorModel": [[151, null]], "skfolio.prior: Prior Estimators": [[0, "module-skfolio"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[152, null]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[153, null]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[154, null]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[155, null]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[156, null]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[157, null]], "skfolio.uncertainty_set.UncertaintySet": [[158, null]], "skfolio.uncertainty_set: Uncertainty set Estimators": [[0, "module-4"]], "skfolio.utils.stats.NBinsMethod": [[159, null]], "skfolio.utils.stats.assert_is_distance": [[160, null]], "skfolio.utils.stats.assert_is_square": [[161, null]], "skfolio.utils.stats.assert_is_symmetric": [[162, null]], "skfolio.utils.stats.commutation_matrix": [[163, null]], "skfolio.utils.stats.compute_optimal_n_clusters": [[164, null]], "skfolio.utils.stats.corr_to_cov": [[165, null]], "skfolio.utils.stats.cov_nearest": [[166, null]], "skfolio.utils.stats.cov_to_corr": [[167, null]], "skfolio.utils.stats.is_cholesky_dec": [[168, null]], "skfolio.utils.stats.minimize_relative_weight_deviation": [[169, null]], "skfolio.utils.stats.n_bins_freedman": [[170, null]], "skfolio.utils.stats.n_bins_knuth": [[171, null]], "skfolio.utils.stats.rand_weights": [[172, null]], "skfolio.utils.stats.rand_weights_dirichlet": [[173, null]], "skfolio.utils.stats: Stats": [[0, "skfolio-utils-stats-stats"]]}, "docnames": ["api", "auto_examples/1_mean_risk/index", "auto_examples/1_mean_risk/plot_10_tracking_error", "auto_examples/1_mean_risk/plot_11_empirical_prior", "auto_examples/1_mean_risk/plot_12_black_and_litterman", "auto_examples/1_mean_risk/plot_13_factor_model", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio", "auto_examples/1_mean_risk/plot_2_minimum_CVaR", "auto_examples/1_mean_risk/plot_3_efficient_frontier", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar", "auto_examples/1_mean_risk/plot_5_weight_constraints", "auto_examples/1_mean_risk/plot_6_transaction_costs", "auto_examples/1_mean_risk/plot_7_management_fees", "auto_examples/1_mean_risk/plot_8_regularization", "auto_examples/1_mean_risk/plot_9_uncertainty_set", "auto_examples/1_mean_risk/sg_execution_times", "auto_examples/2_risk_budgeting/index", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance", "auto_examples/2_risk_budgeting/plot_2_risk_budgeting_CVaR", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf", "auto_examples/2_risk_budgeting/sg_execution_times", "auto_examples/3_maxiumum_diversification/index", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification", "auto_examples/3_maxiumum_diversification/sg_execution_times", "auto_examples/4_distributionally_robust_cvar/index", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar", "auto_examples/4_distributionally_robust_cvar/sg_execution_times", "auto_examples/5_clustering/index", "auto_examples/5_clustering/plot_1_hrp_cvar", "auto_examples/5_clustering/plot_2_herc_cdar", "auto_examples/5_clustering/plot_3_hrp_vs_herc", "auto_examples/5_clustering/plot_4_nco", "auto_examples/5_clustering/plot_5_nco_grid_search", "auto_examples/5_clustering/sg_execution_times", "auto_examples/6_ensemble/index", "auto_examples/6_ensemble/plot_1_stacking", "auto_examples/6_ensemble/sg_execution_times", "auto_examples/7_pre_selection/index", "auto_examples/7_pre_selection/plot_1_drop_correlated", "auto_examples/7_pre_selection/plot_2_select_best_performers", "auto_examples/7_pre_selection/plot_3_custom_pre_selection_volumes", "auto_examples/7_pre_selection/plot_4_incomplete_dataset", "auto_examples/7_pre_selection/sg_execution_times", "auto_examples/8_metadata_routing/index", "auto_examples/8_metadata_routing/plot_1_implied_volatility", "auto_examples/8_metadata_routing/sg_execution_times", "auto_examples/9_data_preparation/index", "auto_examples/9_data_preparation/plot_1_investment_horizon", "auto_examples/9_data_preparation/sg_execution_times", "auto_examples/index", "auto_examples/sg_execution_times", "generated/skfolio.cluster.HierarchicalClustering", "generated/skfolio.cluster.LinkageMethod", "generated/skfolio.datasets.load_factors_dataset", "generated/skfolio.datasets.load_ftse100_dataset", "generated/skfolio.datasets.load_nasdaq_dataset", "generated/skfolio.datasets.load_sp500_dataset", "generated/skfolio.datasets.load_sp500_index", "generated/skfolio.distance.BaseDistance", "generated/skfolio.distance.CovarianceDistance", "generated/skfolio.distance.DistanceCorrelation", "generated/skfolio.distance.KendallDistance", "generated/skfolio.distance.MutualInformation", "generated/skfolio.distance.PearsonDistance", "generated/skfolio.distance.SpearmanDistance", "generated/skfolio.measures.BaseMeasure", "generated/skfolio.measures.ExtraRiskMeasure", "generated/skfolio.measures.PerfMeasure", "generated/skfolio.measures.RatioMeasure", "generated/skfolio.measures.RiskMeasure", "generated/skfolio.measures.average_drawdown", "generated/skfolio.measures.cdar", "generated/skfolio.measures.cvar", "generated/skfolio.measures.drawdown_at_risk", "generated/skfolio.measures.edar", "generated/skfolio.measures.effective_number_assets", "generated/skfolio.measures.entropic_risk_measure", "generated/skfolio.measures.evar", "generated/skfolio.measures.first_lower_partial_moment", "generated/skfolio.measures.fourth_central_moment", "generated/skfolio.measures.fourth_lower_partial_moment", "generated/skfolio.measures.get_cumulative_returns", "generated/skfolio.measures.get_drawdowns", "generated/skfolio.measures.gini_mean_difference", "generated/skfolio.measures.max_drawdown", "generated/skfolio.measures.mean", "generated/skfolio.measures.mean_absolute_deviation", "generated/skfolio.measures.owa_gmd_weights", "generated/skfolio.measures.semi_deviation", "generated/skfolio.measures.semi_variance", "generated/skfolio.measures.standard_deviation", "generated/skfolio.measures.third_central_moment", "generated/skfolio.measures.ulcer_index", "generated/skfolio.measures.value_at_risk", "generated/skfolio.measures.variance", "generated/skfolio.measures.worst_realization", "generated/skfolio.metrics.make_scorer", "generated/skfolio.model_selection.BaseCombinatorialCV", "generated/skfolio.model_selection.CombinatorialPurgedCV", "generated/skfolio.model_selection.WalkForward", "generated/skfolio.model_selection.cross_val_predict", "generated/skfolio.model_selection.optimal_folds_number", "generated/skfolio.moments.BaseCovariance", "generated/skfolio.moments.BaseMu", "generated/skfolio.moments.DenoiseCovariance", "generated/skfolio.moments.DetoneCovariance", "generated/skfolio.moments.EWCovariance", "generated/skfolio.moments.EWMu", "generated/skfolio.moments.EmpiricalCovariance", "generated/skfolio.moments.EmpiricalMu", "generated/skfolio.moments.EquilibriumMu", "generated/skfolio.moments.GerberCovariance", "generated/skfolio.moments.GraphicalLassoCV", "generated/skfolio.moments.ImpliedCovariance", "generated/skfolio.moments.LedoitWolf", "generated/skfolio.moments.OAS", "generated/skfolio.moments.ShrunkCovariance", "generated/skfolio.moments.ShrunkMu", "generated/skfolio.moments.ShrunkMuMethods", "generated/skfolio.optimization.BaseComposition", "generated/skfolio.optimization.BaseHierarchicalOptimization", "generated/skfolio.optimization.ConvexOptimization", "generated/skfolio.optimization.DistributionallyRobustCVaR", "generated/skfolio.optimization.EqualWeighted", "generated/skfolio.optimization.HierarchicalEqualRiskContribution", "generated/skfolio.optimization.HierarchicalRiskParity", "generated/skfolio.optimization.InverseVolatility", "generated/skfolio.optimization.MaximumDiversification", "generated/skfolio.optimization.MeanRisk", "generated/skfolio.optimization.NestedClustersOptimization", "generated/skfolio.optimization.ObjectiveFunction", "generated/skfolio.optimization.Random", "generated/skfolio.optimization.RiskBudgeting", "generated/skfolio.optimization.StackingOptimization", "generated/skfolio.population.Population", "generated/skfolio.portfolio.BasePortfolio", "generated/skfolio.portfolio.MultiPeriodPortfolio", "generated/skfolio.portfolio.Portfolio", "generated/skfolio.pre_selection.DropCorrelated", "generated/skfolio.pre_selection.SelectComplete", "generated/skfolio.pre_selection.SelectKExtremes", "generated/skfolio.pre_selection.SelectNonDominated", "generated/skfolio.pre_selection.SelectNonExpiring", "generated/skfolio.preprocessing.prices_to_returns", "generated/skfolio.prior.BaseLoadingMatrix", "generated/skfolio.prior.BasePrior", "generated/skfolio.prior.BlackLitterman", "generated/skfolio.prior.EmpiricalPrior", "generated/skfolio.prior.FactorModel", "generated/skfolio.prior.LoadingMatrixRegression", "generated/skfolio.prior.PriorModel", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet", "generated/skfolio.uncertainty_set.UncertaintySet", "generated/skfolio.utils.stats.NBinsMethod", "generated/skfolio.utils.stats.assert_is_distance", "generated/skfolio.utils.stats.assert_is_square", "generated/skfolio.utils.stats.assert_is_symmetric", "generated/skfolio.utils.stats.commutation_matrix", "generated/skfolio.utils.stats.compute_optimal_n_clusters", "generated/skfolio.utils.stats.corr_to_cov", "generated/skfolio.utils.stats.cov_nearest", "generated/skfolio.utils.stats.cov_to_corr", "generated/skfolio.utils.stats.is_cholesky_dec", "generated/skfolio.utils.stats.minimize_relative_weight_deviation", "generated/skfolio.utils.stats.n_bins_freedman", "generated/skfolio.utils.stats.n_bins_knuth", "generated/skfolio.utils.stats.rand_weights", "generated/skfolio.utils.stats.rand_weights_dirichlet", "index", "sg_execution_times", "user_guide/cluster", "user_guide/covariance", "user_guide/data_preparation", "user_guide/datasets", "user_guide/distance", "user_guide/expected_returns", "user_guide/hyper_parameters_tuning", "user_guide/index", "user_guide/install", "user_guide/metadata_routing", "user_guide/model_selection", "user_guide/optimization", "user_guide/population", "user_guide/portfolio", "user_guide/pre_selection", "user_guide/prior", "user_guide/uncertainty_set"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "auto_examples/1_mean_risk/index.rst", "auto_examples/1_mean_risk/plot_10_tracking_error.rst", "auto_examples/1_mean_risk/plot_11_empirical_prior.rst", "auto_examples/1_mean_risk/plot_12_black_and_litterman.rst", "auto_examples/1_mean_risk/plot_13_factor_model.rst", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model.rst", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio.rst", "auto_examples/1_mean_risk/plot_2_minimum_CVaR.rst", "auto_examples/1_mean_risk/plot_3_efficient_frontier.rst", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar.rst", "auto_examples/1_mean_risk/plot_5_weight_constraints.rst", "auto_examples/1_mean_risk/plot_6_transaction_costs.rst", "auto_examples/1_mean_risk/plot_7_management_fees.rst", "auto_examples/1_mean_risk/plot_8_regularization.rst", "auto_examples/1_mean_risk/plot_9_uncertainty_set.rst", "auto_examples/1_mean_risk/sg_execution_times.rst", "auto_examples/2_risk_budgeting/index.rst", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance.rst", "auto_examples/2_risk_budgeting/plot_2_risk_budgeting_CVaR.rst", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf.rst", "auto_examples/2_risk_budgeting/sg_execution_times.rst", "auto_examples/3_maxiumum_diversification/index.rst", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification.rst", "auto_examples/3_maxiumum_diversification/sg_execution_times.rst", "auto_examples/4_distributionally_robust_cvar/index.rst", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar.rst", "auto_examples/4_distributionally_robust_cvar/sg_execution_times.rst", "auto_examples/5_clustering/index.rst", "auto_examples/5_clustering/plot_1_hrp_cvar.rst", "auto_examples/5_clustering/plot_2_herc_cdar.rst", "auto_examples/5_clustering/plot_3_hrp_vs_herc.rst", "auto_examples/5_clustering/plot_4_nco.rst", "auto_examples/5_clustering/plot_5_nco_grid_search.rst", "auto_examples/5_clustering/sg_execution_times.rst", "auto_examples/6_ensemble/index.rst", "auto_examples/6_ensemble/plot_1_stacking.rst", "auto_examples/6_ensemble/sg_execution_times.rst", "auto_examples/7_pre_selection/index.rst", "auto_examples/7_pre_selection/plot_1_drop_correlated.rst", "auto_examples/7_pre_selection/plot_2_select_best_performers.rst", "auto_examples/7_pre_selection/plot_3_custom_pre_selection_volumes.rst", "auto_examples/7_pre_selection/plot_4_incomplete_dataset.rst", "auto_examples/7_pre_selection/sg_execution_times.rst", "auto_examples/8_metadata_routing/index.rst", "auto_examples/8_metadata_routing/plot_1_implied_volatility.rst", "auto_examples/8_metadata_routing/sg_execution_times.rst", "auto_examples/9_data_preparation/index.rst", "auto_examples/9_data_preparation/plot_1_investment_horizon.rst", "auto_examples/9_data_preparation/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "generated/skfolio.cluster.HierarchicalClustering.rst", "generated/skfolio.cluster.LinkageMethod.rst", "generated/skfolio.datasets.load_factors_dataset.rst", "generated/skfolio.datasets.load_ftse100_dataset.rst", "generated/skfolio.datasets.load_nasdaq_dataset.rst", "generated/skfolio.datasets.load_sp500_dataset.rst", "generated/skfolio.datasets.load_sp500_index.rst", "generated/skfolio.distance.BaseDistance.rst", "generated/skfolio.distance.CovarianceDistance.rst", "generated/skfolio.distance.DistanceCorrelation.rst", "generated/skfolio.distance.KendallDistance.rst", "generated/skfolio.distance.MutualInformation.rst", "generated/skfolio.distance.PearsonDistance.rst", "generated/skfolio.distance.SpearmanDistance.rst", "generated/skfolio.measures.BaseMeasure.rst", "generated/skfolio.measures.ExtraRiskMeasure.rst", "generated/skfolio.measures.PerfMeasure.rst", "generated/skfolio.measures.RatioMeasure.rst", "generated/skfolio.measures.RiskMeasure.rst", "generated/skfolio.measures.average_drawdown.rst", "generated/skfolio.measures.cdar.rst", "generated/skfolio.measures.cvar.rst", "generated/skfolio.measures.drawdown_at_risk.rst", "generated/skfolio.measures.edar.rst", "generated/skfolio.measures.effective_number_assets.rst", "generated/skfolio.measures.entropic_risk_measure.rst", "generated/skfolio.measures.evar.rst", "generated/skfolio.measures.first_lower_partial_moment.rst", "generated/skfolio.measures.fourth_central_moment.rst", "generated/skfolio.measures.fourth_lower_partial_moment.rst", "generated/skfolio.measures.get_cumulative_returns.rst", "generated/skfolio.measures.get_drawdowns.rst", "generated/skfolio.measures.gini_mean_difference.rst", "generated/skfolio.measures.max_drawdown.rst", "generated/skfolio.measures.mean.rst", "generated/skfolio.measures.mean_absolute_deviation.rst", "generated/skfolio.measures.owa_gmd_weights.rst", "generated/skfolio.measures.semi_deviation.rst", "generated/skfolio.measures.semi_variance.rst", "generated/skfolio.measures.standard_deviation.rst", "generated/skfolio.measures.third_central_moment.rst", "generated/skfolio.measures.ulcer_index.rst", "generated/skfolio.measures.value_at_risk.rst", "generated/skfolio.measures.variance.rst", "generated/skfolio.measures.worst_realization.rst", "generated/skfolio.metrics.make_scorer.rst", "generated/skfolio.model_selection.BaseCombinatorialCV.rst", "generated/skfolio.model_selection.CombinatorialPurgedCV.rst", "generated/skfolio.model_selection.WalkForward.rst", "generated/skfolio.model_selection.cross_val_predict.rst", "generated/skfolio.model_selection.optimal_folds_number.rst", "generated/skfolio.moments.BaseCovariance.rst", "generated/skfolio.moments.BaseMu.rst", "generated/skfolio.moments.DenoiseCovariance.rst", "generated/skfolio.moments.DetoneCovariance.rst", "generated/skfolio.moments.EWCovariance.rst", "generated/skfolio.moments.EWMu.rst", "generated/skfolio.moments.EmpiricalCovariance.rst", "generated/skfolio.moments.EmpiricalMu.rst", "generated/skfolio.moments.EquilibriumMu.rst", "generated/skfolio.moments.GerberCovariance.rst", "generated/skfolio.moments.GraphicalLassoCV.rst", "generated/skfolio.moments.ImpliedCovariance.rst", "generated/skfolio.moments.LedoitWolf.rst", "generated/skfolio.moments.OAS.rst", "generated/skfolio.moments.ShrunkCovariance.rst", "generated/skfolio.moments.ShrunkMu.rst", "generated/skfolio.moments.ShrunkMuMethods.rst", "generated/skfolio.optimization.BaseComposition.rst", "generated/skfolio.optimization.BaseHierarchicalOptimization.rst", "generated/skfolio.optimization.ConvexOptimization.rst", "generated/skfolio.optimization.DistributionallyRobustCVaR.rst", "generated/skfolio.optimization.EqualWeighted.rst", "generated/skfolio.optimization.HierarchicalEqualRiskContribution.rst", "generated/skfolio.optimization.HierarchicalRiskParity.rst", "generated/skfolio.optimization.InverseVolatility.rst", "generated/skfolio.optimization.MaximumDiversification.rst", "generated/skfolio.optimization.MeanRisk.rst", "generated/skfolio.optimization.NestedClustersOptimization.rst", "generated/skfolio.optimization.ObjectiveFunction.rst", "generated/skfolio.optimization.Random.rst", "generated/skfolio.optimization.RiskBudgeting.rst", "generated/skfolio.optimization.StackingOptimization.rst", "generated/skfolio.population.Population.rst", "generated/skfolio.portfolio.BasePortfolio.rst", "generated/skfolio.portfolio.MultiPeriodPortfolio.rst", "generated/skfolio.portfolio.Portfolio.rst", "generated/skfolio.pre_selection.DropCorrelated.rst", "generated/skfolio.pre_selection.SelectComplete.rst", "generated/skfolio.pre_selection.SelectKExtremes.rst", "generated/skfolio.pre_selection.SelectNonDominated.rst", "generated/skfolio.pre_selection.SelectNonExpiring.rst", "generated/skfolio.preprocessing.prices_to_returns.rst", "generated/skfolio.prior.BaseLoadingMatrix.rst", "generated/skfolio.prior.BasePrior.rst", "generated/skfolio.prior.BlackLitterman.rst", "generated/skfolio.prior.EmpiricalPrior.rst", "generated/skfolio.prior.FactorModel.rst", "generated/skfolio.prior.LoadingMatrixRegression.rst", "generated/skfolio.prior.PriorModel.rst", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.UncertaintySet.rst", "generated/skfolio.utils.stats.NBinsMethod.rst", "generated/skfolio.utils.stats.assert_is_distance.rst", "generated/skfolio.utils.stats.assert_is_square.rst", "generated/skfolio.utils.stats.assert_is_symmetric.rst", "generated/skfolio.utils.stats.commutation_matrix.rst", "generated/skfolio.utils.stats.compute_optimal_n_clusters.rst", "generated/skfolio.utils.stats.corr_to_cov.rst", "generated/skfolio.utils.stats.cov_nearest.rst", "generated/skfolio.utils.stats.cov_to_corr.rst", "generated/skfolio.utils.stats.is_cholesky_dec.rst", "generated/skfolio.utils.stats.minimize_relative_weight_deviation.rst", "generated/skfolio.utils.stats.n_bins_freedman.rst", "generated/skfolio.utils.stats.n_bins_knuth.rst", "generated/skfolio.utils.stats.rand_weights.rst", "generated/skfolio.utils.stats.rand_weights_dirichlet.rst", "index.rst", "sg_execution_times.rst", "user_guide/cluster.rst", "user_guide/covariance.rst", "user_guide/data_preparation.rst", "user_guide/datasets.rst", "user_guide/distance.rst", "user_guide/expected_returns.rst", "user_guide/hyper_parameters_tuning.rst", "user_guide/index.rst", "user_guide/install.rst", "user_guide/metadata_routing.rst", "user_guide/model_selection.rst", "user_guide/optimization.rst", "user_guide/population.rst", "user_guide/portfolio.rst", "user_guide/pre_selection.rst", "user_guide/prior.rst", "user_guide/uncertainty_set.rst"], "indexentries": {"annualized_factor (skfolio.portfolio.baseportfolio property)": [[136, "skfolio.portfolio.BasePortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.annualized_factor", false]], "append() (skfolio.population.population method)": [[135, "skfolio.population.Population.append", false]], "append() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.append", false]], "assert_is_distance() (in module skfolio.utils.stats)": [[160, "skfolio.utils.stats.assert_is_distance", false]], "assert_is_square() (in module skfolio.utils.stats)": [[161, "skfolio.utils.stats.assert_is_square", false]], "assert_is_symmetric() (in module skfolio.utils.stats)": [[162, "skfolio.utils.stats.assert_is_symmetric", false]], "assets (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.assets", false]], "average_drawdown() (in module skfolio.measures)": [[71, "skfolio.measures.average_drawdown", false]], "basecombinatorialcv (class in skfolio.model_selection)": [[98, "skfolio.model_selection.BaseCombinatorialCV", false]], "basecomposition (class in skfolio.optimization)": [[120, "skfolio.optimization.BaseComposition", false]], "basecovariance (class in skfolio.moments)": [[103, "skfolio.moments.BaseCovariance", false]], "basecovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[152, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet", false]], "basedistance (class in skfolio.distance)": [[59, "skfolio.distance.BaseDistance", false]], "basehierarchicaloptimization (class in skfolio.optimization)": [[121, "skfolio.optimization.BaseHierarchicalOptimization", false]], "baseloadingmatrix (class in skfolio.prior)": [[145, "skfolio.prior.BaseLoadingMatrix", false]], "basemeasure (class in skfolio.measures)": [[66, "skfolio.measures.BaseMeasure", false]], "basemu (class in skfolio.moments)": [[104, "skfolio.moments.BaseMu", false]], "basemuuncertaintyset (class in skfolio.uncertainty_set)": [[153, "skfolio.uncertainty_set.BaseMuUncertaintySet", false]], "baseportfolio (class in skfolio.portfolio)": [[136, "skfolio.portfolio.BasePortfolio", false]], "baseprior (class in skfolio.prior)": [[146, "skfolio.prior.BasePrior", false]], "binary_train_test_sets (skfolio.model_selection.combinatorialpurgedcv property)": [[99, "skfolio.model_selection.CombinatorialPurgedCV.binary_train_test_sets", false]], "blacklitterman (class in skfolio.prior)": [[147, "skfolio.prior.BlackLitterman", false]], "bootstrapcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[154, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", false]], "bootstrapmuuncertaintyset (class in skfolio.uncertainty_set)": [[155, "skfolio.uncertainty_set.BootstrapMuUncertaintySet", false]], "capitalize() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.capitalize", false]], "capitalize() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.capitalize", false]], "capitalize() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.capitalize", false]], "capitalize() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.capitalize", false]], "capitalize() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.capitalize", false]], "capitalize() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.capitalize", false]], "capitalize() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.capitalize", false]], "capitalize() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.capitalize", false]], "casefold() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.casefold", false]], "casefold() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.casefold", false]], "casefold() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.casefold", false]], "casefold() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.casefold", false]], "casefold() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.casefold", false]], "casefold() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.casefold", false]], "casefold() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.casefold", false]], "casefold() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.casefold", false]], "cdar() (in module skfolio.measures)": [[72, "skfolio.measures.cdar", false]], "center() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.center", false]], "center() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.center", false]], "center() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.center", false]], "center() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.center", false]], "center() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.center", false]], "center() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.center", false]], "center() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.center", false]], "center() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.center", false]], "clear() (skfolio.population.population method)": [[135, "skfolio.population.Population.clear", false]], "clear() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.clear", false]], "clear() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.clear", false]], "clear() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.clear", false]], "combinatorialpurgedcv (class in skfolio.model_selection)": [[99, "skfolio.model_selection.CombinatorialPurgedCV", false]], "commutation_matrix() (in module skfolio.utils.stats)": [[163, "skfolio.utils.stats.commutation_matrix", false]], "composition (skfolio.portfolio.baseportfolio property)": [[136, "skfolio.portfolio.BasePortfolio.composition", false]], "composition (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.composition", false]], "composition (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.composition", false]], "composition() (skfolio.population.population method)": [[135, "skfolio.population.Population.composition", false]], "compute_optimal_n_clusters() (in module skfolio.utils.stats)": [[164, "skfolio.utils.stats.compute_optimal_n_clusters", false]], "contribution() (skfolio.population.population method)": [[135, "skfolio.population.Population.contribution", false]], "contribution() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.contribution", false]], "contribution() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.contribution", false]], "contribution() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.contribution", false]], "convexoptimization (class in skfolio.optimization)": [[122, "skfolio.optimization.ConvexOptimization", false]], "copy() (skfolio.population.population method)": [[135, "skfolio.population.Population.copy", false]], "copy() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.copy", false]], "copy() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.copy", false]], "copy() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.copy", false]], "corr_to_cov() (in module skfolio.utils.stats)": [[165, "skfolio.utils.stats.corr_to_cov", false]], "count() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.count", false]], "count() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.count", false]], "count() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.count", false]], "count() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.count", false]], "count() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.count", false]], "count() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.count", false]], "count() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.count", false]], "count() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.count", false]], "count() (skfolio.population.population method)": [[135, "skfolio.population.Population.count", false]], "cov_nearest() (in module skfolio.utils.stats)": [[166, "skfolio.utils.stats.cov_nearest", false]], "cov_to_corr() (in module skfolio.utils.stats)": [[167, "skfolio.utils.stats.cov_to_corr", false]], "covariancedistance (class in skfolio.distance)": [[60, "skfolio.distance.CovarianceDistance", false]], "cross_val_predict() (in module skfolio.model_selection)": [[101, "skfolio.model_selection.cross_val_predict", false]], "cumulative_returns (skfolio.portfolio.baseportfolio attribute)": [[136, "skfolio.portfolio.BasePortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.multiperiodportfolio attribute)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.portfolio attribute)": [[138, "skfolio.portfolio.Portfolio.cumulative_returns", false]], "cumulative_returns_df (skfolio.portfolio.baseportfolio property)": [[136, "skfolio.portfolio.BasePortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.cumulative_returns_df", false]], "cvar() (in module skfolio.measures)": [[73, "skfolio.measures.cvar", false]], "denoisecovariance (class in skfolio.moments)": [[105, "skfolio.moments.DenoiseCovariance", false]], "detonecovariance (class in skfolio.moments)": [[106, "skfolio.moments.DetoneCovariance", false]], "distancecorrelation (class in skfolio.distance)": [[61, "skfolio.distance.DistanceCorrelation", false]], "distributionallyrobustcvar (class in skfolio.optimization)": [[123, "skfolio.optimization.DistributionallyRobustCVaR", false]], "diversification (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.diversification", false]], "dominates() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.dominates", false]], "dominates() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.dominates", false]], "dominates() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.dominates", false]], "drawdown_at_risk() (in module skfolio.measures)": [[74, "skfolio.measures.drawdown_at_risk", false]], "drawdowns (skfolio.portfolio.baseportfolio attribute)": [[136, "skfolio.portfolio.BasePortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.multiperiodportfolio attribute)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.portfolio attribute)": [[138, "skfolio.portfolio.Portfolio.drawdowns", false]], "dropcorrelated (class in skfolio.pre_selection)": [[139, "skfolio.pre_selection.DropCorrelated", false]], "edar() (in module skfolio.measures)": [[75, "skfolio.measures.edar", false]], "effective_number_assets (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.effective_number_assets", false]], "effective_number_assets() (in module skfolio.measures)": [[76, "skfolio.measures.effective_number_assets", false]], "empiricalcovariance (class in skfolio.moments)": [[109, "skfolio.moments.EmpiricalCovariance", false]], "empiricalcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[156, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", false]], "empiricalmu (class in skfolio.moments)": [[110, "skfolio.moments.EmpiricalMu", false]], "empiricalmuuncertaintyset (class in skfolio.uncertainty_set)": [[157, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet", false]], "empiricalprior (class in skfolio.prior)": [[148, "skfolio.prior.EmpiricalPrior", false]], "encode() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.encode", false]], "encode() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.encode", false]], "encode() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.encode", false]], "encode() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.encode", false]], "encode() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.encode", false]], "encode() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.encode", false]], "encode() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.encode", false]], "encode() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.encode", false]], "endswith() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.endswith", false]], "endswith() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.endswith", false]], "endswith() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.endswith", false]], "endswith() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.endswith", false]], "endswith() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.endswith", false]], "endswith() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.endswith", false]], "endswith() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.endswith", false]], "endswith() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.endswith", false]], "entropic_risk_measure() (in module skfolio.measures)": [[77, "skfolio.measures.entropic_risk_measure", false]], "equalweighted (class in skfolio.optimization)": [[124, "skfolio.optimization.EqualWeighted", false]], "equilibriummu (class in skfolio.moments)": [[111, "skfolio.moments.EquilibriumMu", false]], "error_norm() (skfolio.moments.graphicallassocv method)": [[113, "skfolio.moments.GraphicalLassoCV.error_norm", false]], "error_norm() (skfolio.moments.ledoitwolf method)": [[115, "skfolio.moments.LedoitWolf.error_norm", false]], "error_norm() (skfolio.moments.oas method)": [[116, "skfolio.moments.OAS.error_norm", false]], "error_norm() (skfolio.moments.shrunkcovariance method)": [[117, "skfolio.moments.ShrunkCovariance.error_norm", false]], "evar() (in module skfolio.measures)": [[78, "skfolio.measures.evar", false]], "ewcovariance (class in skfolio.moments)": [[107, "skfolio.moments.EWCovariance", false]], "ewmu (class in skfolio.moments)": [[108, "skfolio.moments.EWMu", false]], "expandtabs() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.expandtabs", false]], "expandtabs() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.expandtabs", false]], "expandtabs() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.expandtabs", false]], "expandtabs() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.expandtabs", false]], "expected_returns_from_assets() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.expected_returns_from_assets", false]], "extend() (skfolio.population.population method)": [[135, "skfolio.population.Population.extend", false]], "extrariskmeasure (class in skfolio.measures)": [[67, "skfolio.measures.ExtraRiskMeasure", false]], "factormodel (class in skfolio.prior)": [[149, "skfolio.prior.FactorModel", false]], "filter() (skfolio.population.population method)": [[135, "skfolio.population.Population.filter", false]], "find() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.find", false]], "find() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.find", false]], "find() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.find", false]], "find() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.find", false]], "find() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.find", false]], "find() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.find", false]], "find() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.find", false]], "find() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.find", false]], "first_lower_partial_moment() (in module skfolio.measures)": [[79, "skfolio.measures.first_lower_partial_moment", false]], "fit() (skfolio.cluster.hierarchicalclustering method)": [[52, "skfolio.cluster.HierarchicalClustering.fit", false]], "fit() (skfolio.distance.basedistance method)": [[59, "skfolio.distance.BaseDistance.fit", false]], "fit() (skfolio.distance.covariancedistance method)": [[60, "skfolio.distance.CovarianceDistance.fit", false]], "fit() (skfolio.distance.distancecorrelation method)": [[61, "skfolio.distance.DistanceCorrelation.fit", false]], "fit() (skfolio.distance.kendalldistance method)": [[62, "skfolio.distance.KendallDistance.fit", false]], "fit() (skfolio.distance.mutualinformation method)": [[63, "skfolio.distance.MutualInformation.fit", false]], "fit() (skfolio.distance.pearsondistance method)": [[64, "skfolio.distance.PearsonDistance.fit", false]], "fit() (skfolio.distance.spearmandistance method)": [[65, "skfolio.distance.SpearmanDistance.fit", false]], "fit() (skfolio.moments.denoisecovariance method)": [[105, "skfolio.moments.DenoiseCovariance.fit", false]], "fit() (skfolio.moments.detonecovariance method)": [[106, "skfolio.moments.DetoneCovariance.fit", false]], "fit() (skfolio.moments.empiricalcovariance method)": [[109, "skfolio.moments.EmpiricalCovariance.fit", false]], "fit() (skfolio.moments.empiricalmu method)": [[110, "skfolio.moments.EmpiricalMu.fit", false]], "fit() (skfolio.moments.equilibriummu method)": [[111, "skfolio.moments.EquilibriumMu.fit", false]], "fit() (skfolio.moments.ewcovariance method)": [[107, "skfolio.moments.EWCovariance.fit", false]], "fit() (skfolio.moments.ewmu method)": [[108, "skfolio.moments.EWMu.fit", false]], "fit() (skfolio.moments.gerbercovariance method)": [[112, "skfolio.moments.GerberCovariance.fit", false]], "fit() (skfolio.moments.graphicallassocv method)": [[113, "skfolio.moments.GraphicalLassoCV.fit", false]], "fit() (skfolio.moments.impliedcovariance method)": [[114, "skfolio.moments.ImpliedCovariance.fit", false]], "fit() (skfolio.moments.ledoitwolf method)": [[115, "skfolio.moments.LedoitWolf.fit", false]], "fit() (skfolio.moments.oas method)": [[116, "skfolio.moments.OAS.fit", false]], "fit() (skfolio.moments.shrunkcovariance method)": [[117, "skfolio.moments.ShrunkCovariance.fit", false]], "fit() (skfolio.moments.shrunkmu method)": [[118, "skfolio.moments.ShrunkMu.fit", false]], "fit() (skfolio.optimization.distributionallyrobustcvar method)": [[123, "skfolio.optimization.DistributionallyRobustCVaR.fit", false]], "fit() (skfolio.optimization.equalweighted method)": [[124, "skfolio.optimization.EqualWeighted.fit", false]], "fit() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[125, "skfolio.optimization.HierarchicalEqualRiskContribution.fit", false]], "fit() (skfolio.optimization.hierarchicalriskparity method)": [[126, "skfolio.optimization.HierarchicalRiskParity.fit", false]], "fit() (skfolio.optimization.inversevolatility method)": [[127, "skfolio.optimization.InverseVolatility.fit", false]], "fit() (skfolio.optimization.maximumdiversification method)": [[128, "skfolio.optimization.MaximumDiversification.fit", false]], "fit() (skfolio.optimization.meanrisk method)": [[129, "skfolio.optimization.MeanRisk.fit", false]], "fit() (skfolio.optimization.nestedclustersoptimization method)": [[130, "skfolio.optimization.NestedClustersOptimization.fit", false]], "fit() (skfolio.optimization.random method)": [[132, "skfolio.optimization.Random.fit", false]], "fit() (skfolio.optimization.riskbudgeting method)": [[133, "skfolio.optimization.RiskBudgeting.fit", false]], "fit() (skfolio.optimization.stackingoptimization method)": [[134, "skfolio.optimization.StackingOptimization.fit", false]], "fit() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.fit", false]], "fit() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.fit", false]], "fit() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.fit", false]], "fit() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.fit", false]], "fit() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.fit", false]], "fit() (skfolio.prior.blacklitterman method)": [[147, "skfolio.prior.BlackLitterman.fit", false]], "fit() (skfolio.prior.empiricalprior method)": [[148, "skfolio.prior.EmpiricalPrior.fit", false]], "fit() (skfolio.prior.factormodel method)": [[149, "skfolio.prior.FactorModel.fit", false]], "fit() (skfolio.prior.loadingmatrixregression method)": [[150, "skfolio.prior.LoadingMatrixRegression.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[154, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[155, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[156, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[157, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.fit", false]], "fit_predict() (skfolio.cluster.hierarchicalclustering method)": [[52, "skfolio.cluster.HierarchicalClustering.fit_predict", false]], "fit_predict() (skfolio.optimization.basehierarchicaloptimization method)": [[121, "skfolio.optimization.BaseHierarchicalOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.convexoptimization method)": [[122, "skfolio.optimization.ConvexOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.distributionallyrobustcvar method)": [[123, "skfolio.optimization.DistributionallyRobustCVaR.fit_predict", false]], "fit_predict() (skfolio.optimization.equalweighted method)": [[124, "skfolio.optimization.EqualWeighted.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[125, "skfolio.optimization.HierarchicalEqualRiskContribution.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalriskparity method)": [[126, "skfolio.optimization.HierarchicalRiskParity.fit_predict", false]], "fit_predict() (skfolio.optimization.inversevolatility method)": [[127, "skfolio.optimization.InverseVolatility.fit_predict", false]], "fit_predict() (skfolio.optimization.maximumdiversification method)": [[128, "skfolio.optimization.MaximumDiversification.fit_predict", false]], "fit_predict() (skfolio.optimization.meanrisk method)": [[129, "skfolio.optimization.MeanRisk.fit_predict", false]], "fit_predict() (skfolio.optimization.nestedclustersoptimization method)": [[130, "skfolio.optimization.NestedClustersOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.random method)": [[132, "skfolio.optimization.Random.fit_predict", false]], "fit_predict() (skfolio.optimization.riskbudgeting method)": [[133, "skfolio.optimization.RiskBudgeting.fit_predict", false]], "fit_predict() (skfolio.optimization.stackingoptimization method)": [[134, "skfolio.optimization.StackingOptimization.fit_predict", false]], "fit_transform() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.fit_transform", false]], "fitness (skfolio.portfolio.baseportfolio attribute)": [[136, "skfolio.portfolio.BasePortfolio.fitness", false]], "fitness (skfolio.portfolio.multiperiodportfolio attribute)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.fitness", false]], "fitness (skfolio.portfolio.portfolio attribute)": [[138, "skfolio.portfolio.Portfolio.fitness", false]], "fitness_measures (skfolio.portfolio.baseportfolio property)": [[136, "skfolio.portfolio.BasePortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.fitness_measures", false]], "format() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.format", false]], "format() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.format", false]], "format() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.format", false]], "format() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.format", false]], "format() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.format", false]], "format() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.format", false]], "format() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.format", false]], "format() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.format", false]], "format_map() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.format_map", false]], "format_map() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.format_map", false]], "format_map() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.format_map", false]], "format_map() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.format_map", false]], "format_map() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.format_map", false]], "format_map() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.format_map", false]], "format_map() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.format_map", false]], "format_map() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.format_map", false]], "fourth_central_moment() (in module skfolio.measures)": [[80, "skfolio.measures.fourth_central_moment", false]], "fourth_lower_partial_moment() (in module skfolio.measures)": [[81, "skfolio.measures.fourth_lower_partial_moment", false]], "gerbercovariance (class in skfolio.moments)": [[112, "skfolio.moments.GerberCovariance", false]], "get_cumulative_returns() (in module skfolio.measures)": [[82, "skfolio.measures.get_cumulative_returns", false]], "get_drawdowns() (in module skfolio.measures)": [[83, "skfolio.measures.get_drawdowns", false]], "get_feature_names_out() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.get_feature_names_out", false]], "get_measure() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.get_measure", false]], "get_metadata_routing() (skfolio.cluster.hierarchicalclustering method)": [[52, "skfolio.cluster.HierarchicalClustering.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.basedistance method)": [[59, "skfolio.distance.BaseDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.covariancedistance method)": [[60, "skfolio.distance.CovarianceDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.distancecorrelation method)": [[61, "skfolio.distance.DistanceCorrelation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.kendalldistance method)": [[62, "skfolio.distance.KendallDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.mutualinformation method)": [[63, "skfolio.distance.MutualInformation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.pearsondistance method)": [[64, "skfolio.distance.PearsonDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.spearmandistance method)": [[65, "skfolio.distance.SpearmanDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.model_selection.walkforward method)": [[100, "skfolio.model_selection.WalkForward.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basecovariance method)": [[103, "skfolio.moments.BaseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basemu method)": [[104, "skfolio.moments.BaseMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.denoisecovariance method)": [[105, "skfolio.moments.DenoiseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.detonecovariance method)": [[106, "skfolio.moments.DetoneCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalcovariance method)": [[109, "skfolio.moments.EmpiricalCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalmu method)": [[110, "skfolio.moments.EmpiricalMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.equilibriummu method)": [[111, "skfolio.moments.EquilibriumMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewcovariance method)": [[107, "skfolio.moments.EWCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewmu method)": [[108, "skfolio.moments.EWMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.gerbercovariance method)": [[112, "skfolio.moments.GerberCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.graphicallassocv method)": [[113, "skfolio.moments.GraphicalLassoCV.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.impliedcovariance method)": [[114, "skfolio.moments.ImpliedCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ledoitwolf method)": [[115, "skfolio.moments.LedoitWolf.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.oas method)": [[116, "skfolio.moments.OAS.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkcovariance method)": [[117, "skfolio.moments.ShrunkCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkmu method)": [[118, "skfolio.moments.ShrunkMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basecomposition method)": [[120, "skfolio.optimization.BaseComposition.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basehierarchicaloptimization method)": [[121, "skfolio.optimization.BaseHierarchicalOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.convexoptimization method)": [[122, "skfolio.optimization.ConvexOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.distributionallyrobustcvar method)": [[123, "skfolio.optimization.DistributionallyRobustCVaR.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.equalweighted method)": [[124, "skfolio.optimization.EqualWeighted.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[125, "skfolio.optimization.HierarchicalEqualRiskContribution.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalriskparity method)": [[126, "skfolio.optimization.HierarchicalRiskParity.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.inversevolatility method)": [[127, "skfolio.optimization.InverseVolatility.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.maximumdiversification method)": [[128, "skfolio.optimization.MaximumDiversification.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.meanrisk method)": [[129, "skfolio.optimization.MeanRisk.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.nestedclustersoptimization method)": [[130, "skfolio.optimization.NestedClustersOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.random method)": [[132, "skfolio.optimization.Random.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.riskbudgeting method)": [[133, "skfolio.optimization.RiskBudgeting.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.stackingoptimization method)": [[134, "skfolio.optimization.StackingOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseloadingmatrix method)": [[145, "skfolio.prior.BaseLoadingMatrix.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseprior method)": [[146, "skfolio.prior.BasePrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.blacklitterman method)": [[147, "skfolio.prior.BlackLitterman.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.empiricalprior method)": [[148, "skfolio.prior.EmpiricalPrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.factormodel method)": [[149, "skfolio.prior.FactorModel.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.loadingmatrixregression method)": [[150, "skfolio.prior.LoadingMatrixRegression.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[152, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[153, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[154, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[155, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[156, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[157, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_metadata_routing", false]], "get_n_splits() (skfolio.model_selection.walkforward method)": [[100, "skfolio.model_selection.WalkForward.get_n_splits", false]], "get_params() (skfolio.cluster.hierarchicalclustering method)": [[52, "skfolio.cluster.HierarchicalClustering.get_params", false]], "get_params() (skfolio.distance.basedistance method)": [[59, "skfolio.distance.BaseDistance.get_params", false]], "get_params() (skfolio.distance.covariancedistance method)": [[60, "skfolio.distance.CovarianceDistance.get_params", false]], "get_params() (skfolio.distance.distancecorrelation method)": [[61, "skfolio.distance.DistanceCorrelation.get_params", false]], "get_params() (skfolio.distance.kendalldistance method)": [[62, "skfolio.distance.KendallDistance.get_params", false]], "get_params() (skfolio.distance.mutualinformation method)": [[63, "skfolio.distance.MutualInformation.get_params", false]], "get_params() (skfolio.distance.pearsondistance method)": [[64, "skfolio.distance.PearsonDistance.get_params", false]], "get_params() (skfolio.distance.spearmandistance method)": [[65, "skfolio.distance.SpearmanDistance.get_params", false]], "get_params() (skfolio.moments.basecovariance method)": [[103, "skfolio.moments.BaseCovariance.get_params", false]], "get_params() (skfolio.moments.basemu method)": [[104, "skfolio.moments.BaseMu.get_params", false]], "get_params() (skfolio.moments.denoisecovariance method)": [[105, "skfolio.moments.DenoiseCovariance.get_params", false]], "get_params() (skfolio.moments.detonecovariance method)": [[106, "skfolio.moments.DetoneCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalcovariance method)": [[109, "skfolio.moments.EmpiricalCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalmu method)": [[110, "skfolio.moments.EmpiricalMu.get_params", false]], "get_params() (skfolio.moments.equilibriummu method)": [[111, "skfolio.moments.EquilibriumMu.get_params", false]], "get_params() (skfolio.moments.ewcovariance method)": [[107, "skfolio.moments.EWCovariance.get_params", false]], "get_params() (skfolio.moments.ewmu method)": [[108, "skfolio.moments.EWMu.get_params", false]], "get_params() (skfolio.moments.gerbercovariance method)": [[112, "skfolio.moments.GerberCovariance.get_params", false]], "get_params() (skfolio.moments.graphicallassocv method)": [[113, "skfolio.moments.GraphicalLassoCV.get_params", false]], "get_params() (skfolio.moments.impliedcovariance method)": [[114, "skfolio.moments.ImpliedCovariance.get_params", false]], "get_params() (skfolio.moments.ledoitwolf method)": [[115, "skfolio.moments.LedoitWolf.get_params", false]], "get_params() (skfolio.moments.oas method)": [[116, "skfolio.moments.OAS.get_params", false]], "get_params() (skfolio.moments.shrunkcovariance method)": [[117, "skfolio.moments.ShrunkCovariance.get_params", false]], "get_params() (skfolio.moments.shrunkmu method)": [[118, "skfolio.moments.ShrunkMu.get_params", false]], "get_params() (skfolio.optimization.basecomposition method)": [[120, "skfolio.optimization.BaseComposition.get_params", false]], "get_params() (skfolio.optimization.basehierarchicaloptimization method)": [[121, "skfolio.optimization.BaseHierarchicalOptimization.get_params", false]], "get_params() (skfolio.optimization.convexoptimization method)": [[122, "skfolio.optimization.ConvexOptimization.get_params", false]], "get_params() (skfolio.optimization.distributionallyrobustcvar method)": [[123, "skfolio.optimization.DistributionallyRobustCVaR.get_params", false]], "get_params() (skfolio.optimization.equalweighted method)": [[124, "skfolio.optimization.EqualWeighted.get_params", false]], "get_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[125, "skfolio.optimization.HierarchicalEqualRiskContribution.get_params", false]], "get_params() (skfolio.optimization.hierarchicalriskparity method)": [[126, "skfolio.optimization.HierarchicalRiskParity.get_params", false]], "get_params() (skfolio.optimization.inversevolatility method)": [[127, "skfolio.optimization.InverseVolatility.get_params", false]], "get_params() (skfolio.optimization.maximumdiversification method)": [[128, "skfolio.optimization.MaximumDiversification.get_params", false]], "get_params() (skfolio.optimization.meanrisk method)": [[129, "skfolio.optimization.MeanRisk.get_params", false]], "get_params() (skfolio.optimization.nestedclustersoptimization method)": [[130, "skfolio.optimization.NestedClustersOptimization.get_params", false]], "get_params() (skfolio.optimization.random method)": [[132, "skfolio.optimization.Random.get_params", false]], "get_params() (skfolio.optimization.riskbudgeting method)": [[133, "skfolio.optimization.RiskBudgeting.get_params", false]], "get_params() (skfolio.optimization.stackingoptimization method)": [[134, "skfolio.optimization.StackingOptimization.get_params", false]], "get_params() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.get_params", false]], "get_params() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.get_params", false]], "get_params() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.get_params", false]], "get_params() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.get_params", false]], "get_params() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.get_params", false]], "get_params() (skfolio.prior.baseloadingmatrix method)": [[145, "skfolio.prior.BaseLoadingMatrix.get_params", false]], "get_params() (skfolio.prior.baseprior method)": [[146, "skfolio.prior.BasePrior.get_params", false]], "get_params() (skfolio.prior.blacklitterman method)": [[147, "skfolio.prior.BlackLitterman.get_params", false]], "get_params() (skfolio.prior.empiricalprior method)": [[148, "skfolio.prior.EmpiricalPrior.get_params", false]], "get_params() (skfolio.prior.factormodel method)": [[149, "skfolio.prior.FactorModel.get_params", false]], "get_params() (skfolio.prior.loadingmatrixregression method)": [[150, "skfolio.prior.LoadingMatrixRegression.get_params", false]], "get_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[152, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[153, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[154, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[155, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[156, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[157, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_params", false]], "get_path_ids() (skfolio.model_selection.basecombinatorialcv method)": [[98, "skfolio.model_selection.BaseCombinatorialCV.get_path_ids", false]], "get_path_ids() (skfolio.model_selection.combinatorialpurgedcv method)": [[99, "skfolio.model_selection.CombinatorialPurgedCV.get_path_ids", false]], "get_precision() (skfolio.moments.graphicallassocv method)": [[113, "skfolio.moments.GraphicalLassoCV.get_precision", false]], "get_precision() (skfolio.moments.ledoitwolf method)": [[115, "skfolio.moments.LedoitWolf.get_precision", false]], "get_precision() (skfolio.moments.oas method)": [[116, "skfolio.moments.OAS.get_precision", false]], "get_precision() (skfolio.moments.shrunkcovariance method)": [[117, "skfolio.moments.ShrunkCovariance.get_precision", false]], "get_support() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.get_support", false]], "get_support() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.get_support", false]], "get_support() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.get_support", false]], "get_support() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.get_support", false]], "get_support() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.get_support", false]], "get_weight() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.get_weight", false]], "gini_mean_difference() (in module skfolio.measures)": [[84, "skfolio.measures.gini_mean_difference", false]], "graphicallassocv (class in skfolio.moments)": [[113, "skfolio.moments.GraphicalLassoCV", false]], "has() (skfolio.cluster.linkagemethod class method)": [[53, "skfolio.cluster.LinkageMethod.has", false]], "has() (skfolio.measures.basemeasure class method)": [[66, "skfolio.measures.BaseMeasure.has", false]], "has() (skfolio.measures.extrariskmeasure class method)": [[67, "skfolio.measures.ExtraRiskMeasure.has", false]], "has() (skfolio.measures.perfmeasure class method)": [[68, "skfolio.measures.PerfMeasure.has", false]], "has() (skfolio.measures.ratiomeasure class method)": [[69, "skfolio.measures.RatioMeasure.has", false]], "has() (skfolio.measures.riskmeasure class method)": [[70, "skfolio.measures.RiskMeasure.has", false]], "has() (skfolio.moments.shrunkmumethods class method)": [[119, "skfolio.moments.ShrunkMuMethods.has", false]], "has() (skfolio.optimization.objectivefunction class method)": [[131, "skfolio.optimization.ObjectiveFunction.has", false]], "hierarchicalclustering (class in skfolio.cluster)": [[52, "skfolio.cluster.HierarchicalClustering", false]], "hierarchicalequalriskcontribution (class in skfolio.optimization)": [[125, "skfolio.optimization.HierarchicalEqualRiskContribution", false]], "hierarchicalriskparity (class in skfolio.optimization)": [[126, "skfolio.optimization.HierarchicalRiskParity", false]], "impliedcovariance (class in skfolio.moments)": [[114, "skfolio.moments.ImpliedCovariance", false]], "index() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.index", false]], "index() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.index", false]], "index() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.index", false]], "index() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.index", false]], "index() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.index", false]], "index() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.index", false]], "index() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.index", false]], "index() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.index", false]], "index() (skfolio.population.population method)": [[135, "skfolio.population.Population.index", false]], "insert() (skfolio.population.population method)": [[135, "skfolio.population.Population.insert", false]], "inverse_transform() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.inverse_transform", false]], "inversevolatility (class in skfolio.optimization)": [[127, "skfolio.optimization.InverseVolatility", false]], "is_cholesky_dec() (in module skfolio.utils.stats)": [[168, "skfolio.utils.stats.is_cholesky_dec", false]], "isalnum() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isalnum", false]], "isalnum() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isalnum", false]], "isalnum() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isalnum", false]], "isalnum() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isalnum", false]], "isalnum() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isalnum", false]], "isalnum() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isalnum", false]], "isalnum() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isalnum", false]], "isalnum() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isalnum", false]], "isalpha() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isalpha", false]], "isalpha() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isalpha", false]], "isalpha() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isalpha", false]], "isalpha() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isalpha", false]], "isalpha() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isalpha", false]], "isalpha() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isalpha", false]], "isalpha() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isalpha", false]], "isalpha() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isalpha", false]], "isascii() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isascii", false]], "isascii() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isascii", false]], "isascii() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isascii", false]], "isascii() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isascii", false]], "isascii() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isascii", false]], "isascii() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isascii", false]], "isascii() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isascii", false]], "isascii() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isascii", false]], "isdecimal() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isdecimal", false]], "isdecimal() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isdecimal", false]], "isdecimal() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isdecimal", false]], "isdecimal() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isdecimal", false]], "isdigit() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isdigit", false]], "isdigit() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isdigit", false]], "isdigit() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isdigit", false]], "isdigit() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isdigit", false]], "isdigit() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isdigit", false]], "isdigit() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isdigit", false]], "isdigit() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isdigit", false]], "isdigit() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isdigit", false]], "isidentifier() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isidentifier", false]], "isidentifier() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isidentifier", false]], "isidentifier() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isidentifier", false]], "isidentifier() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isidentifier", false]], "islower() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.islower", false]], "islower() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.islower", false]], "islower() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.islower", false]], "islower() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.islower", false]], "islower() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.islower", false]], "islower() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.islower", false]], "islower() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.islower", false]], "islower() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.islower", false]], "isnumeric() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isnumeric", false]], "isnumeric() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isnumeric", false]], "isnumeric() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isnumeric", false]], "isnumeric() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isnumeric", false]], "isprintable() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isprintable", false]], "isprintable() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isprintable", false]], "isprintable() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isprintable", false]], "isprintable() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isprintable", false]], "isprintable() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isprintable", false]], "isprintable() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isprintable", false]], "isprintable() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isprintable", false]], "isprintable() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isprintable", false]], "isspace() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isspace", false]], "isspace() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isspace", false]], "isspace() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isspace", false]], "isspace() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isspace", false]], "isspace() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isspace", false]], "isspace() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isspace", false]], "isspace() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isspace", false]], "isspace() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isspace", false]], "istitle() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.istitle", false]], "istitle() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.istitle", false]], "istitle() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.istitle", false]], "istitle() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.istitle", false]], "istitle() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.istitle", false]], "istitle() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.istitle", false]], "istitle() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.istitle", false]], "istitle() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.istitle", false]], "isupper() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.isupper", false]], "isupper() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.isupper", false]], "isupper() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.isupper", false]], "isupper() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.isupper", false]], "isupper() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.isupper", false]], "isupper() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.isupper", false]], "isupper() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.isupper", false]], "isupper() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.isupper", false]], "join() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.join", false]], "join() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.join", false]], "join() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.join", false]], "join() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.join", false]], "join() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.join", false]], "join() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.join", false]], "join() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.join", false]], "join() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.join", false]], "kendalldistance (class in skfolio.distance)": [[62, "skfolio.distance.KendallDistance", false]], "ledoitwolf (class in skfolio.moments)": [[115, "skfolio.moments.LedoitWolf", false]], "linkagemethod (class in skfolio.cluster)": [[53, "skfolio.cluster.LinkageMethod", false]], "ljust() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.ljust", false]], "ljust() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.ljust", false]], "ljust() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.ljust", false]], "ljust() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.ljust", false]], "ljust() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.ljust", false]], "ljust() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.ljust", false]], "ljust() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.ljust", false]], "ljust() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.ljust", false]], "load_factors_dataset() (in module skfolio.datasets)": [[54, "skfolio.datasets.load_factors_dataset", false]], "load_ftse100_dataset() (in module skfolio.datasets)": [[55, "skfolio.datasets.load_ftse100_dataset", false]], "load_nasdaq_dataset() (in module skfolio.datasets)": [[56, "skfolio.datasets.load_nasdaq_dataset", false]], "load_sp500_dataset() (in module skfolio.datasets)": [[57, "skfolio.datasets.load_sp500_dataset", false]], "load_sp500_index() (in module skfolio.datasets)": [[58, "skfolio.datasets.load_sp500_index", false]], "loadingmatrixregression (class in skfolio.prior)": [[150, "skfolio.prior.LoadingMatrixRegression", false]], "lower() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.lower", false]], "lower() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.lower", false]], "lower() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.lower", false]], "lower() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.lower", false]], "lower() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.lower", false]], "lower() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.lower", false]], "lower() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.lower", false]], "lower() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.lower", false]], "lstrip() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.lstrip", false]], "lstrip() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.lstrip", false]], "lstrip() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.lstrip", false]], "lstrip() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.lstrip", false]], "lstrip() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.lstrip", false]], "lstrip() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.lstrip", false]], "lstrip() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.lstrip", false]], "lstrip() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.lstrip", false]], "mahalanobis() (skfolio.moments.graphicallassocv method)": [[113, "skfolio.moments.GraphicalLassoCV.mahalanobis", false]], "mahalanobis() (skfolio.moments.ledoitwolf method)": [[115, "skfolio.moments.LedoitWolf.mahalanobis", false]], "mahalanobis() (skfolio.moments.oas method)": [[116, "skfolio.moments.OAS.mahalanobis", false]], "mahalanobis() (skfolio.moments.shrunkcovariance method)": [[117, "skfolio.moments.ShrunkCovariance.mahalanobis", false]], "make_scorer() (in module skfolio.metrics)": [[97, "skfolio.metrics.make_scorer", false]], "maketrans() (skfolio.cluster.linkagemethod static method)": [[53, "skfolio.cluster.LinkageMethod.maketrans", false]], "maketrans() (skfolio.measures.basemeasure static method)": [[66, "skfolio.measures.BaseMeasure.maketrans", false]], "maketrans() (skfolio.measures.extrariskmeasure static method)": [[67, "skfolio.measures.ExtraRiskMeasure.maketrans", false]], "maketrans() (skfolio.measures.perfmeasure static method)": [[68, "skfolio.measures.PerfMeasure.maketrans", false]], "maketrans() (skfolio.measures.ratiomeasure static method)": [[69, "skfolio.measures.RatioMeasure.maketrans", false]], "maketrans() (skfolio.measures.riskmeasure static method)": [[70, "skfolio.measures.RiskMeasure.maketrans", false]], "maketrans() (skfolio.moments.shrunkmumethods static method)": [[119, "skfolio.moments.ShrunkMuMethods.maketrans", false]], "maketrans() (skfolio.optimization.objectivefunction static method)": [[131, "skfolio.optimization.ObjectiveFunction.maketrans", false]], "max_drawdown() (in module skfolio.measures)": [[85, "skfolio.measures.max_drawdown", false]], "max_measure() (skfolio.population.population method)": [[135, "skfolio.population.Population.max_measure", false]], "maximumdiversification (class in skfolio.optimization)": [[128, "skfolio.optimization.MaximumDiversification", false]], "mean() (in module skfolio.measures)": [[86, "skfolio.measures.mean", false]], "mean_absolute_deviation() (in module skfolio.measures)": [[87, "skfolio.measures.mean_absolute_deviation", false]], "meanrisk (class in skfolio.optimization)": [[129, "skfolio.optimization.MeanRisk", false]], "measures() (skfolio.population.population method)": [[135, "skfolio.population.Population.measures", false]], "measures_df (skfolio.portfolio.baseportfolio property)": [[136, "skfolio.portfolio.BasePortfolio.measures_df", false]], "measures_df (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.measures_df", false]], "measures_df (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.measures_df", false]], "measures_mean() (skfolio.population.population method)": [[135, "skfolio.population.Population.measures_mean", false]], "measures_std() (skfolio.population.population method)": [[135, "skfolio.population.Population.measures_std", false]], "min_measure() (skfolio.population.population method)": [[135, "skfolio.population.Population.min_measure", false]], "minimize_relative_weight_deviation() (in module skfolio.utils.stats)": [[169, "skfolio.utils.stats.minimize_relative_weight_deviation", false]], "module": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false], [0, "module-skfolio.measures", false], [0, "module-skfolio.optimization.cluster", false], [0, "module-skfolio.optimization.convex", false], [0, "module-skfolio.optimization.ensemble", false], [0, "module-skfolio.optimization.naive", false], [0, "module-skfolio.population", false], [0, "module-skfolio.portfolio", false]], "multiperiodportfolio (class in skfolio.portfolio)": [[137, "skfolio.portfolio.MultiPeriodPortfolio", false]], "mutualinformation (class in skfolio.distance)": [[63, "skfolio.distance.MutualInformation", false]], "n_bins_freedman() (in module skfolio.utils.stats)": [[170, "skfolio.utils.stats.n_bins_freedman", false]], "n_bins_knuth() (in module skfolio.utils.stats)": [[171, "skfolio.utils.stats.n_bins_knuth", false]], "n_observations (skfolio.portfolio.baseportfolio property)": [[136, "skfolio.portfolio.BasePortfolio.n_observations", false]], "n_observations (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.n_observations", false]], "n_observations (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.n_observations", false]], "n_splits (skfolio.model_selection.combinatorialpurgedcv property)": [[99, "skfolio.model_selection.CombinatorialPurgedCV.n_splits", false]], "n_test_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[99, "skfolio.model_selection.CombinatorialPurgedCV.n_test_paths", false]], "named_estimators (skfolio.optimization.stackingoptimization property)": [[134, "skfolio.optimization.StackingOptimization.named_estimators", false]], "nbinsmethod() (in module skfolio.utils.stats)": [[159, "skfolio.utils.stats.NBinsMethod", false]], "nestedclustersoptimization (class in skfolio.optimization)": [[130, "skfolio.optimization.NestedClustersOptimization", false]], "non_denominated_sort() (skfolio.population.population method)": [[135, "skfolio.population.Population.non_denominated_sort", false]], "nonzero_assets (skfolio.portfolio.portfolio attribute)": [[138, "skfolio.portfolio.Portfolio.nonzero_assets", false]], "nonzero_assets_index (skfolio.portfolio.portfolio attribute)": [[138, "skfolio.portfolio.Portfolio.nonzero_assets_index", false]], "oas (class in skfolio.moments)": [[116, "skfolio.moments.OAS", false]], "objectivefunction (class in skfolio.optimization)": [[131, "skfolio.optimization.ObjectiveFunction", false]], "optimal_folds_number() (in module skfolio.model_selection)": [[102, "skfolio.model_selection.optimal_folds_number", false]], "owa_gmd_weights() (in module skfolio.measures)": [[88, "skfolio.measures.owa_gmd_weights", false]], "partition() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.partition", false]], "partition() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.partition", false]], "partition() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.partition", false]], "partition() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.partition", false]], "partition() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.partition", false]], "partition() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.partition", false]], "partition() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.partition", false]], "partition() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.partition", false]], "pearsondistance (class in skfolio.distance)": [[64, "skfolio.distance.PearsonDistance", false]], "perfmeasure (class in skfolio.measures)": [[68, "skfolio.measures.PerfMeasure", false]], "plot_composition() (skfolio.population.population method)": [[135, "skfolio.population.Population.plot_composition", false]], "plot_composition() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.plot_composition", false]], "plot_contribution() (skfolio.population.population method)": [[135, "skfolio.population.Population.plot_contribution", false]], "plot_contribution() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.plot_contribution", false]], "plot_contribution() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.plot_contribution", false]], "plot_contribution() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.plot_contribution", false]], "plot_cumulative_returns() (skfolio.population.population method)": [[135, "skfolio.population.Population.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.plot_cumulative_returns", false]], "plot_dendrogram() (skfolio.cluster.hierarchicalclustering method)": [[52, "skfolio.cluster.HierarchicalClustering.plot_dendrogram", false]], "plot_distribution() (skfolio.population.population method)": [[135, "skfolio.population.Population.plot_distribution", false]], "plot_measures() (skfolio.population.population method)": [[135, "skfolio.population.Population.plot_measures", false]], "plot_returns() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.plot_returns", false]], "plot_rolling_measure() (skfolio.population.population method)": [[135, "skfolio.population.Population.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.plot_rolling_measure", false]], "plot_train_test_folds() (skfolio.model_selection.combinatorialpurgedcv method)": [[99, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_folds", false]], "plot_train_test_index() (skfolio.model_selection.combinatorialpurgedcv method)": [[99, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_index", false]], "pop() (skfolio.population.population method)": [[135, "skfolio.population.Population.pop", false]], "population (class in skfolio.population)": [[135, "skfolio.population.Population", false]], "portfolio (class in skfolio.portfolio)": [[138, "skfolio.portfolio.Portfolio", false]], "portfolios (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.portfolios", false]], "predict() (skfolio.optimization.basehierarchicaloptimization method)": [[121, "skfolio.optimization.BaseHierarchicalOptimization.predict", false]], "predict() (skfolio.optimization.convexoptimization method)": [[122, "skfolio.optimization.ConvexOptimization.predict", false]], "predict() (skfolio.optimization.distributionallyrobustcvar method)": [[123, "skfolio.optimization.DistributionallyRobustCVaR.predict", false]], "predict() (skfolio.optimization.equalweighted method)": [[124, "skfolio.optimization.EqualWeighted.predict", false]], "predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[125, "skfolio.optimization.HierarchicalEqualRiskContribution.predict", false]], "predict() (skfolio.optimization.hierarchicalriskparity method)": [[126, "skfolio.optimization.HierarchicalRiskParity.predict", false]], "predict() (skfolio.optimization.inversevolatility method)": [[127, "skfolio.optimization.InverseVolatility.predict", false]], "predict() (skfolio.optimization.maximumdiversification method)": [[128, "skfolio.optimization.MaximumDiversification.predict", false]], "predict() (skfolio.optimization.meanrisk method)": [[129, "skfolio.optimization.MeanRisk.predict", false]], "predict() (skfolio.optimization.nestedclustersoptimization method)": [[130, "skfolio.optimization.NestedClustersOptimization.predict", false]], "predict() (skfolio.optimization.random method)": [[132, "skfolio.optimization.Random.predict", false]], "predict() (skfolio.optimization.riskbudgeting method)": [[133, "skfolio.optimization.RiskBudgeting.predict", false]], "predict() (skfolio.optimization.stackingoptimization method)": [[134, "skfolio.optimization.StackingOptimization.predict", false]], "prices_to_returns() (in module skfolio.preprocessing)": [[144, "skfolio.preprocessing.prices_to_returns", false]], "priormodel (class in skfolio.prior)": [[151, "skfolio.prior.PriorModel", false]], "quantile() (skfolio.population.population method)": [[135, "skfolio.population.Population.quantile", false]], "rand_weights() (in module skfolio.utils.stats)": [[172, "skfolio.utils.stats.rand_weights", false]], "rand_weights_dirichlet() (in module skfolio.utils.stats)": [[173, "skfolio.utils.stats.rand_weights_dirichlet", false]], "random (class in skfolio.optimization)": [[132, "skfolio.optimization.Random", false]], "ratiomeasure (class in skfolio.measures)": [[69, "skfolio.measures.RatioMeasure", false]], "recombined_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[99, "skfolio.model_selection.CombinatorialPurgedCV.recombined_paths", false]], "remove() (skfolio.population.population method)": [[135, "skfolio.population.Population.remove", false]], "removeprefix() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.removeprefix", false]], "removeprefix() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.removeprefix", false]], "removeprefix() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.removeprefix", false]], "removeprefix() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.removeprefix", false]], "removesuffix() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.removesuffix", false]], "removesuffix() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.removesuffix", false]], "removesuffix() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.removesuffix", false]], "removesuffix() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.removesuffix", false]], "replace() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.replace", false]], "replace() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.replace", false]], "replace() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.replace", false]], "replace() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.replace", false]], "replace() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.replace", false]], "replace() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.replace", false]], "replace() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.replace", false]], "replace() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.replace", false]], "returns_df (skfolio.portfolio.baseportfolio property)": [[136, "skfolio.portfolio.BasePortfolio.returns_df", false]], "returns_df (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.returns_df", false]], "returns_df (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.returns_df", false]], "reverse() (skfolio.population.population method)": [[135, "skfolio.population.Population.reverse", false]], "rfind() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.rfind", false]], "rfind() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.rfind", false]], "rfind() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.rfind", false]], "rfind() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.rfind", false]], "rfind() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.rfind", false]], "rfind() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.rfind", false]], "rfind() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.rfind", false]], "rfind() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.rfind", false]], "rindex() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.rindex", false]], "rindex() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.rindex", false]], "rindex() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.rindex", false]], "rindex() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.rindex", false]], "rindex() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.rindex", false]], "rindex() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.rindex", false]], "rindex() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.rindex", false]], "rindex() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.rindex", false]], "riskbudgeting (class in skfolio.optimization)": [[133, "skfolio.optimization.RiskBudgeting", false]], "riskmeasure (class in skfolio.measures)": [[70, "skfolio.measures.RiskMeasure", false]], "rjust() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.rjust", false]], "rjust() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.rjust", false]], "rjust() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.rjust", false]], "rjust() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.rjust", false]], "rjust() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.rjust", false]], "rjust() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.rjust", false]], "rjust() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.rjust", false]], "rjust() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.rjust", false]], "rolling_measure() (skfolio.population.population method)": [[135, "skfolio.population.Population.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.rolling_measure", false]], "rpartition() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.rpartition", false]], "rpartition() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.rpartition", false]], "rpartition() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.rpartition", false]], "rpartition() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.rpartition", false]], "rpartition() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.rpartition", false]], "rpartition() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.rpartition", false]], "rpartition() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.rpartition", false]], "rpartition() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.rpartition", false]], "rsplit() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.rsplit", false]], "rsplit() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.rsplit", false]], "rsplit() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.rsplit", false]], "rsplit() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.rsplit", false]], "rsplit() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.rsplit", false]], "rsplit() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.rsplit", false]], "rsplit() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.rsplit", false]], "rsplit() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.rsplit", false]], "rstrip() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.rstrip", false]], "rstrip() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.rstrip", false]], "rstrip() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.rstrip", false]], "rstrip() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.rstrip", false]], "rstrip() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.rstrip", false]], "rstrip() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.rstrip", false]], "rstrip() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.rstrip", false]], "rstrip() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.rstrip", false]], "score() (skfolio.moments.graphicallassocv method)": [[113, "skfolio.moments.GraphicalLassoCV.score", false]], "score() (skfolio.moments.ledoitwolf method)": [[115, "skfolio.moments.LedoitWolf.score", false]], "score() (skfolio.moments.oas method)": [[116, "skfolio.moments.OAS.score", false]], "score() (skfolio.moments.shrunkcovariance method)": [[117, "skfolio.moments.ShrunkCovariance.score", false]], "score() (skfolio.optimization.basehierarchicaloptimization method)": [[121, "skfolio.optimization.BaseHierarchicalOptimization.score", false]], "score() (skfolio.optimization.convexoptimization method)": [[122, "skfolio.optimization.ConvexOptimization.score", false]], "score() (skfolio.optimization.distributionallyrobustcvar method)": [[123, "skfolio.optimization.DistributionallyRobustCVaR.score", false]], "score() (skfolio.optimization.equalweighted method)": [[124, "skfolio.optimization.EqualWeighted.score", false]], "score() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[125, "skfolio.optimization.HierarchicalEqualRiskContribution.score", false]], "score() (skfolio.optimization.hierarchicalriskparity method)": [[126, "skfolio.optimization.HierarchicalRiskParity.score", false]], "score() (skfolio.optimization.inversevolatility method)": [[127, "skfolio.optimization.InverseVolatility.score", false]], "score() (skfolio.optimization.maximumdiversification method)": [[128, "skfolio.optimization.MaximumDiversification.score", false]], "score() (skfolio.optimization.meanrisk method)": [[129, "skfolio.optimization.MeanRisk.score", false]], "score() (skfolio.optimization.nestedclustersoptimization method)": [[130, "skfolio.optimization.NestedClustersOptimization.score", false]], "score() (skfolio.optimization.random method)": [[132, "skfolio.optimization.Random.score", false]], "score() (skfolio.optimization.riskbudgeting method)": [[133, "skfolio.optimization.RiskBudgeting.score", false]], "score() (skfolio.optimization.stackingoptimization method)": [[134, "skfolio.optimization.StackingOptimization.score", false]], "selectcomplete (class in skfolio.pre_selection)": [[140, "skfolio.pre_selection.SelectComplete", false]], "selectkextremes (class in skfolio.pre_selection)": [[141, "skfolio.pre_selection.SelectKExtremes", false]], "selectnondominated (class in skfolio.pre_selection)": [[142, "skfolio.pre_selection.SelectNonDominated", false]], "selectnonexpiring (class in skfolio.pre_selection)": [[143, "skfolio.pre_selection.SelectNonExpiring", false]], "semi_deviation() (in module skfolio.measures)": [[89, "skfolio.measures.semi_deviation", false]], "semi_variance() (in module skfolio.measures)": [[90, "skfolio.measures.semi_variance", false]], "set_fit_request() (skfolio.moments.impliedcovariance method)": [[114, "skfolio.moments.ImpliedCovariance.set_fit_request", false]], "set_output() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.set_output", false]], "set_output() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.set_output", false]], "set_output() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.set_output", false]], "set_output() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.set_output", false]], "set_output() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.set_output", false]], "set_params() (skfolio.cluster.hierarchicalclustering method)": [[52, "skfolio.cluster.HierarchicalClustering.set_params", false]], "set_params() (skfolio.distance.basedistance method)": [[59, "skfolio.distance.BaseDistance.set_params", false]], "set_params() (skfolio.distance.covariancedistance method)": [[60, "skfolio.distance.CovarianceDistance.set_params", false]], "set_params() (skfolio.distance.distancecorrelation method)": [[61, "skfolio.distance.DistanceCorrelation.set_params", false]], "set_params() (skfolio.distance.kendalldistance method)": [[62, "skfolio.distance.KendallDistance.set_params", false]], "set_params() (skfolio.distance.mutualinformation method)": [[63, "skfolio.distance.MutualInformation.set_params", false]], "set_params() (skfolio.distance.pearsondistance method)": [[64, "skfolio.distance.PearsonDistance.set_params", false]], "set_params() (skfolio.distance.spearmandistance method)": [[65, "skfolio.distance.SpearmanDistance.set_params", false]], "set_params() (skfolio.moments.basecovariance method)": [[103, "skfolio.moments.BaseCovariance.set_params", false]], "set_params() (skfolio.moments.basemu method)": [[104, "skfolio.moments.BaseMu.set_params", false]], "set_params() (skfolio.moments.denoisecovariance method)": [[105, "skfolio.moments.DenoiseCovariance.set_params", false]], "set_params() (skfolio.moments.detonecovariance method)": [[106, "skfolio.moments.DetoneCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalcovariance method)": [[109, "skfolio.moments.EmpiricalCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalmu method)": [[110, "skfolio.moments.EmpiricalMu.set_params", false]], "set_params() (skfolio.moments.equilibriummu method)": [[111, "skfolio.moments.EquilibriumMu.set_params", false]], "set_params() (skfolio.moments.ewcovariance method)": [[107, "skfolio.moments.EWCovariance.set_params", false]], "set_params() (skfolio.moments.ewmu method)": [[108, "skfolio.moments.EWMu.set_params", false]], "set_params() (skfolio.moments.gerbercovariance method)": [[112, "skfolio.moments.GerberCovariance.set_params", false]], "set_params() (skfolio.moments.graphicallassocv method)": [[113, "skfolio.moments.GraphicalLassoCV.set_params", false]], "set_params() (skfolio.moments.impliedcovariance method)": [[114, "skfolio.moments.ImpliedCovariance.set_params", false]], "set_params() (skfolio.moments.ledoitwolf method)": [[115, "skfolio.moments.LedoitWolf.set_params", false]], "set_params() (skfolio.moments.oas method)": [[116, "skfolio.moments.OAS.set_params", false]], "set_params() (skfolio.moments.shrunkcovariance method)": [[117, "skfolio.moments.ShrunkCovariance.set_params", false]], "set_params() (skfolio.moments.shrunkmu method)": [[118, "skfolio.moments.ShrunkMu.set_params", false]], "set_params() (skfolio.optimization.basecomposition method)": [[120, "skfolio.optimization.BaseComposition.set_params", false]], "set_params() (skfolio.optimization.basehierarchicaloptimization method)": [[121, "skfolio.optimization.BaseHierarchicalOptimization.set_params", false]], "set_params() (skfolio.optimization.convexoptimization method)": [[122, "skfolio.optimization.ConvexOptimization.set_params", false]], "set_params() (skfolio.optimization.distributionallyrobustcvar method)": [[123, "skfolio.optimization.DistributionallyRobustCVaR.set_params", false]], "set_params() (skfolio.optimization.equalweighted method)": [[124, "skfolio.optimization.EqualWeighted.set_params", false]], "set_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[125, "skfolio.optimization.HierarchicalEqualRiskContribution.set_params", false]], "set_params() (skfolio.optimization.hierarchicalriskparity method)": [[126, "skfolio.optimization.HierarchicalRiskParity.set_params", false]], "set_params() (skfolio.optimization.inversevolatility method)": [[127, "skfolio.optimization.InverseVolatility.set_params", false]], "set_params() (skfolio.optimization.maximumdiversification method)": [[128, "skfolio.optimization.MaximumDiversification.set_params", false]], "set_params() (skfolio.optimization.meanrisk method)": [[129, "skfolio.optimization.MeanRisk.set_params", false]], "set_params() (skfolio.optimization.nestedclustersoptimization method)": [[130, "skfolio.optimization.NestedClustersOptimization.set_params", false]], "set_params() (skfolio.optimization.random method)": [[132, "skfolio.optimization.Random.set_params", false]], "set_params() (skfolio.optimization.riskbudgeting method)": [[133, "skfolio.optimization.RiskBudgeting.set_params", false]], "set_params() (skfolio.optimization.stackingoptimization method)": [[134, "skfolio.optimization.StackingOptimization.set_params", false]], "set_params() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.set_params", false]], "set_params() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.set_params", false]], "set_params() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.set_params", false]], "set_params() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.set_params", false]], "set_params() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.set_params", false]], "set_params() (skfolio.prior.baseloadingmatrix method)": [[145, "skfolio.prior.BaseLoadingMatrix.set_params", false]], "set_params() (skfolio.prior.baseprior method)": [[146, "skfolio.prior.BasePrior.set_params", false]], "set_params() (skfolio.prior.blacklitterman method)": [[147, "skfolio.prior.BlackLitterman.set_params", false]], "set_params() (skfolio.prior.empiricalprior method)": [[148, "skfolio.prior.EmpiricalPrior.set_params", false]], "set_params() (skfolio.prior.factormodel method)": [[149, "skfolio.prior.FactorModel.set_params", false]], "set_params() (skfolio.prior.loadingmatrixregression method)": [[150, "skfolio.prior.LoadingMatrixRegression.set_params", false]], "set_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[152, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[153, "skfolio.uncertainty_set.BaseMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[154, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[155, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[156, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[157, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.set_params", false]], "set_portfolio_params() (skfolio.population.population method)": [[135, "skfolio.population.Population.set_portfolio_params", false]], "set_score_request() (skfolio.moments.graphicallassocv method)": [[113, "skfolio.moments.GraphicalLassoCV.set_score_request", false]], "set_score_request() (skfolio.moments.ledoitwolf method)": [[115, "skfolio.moments.LedoitWolf.set_score_request", false]], "set_score_request() (skfolio.moments.oas method)": [[116, "skfolio.moments.OAS.set_score_request", false]], "set_score_request() (skfolio.moments.shrunkcovariance method)": [[117, "skfolio.moments.ShrunkCovariance.set_score_request", false]], "shrunkcovariance (class in skfolio.moments)": [[117, "skfolio.moments.ShrunkCovariance", false]], "shrunkmu (class in skfolio.moments)": [[118, "skfolio.moments.ShrunkMu", false]], "shrunkmumethods (class in skfolio.moments)": [[119, "skfolio.moments.ShrunkMuMethods", false]], "skfolio": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false]], "skfolio.measures": [[0, "module-skfolio.measures", false]], "skfolio.optimization.cluster": [[0, "module-skfolio.optimization.cluster", false]], "skfolio.optimization.convex": [[0, "module-skfolio.optimization.convex", false]], "skfolio.optimization.ensemble": [[0, "module-skfolio.optimization.ensemble", false]], "skfolio.optimization.naive": [[0, "module-skfolio.optimization.naive", false]], "skfolio.population": [[0, "module-skfolio.population", false]], "skfolio.portfolio": [[0, "module-skfolio.portfolio", false]], "sort() (skfolio.population.population method)": [[135, "skfolio.population.Population.sort", false]], "sort_measure() (skfolio.population.population method)": [[135, "skfolio.population.Population.sort_measure", false]], "spearmandistance (class in skfolio.distance)": [[65, "skfolio.distance.SpearmanDistance", false]], "split() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.split", false]], "split() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.split", false]], "split() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.split", false]], "split() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.split", false]], "split() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.split", false]], "split() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.split", false]], "split() (skfolio.model_selection.combinatorialpurgedcv method)": [[99, "skfolio.model_selection.CombinatorialPurgedCV.split", false]], "split() (skfolio.model_selection.walkforward method)": [[100, "skfolio.model_selection.WalkForward.split", false]], "split() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.split", false]], "split() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.split", false]], "splitlines() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.splitlines", false]], "splitlines() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.splitlines", false]], "splitlines() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.splitlines", false]], "splitlines() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.splitlines", false]], "splitlines() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.splitlines", false]], "splitlines() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.splitlines", false]], "splitlines() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.splitlines", false]], "splitlines() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.splitlines", false]], "sric (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.sric", false]], "stackingoptimization (class in skfolio.optimization)": [[134, "skfolio.optimization.StackingOptimization", false]], "standard_deviation() (in module skfolio.measures)": [[91, "skfolio.measures.standard_deviation", false]], "startswith() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.startswith", false]], "startswith() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.startswith", false]], "startswith() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.startswith", false]], "startswith() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.startswith", false]], "startswith() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.startswith", false]], "startswith() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.startswith", false]], "startswith() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.startswith", false]], "startswith() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.startswith", false]], "strip() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.strip", false]], "strip() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.strip", false]], "strip() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.strip", false]], "strip() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.strip", false]], "strip() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.strip", false]], "strip() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.strip", false]], "strip() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.strip", false]], "strip() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.strip", false]], "summary() (skfolio.population.population method)": [[135, "skfolio.population.Population.summary", false]], "summary() (skfolio.portfolio.baseportfolio method)": [[136, "skfolio.portfolio.BasePortfolio.summary", false]], "summary() (skfolio.portfolio.multiperiodportfolio method)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.summary", false]], "summary() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.summary", false]], "swapcase() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.swapcase", false]], "swapcase() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.swapcase", false]], "swapcase() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.swapcase", false]], "swapcase() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.swapcase", false]], "swapcase() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.swapcase", false]], "swapcase() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.swapcase", false]], "swapcase() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.swapcase", false]], "swapcase() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.swapcase", false]], "test_set_index (skfolio.model_selection.combinatorialpurgedcv property)": [[99, "skfolio.model_selection.CombinatorialPurgedCV.test_set_index", false]], "third_central_moment() (in module skfolio.measures)": [[92, "skfolio.measures.third_central_moment", false]], "title() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.title", false]], "title() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.title", false]], "title() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.title", false]], "title() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.title", false]], "title() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.title", false]], "title() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.title", false]], "title() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.title", false]], "title() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.title", false]], "transform() (skfolio.pre_selection.dropcorrelated method)": [[139, "skfolio.pre_selection.DropCorrelated.transform", false]], "transform() (skfolio.pre_selection.selectcomplete method)": [[140, "skfolio.pre_selection.SelectComplete.transform", false]], "transform() (skfolio.pre_selection.selectkextremes method)": [[141, "skfolio.pre_selection.SelectKExtremes.transform", false]], "transform() (skfolio.pre_selection.selectnondominated method)": [[142, "skfolio.pre_selection.SelectNonDominated.transform", false]], "transform() (skfolio.pre_selection.selectnonexpiring method)": [[143, "skfolio.pre_selection.SelectNonExpiring.transform", false]], "translate() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.translate", false]], "translate() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.translate", false]], "translate() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.translate", false]], "translate() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.translate", false]], "translate() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.translate", false]], "translate() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.translate", false]], "translate() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.translate", false]], "translate() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.translate", false]], "ulcer_index() (in module skfolio.measures)": [[93, "skfolio.measures.ulcer_index", false]], "uncertaintyset (class in skfolio.uncertainty_set)": [[158, "skfolio.uncertainty_set.UncertaintySet", false]], "upper() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.upper", false]], "upper() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.upper", false]], "upper() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.upper", false]], "upper() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.upper", false]], "upper() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.upper", false]], "upper() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.upper", false]], "upper() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.upper", false]], "upper() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.upper", false]], "value_at_risk() (in module skfolio.measures)": [[94, "skfolio.measures.value_at_risk", false]], "variance() (in module skfolio.measures)": [[95, "skfolio.measures.variance", false]], "variance_from_assets() (skfolio.portfolio.portfolio method)": [[138, "skfolio.portfolio.Portfolio.variance_from_assets", false]], "walkforward (class in skfolio.model_selection)": [[100, "skfolio.model_selection.WalkForward", false]], "weights_per_observation (skfolio.portfolio.multiperiodportfolio property)": [[137, "skfolio.portfolio.MultiPeriodPortfolio.weights_per_observation", false]], "weights_per_observation (skfolio.portfolio.portfolio property)": [[138, "skfolio.portfolio.Portfolio.weights_per_observation", false]], "worst_realization() (in module skfolio.measures)": [[96, "skfolio.measures.worst_realization", false]], "zfill() (skfolio.cluster.linkagemethod method)": [[53, "skfolio.cluster.LinkageMethod.zfill", false]], "zfill() (skfolio.measures.basemeasure method)": [[66, "skfolio.measures.BaseMeasure.zfill", false]], "zfill() (skfolio.measures.extrariskmeasure method)": [[67, "skfolio.measures.ExtraRiskMeasure.zfill", false]], "zfill() (skfolio.measures.perfmeasure method)": [[68, "skfolio.measures.PerfMeasure.zfill", false]], "zfill() (skfolio.measures.ratiomeasure method)": [[69, "skfolio.measures.RatioMeasure.zfill", false]], "zfill() (skfolio.measures.riskmeasure method)": [[70, "skfolio.measures.RiskMeasure.zfill", false]], "zfill() (skfolio.moments.shrunkmumethods method)": [[119, "skfolio.moments.ShrunkMuMethods.zfill", false]], "zfill() (skfolio.optimization.objectivefunction method)": [[131, "skfolio.optimization.ObjectiveFunction.zfill", false]]}, "objects": {"": [[0, 0, 0, "module-7", "skfolio"]], "skfolio": [[0, 0, 0, "-", "measures"], [0, 0, 0, "-", "population"], [0, 0, 0, "-", "portfolio"]], "skfolio.cluster": [[52, 1, 1, "", "HierarchicalClustering"], [53, 1, 1, "", "LinkageMethod"]], "skfolio.cluster.HierarchicalClustering": [[52, 2, 1, "", "fit"], [52, 2, 1, "", "fit_predict"], [52, 2, 1, "", "get_metadata_routing"], [52, 2, 1, "", "get_params"], [52, 2, 1, "", "plot_dendrogram"], [52, 2, 1, "", "set_params"]], "skfolio.cluster.LinkageMethod": [[53, 2, 1, "", "capitalize"], [53, 2, 1, "", "casefold"], [53, 2, 1, "", "center"], [53, 2, 1, "", "count"], [53, 2, 1, "", "encode"], [53, 2, 1, "", "endswith"], [53, 2, 1, "", "expandtabs"], [53, 2, 1, "", "find"], [53, 2, 1, "", "format"], [53, 2, 1, "", "format_map"], [53, 2, 1, "", "has"], [53, 2, 1, "", "index"], [53, 2, 1, "", "isalnum"], [53, 2, 1, "", "isalpha"], [53, 2, 1, "", "isascii"], [53, 2, 1, "", "isdecimal"], [53, 2, 1, "", "isdigit"], [53, 2, 1, "", "isidentifier"], [53, 2, 1, "", "islower"], [53, 2, 1, "", "isnumeric"], [53, 2, 1, "", "isprintable"], [53, 2, 1, "", "isspace"], [53, 2, 1, "", "istitle"], [53, 2, 1, "", "isupper"], [53, 2, 1, "", "join"], [53, 2, 1, "", "ljust"], [53, 2, 1, "", "lower"], [53, 2, 1, "", "lstrip"], [53, 2, 1, "", "maketrans"], [53, 2, 1, "", "partition"], [53, 2, 1, "", "removeprefix"], [53, 2, 1, "", "removesuffix"], [53, 2, 1, "", "replace"], [53, 2, 1, "", "rfind"], [53, 2, 1, "", "rindex"], [53, 2, 1, "", "rjust"], [53, 2, 1, "", "rpartition"], [53, 2, 1, "", "rsplit"], [53, 2, 1, "", "rstrip"], [53, 2, 1, "", "split"], [53, 2, 1, "", "splitlines"], [53, 2, 1, "", "startswith"], [53, 2, 1, "", "strip"], [53, 2, 1, "", "swapcase"], [53, 2, 1, "", "title"], [53, 2, 1, "", "translate"], [53, 2, 1, "", "upper"], [53, 2, 1, "", "zfill"]], "skfolio.datasets": [[54, 3, 1, "", "load_factors_dataset"], [55, 3, 1, "", "load_ftse100_dataset"], [56, 3, 1, "", "load_nasdaq_dataset"], [57, 3, 1, "", "load_sp500_dataset"], [58, 3, 1, "", "load_sp500_index"]], "skfolio.distance": [[59, 1, 1, "", "BaseDistance"], [60, 1, 1, "", "CovarianceDistance"], [61, 1, 1, "", "DistanceCorrelation"], [62, 1, 1, "", "KendallDistance"], [63, 1, 1, "", "MutualInformation"], [64, 1, 1, "", "PearsonDistance"], [65, 1, 1, "", "SpearmanDistance"]], "skfolio.distance.BaseDistance": [[59, 2, 1, "", "fit"], [59, 2, 1, "", "get_metadata_routing"], [59, 2, 1, "", "get_params"], [59, 2, 1, "", "set_params"]], "skfolio.distance.CovarianceDistance": [[60, 2, 1, "", "fit"], [60, 2, 1, "", "get_metadata_routing"], [60, 2, 1, "", "get_params"], [60, 2, 1, "", "set_params"]], "skfolio.distance.DistanceCorrelation": [[61, 2, 1, "", "fit"], [61, 2, 1, "", "get_metadata_routing"], [61, 2, 1, "", "get_params"], [61, 2, 1, "", "set_params"]], "skfolio.distance.KendallDistance": [[62, 2, 1, "", "fit"], [62, 2, 1, "", "get_metadata_routing"], [62, 2, 1, "", "get_params"], [62, 2, 1, "", "set_params"]], "skfolio.distance.MutualInformation": [[63, 2, 1, "", "fit"], [63, 2, 1, "", "get_metadata_routing"], [63, 2, 1, "", "get_params"], [63, 2, 1, "", "set_params"]], "skfolio.distance.PearsonDistance": [[64, 2, 1, "", "fit"], [64, 2, 1, "", "get_metadata_routing"], [64, 2, 1, "", "get_params"], [64, 2, 1, "", "set_params"]], "skfolio.distance.SpearmanDistance": [[65, 2, 1, "", "fit"], [65, 2, 1, "", "get_metadata_routing"], [65, 2, 1, "", "get_params"], [65, 2, 1, "", "set_params"]], "skfolio.measures": [[66, 1, 1, "", "BaseMeasure"], [67, 1, 1, "", "ExtraRiskMeasure"], [68, 1, 1, "", "PerfMeasure"], [69, 1, 1, "", "RatioMeasure"], [70, 1, 1, "", "RiskMeasure"], [71, 3, 1, "", "average_drawdown"], [72, 3, 1, "", "cdar"], [73, 3, 1, "", "cvar"], [74, 3, 1, "", "drawdown_at_risk"], [75, 3, 1, "", "edar"], [76, 3, 1, "", "effective_number_assets"], [77, 3, 1, "", "entropic_risk_measure"], [78, 3, 1, "", "evar"], [79, 3, 1, "", "first_lower_partial_moment"], [80, 3, 1, "", "fourth_central_moment"], [81, 3, 1, "", "fourth_lower_partial_moment"], [82, 3, 1, "", "get_cumulative_returns"], [83, 3, 1, "", "get_drawdowns"], [84, 3, 1, "", "gini_mean_difference"], [85, 3, 1, "", "max_drawdown"], [86, 3, 1, "", "mean"], [87, 3, 1, "", "mean_absolute_deviation"], [88, 3, 1, "", "owa_gmd_weights"], [89, 3, 1, "", "semi_deviation"], [90, 3, 1, "", "semi_variance"], [91, 3, 1, "", "standard_deviation"], [92, 3, 1, "", "third_central_moment"], [93, 3, 1, "", "ulcer_index"], [94, 3, 1, "", "value_at_risk"], [95, 3, 1, "", "variance"], [96, 3, 1, "", "worst_realization"]], "skfolio.measures.BaseMeasure": [[66, 2, 1, "", "capitalize"], [66, 2, 1, "", "casefold"], [66, 2, 1, "", "center"], [66, 2, 1, "", "count"], [66, 2, 1, "", "encode"], [66, 2, 1, "", "endswith"], [66, 2, 1, "", "expandtabs"], [66, 2, 1, "", "find"], [66, 2, 1, "", "format"], [66, 2, 1, "", "format_map"], [66, 2, 1, "", "has"], [66, 2, 1, "", "index"], [66, 2, 1, "", "isalnum"], [66, 2, 1, "", "isalpha"], [66, 2, 1, "", "isascii"], [66, 2, 1, "", "isdecimal"], [66, 2, 1, "", "isdigit"], [66, 2, 1, "", "isidentifier"], [66, 2, 1, "", "islower"], [66, 2, 1, "", "isnumeric"], [66, 2, 1, "", "isprintable"], [66, 2, 1, "", "isspace"], [66, 2, 1, "", "istitle"], [66, 2, 1, "", "isupper"], [66, 2, 1, "", "join"], [66, 2, 1, "", "ljust"], [66, 2, 1, "", "lower"], [66, 2, 1, "", "lstrip"], [66, 2, 1, "", "maketrans"], [66, 2, 1, "", "partition"], [66, 2, 1, "", "removeprefix"], [66, 2, 1, "", "removesuffix"], [66, 2, 1, "", "replace"], [66, 2, 1, "", "rfind"], [66, 2, 1, "", "rindex"], [66, 2, 1, "", "rjust"], [66, 2, 1, "", "rpartition"], [66, 2, 1, "", "rsplit"], [66, 2, 1, "", "rstrip"], [66, 2, 1, "", "split"], [66, 2, 1, "", "splitlines"], [66, 2, 1, "", "startswith"], [66, 2, 1, "", "strip"], [66, 2, 1, "", "swapcase"], [66, 2, 1, "", "title"], [66, 2, 1, "", "translate"], [66, 2, 1, "", "upper"], [66, 2, 1, "", "zfill"]], "skfolio.measures.ExtraRiskMeasure": [[67, 2, 1, "", "capitalize"], [67, 2, 1, "", "casefold"], [67, 2, 1, "", "center"], [67, 2, 1, "", "count"], [67, 2, 1, "", "encode"], [67, 2, 1, "", "endswith"], [67, 2, 1, "", "expandtabs"], [67, 2, 1, "", "find"], [67, 2, 1, "", "format"], [67, 2, 1, "", "format_map"], [67, 2, 1, "", "has"], [67, 2, 1, "", "index"], [67, 2, 1, "", "isalnum"], [67, 2, 1, "", "isalpha"], [67, 2, 1, "", "isascii"], [67, 2, 1, "", "isdecimal"], [67, 2, 1, "", "isdigit"], [67, 2, 1, "", "isidentifier"], [67, 2, 1, "", "islower"], [67, 2, 1, "", "isnumeric"], [67, 2, 1, "", "isprintable"], [67, 2, 1, "", "isspace"], [67, 2, 1, "", "istitle"], [67, 2, 1, "", "isupper"], [67, 2, 1, "", "join"], [67, 2, 1, "", "ljust"], [67, 2, 1, "", "lower"], [67, 2, 1, "", "lstrip"], [67, 2, 1, "", "maketrans"], [67, 2, 1, "", "partition"], [67, 2, 1, "", "removeprefix"], [67, 2, 1, "", "removesuffix"], [67, 2, 1, "", "replace"], [67, 2, 1, "", "rfind"], [67, 2, 1, "", "rindex"], [67, 2, 1, "", "rjust"], [67, 2, 1, "", "rpartition"], [67, 2, 1, "", "rsplit"], [67, 2, 1, "", "rstrip"], [67, 2, 1, "", "split"], [67, 2, 1, "", "splitlines"], [67, 2, 1, "", "startswith"], [67, 2, 1, "", "strip"], [67, 2, 1, "", "swapcase"], [67, 2, 1, "", "title"], [67, 2, 1, "", "translate"], [67, 2, 1, "", "upper"], [67, 2, 1, "", "zfill"]], "skfolio.measures.PerfMeasure": [[68, 2, 1, "", "capitalize"], [68, 2, 1, "", "casefold"], [68, 2, 1, "", "center"], [68, 2, 1, "", "count"], [68, 2, 1, "", "encode"], [68, 2, 1, "", "endswith"], [68, 2, 1, "", "expandtabs"], [68, 2, 1, "", "find"], [68, 2, 1, "", "format"], [68, 2, 1, "", "format_map"], [68, 2, 1, "", "has"], [68, 2, 1, "", "index"], [68, 2, 1, "", "isalnum"], [68, 2, 1, "", "isalpha"], [68, 2, 1, "", "isascii"], [68, 2, 1, "", "isdecimal"], [68, 2, 1, "", "isdigit"], [68, 2, 1, "", "isidentifier"], [68, 2, 1, "", "islower"], [68, 2, 1, "", "isnumeric"], [68, 2, 1, "", "isprintable"], [68, 2, 1, "", "isspace"], [68, 2, 1, "", "istitle"], [68, 2, 1, "", "isupper"], [68, 2, 1, "", "join"], [68, 2, 1, "", "ljust"], [68, 2, 1, "", "lower"], [68, 2, 1, "", "lstrip"], [68, 2, 1, "", "maketrans"], [68, 2, 1, "", "partition"], [68, 2, 1, "", "removeprefix"], [68, 2, 1, "", "removesuffix"], [68, 2, 1, "", "replace"], [68, 2, 1, "", "rfind"], [68, 2, 1, "", "rindex"], [68, 2, 1, "", "rjust"], [68, 2, 1, "", "rpartition"], [68, 2, 1, "", "rsplit"], [68, 2, 1, "", "rstrip"], [68, 2, 1, "", "split"], [68, 2, 1, "", "splitlines"], [68, 2, 1, "", "startswith"], [68, 2, 1, "", "strip"], [68, 2, 1, "", "swapcase"], [68, 2, 1, "", "title"], [68, 2, 1, "", "translate"], [68, 2, 1, "", "upper"], [68, 2, 1, "", "zfill"]], "skfolio.measures.RatioMeasure": [[69, 2, 1, "", "capitalize"], [69, 2, 1, "", "casefold"], [69, 2, 1, "", "center"], [69, 2, 1, "", "count"], [69, 2, 1, "", "encode"], [69, 2, 1, "", "endswith"], [69, 2, 1, "", "expandtabs"], [69, 2, 1, "", "find"], [69, 2, 1, "", "format"], [69, 2, 1, "", "format_map"], [69, 2, 1, "", "has"], [69, 2, 1, "", "index"], [69, 2, 1, "", "isalnum"], [69, 2, 1, "", "isalpha"], [69, 2, 1, "", "isascii"], [69, 2, 1, "", "isdecimal"], [69, 2, 1, "", "isdigit"], [69, 2, 1, "", "isidentifier"], [69, 2, 1, "", "islower"], [69, 2, 1, "", "isnumeric"], [69, 2, 1, "", "isprintable"], [69, 2, 1, "", "isspace"], [69, 2, 1, "", "istitle"], [69, 2, 1, "", "isupper"], [69, 2, 1, "", "join"], [69, 2, 1, "", "ljust"], [69, 2, 1, "", "lower"], [69, 2, 1, "", "lstrip"], [69, 2, 1, "", "maketrans"], [69, 2, 1, "", "partition"], [69, 2, 1, "", "removeprefix"], [69, 2, 1, "", "removesuffix"], [69, 2, 1, "", "replace"], [69, 2, 1, "", "rfind"], [69, 2, 1, "", "rindex"], [69, 2, 1, "", "rjust"], [69, 2, 1, "", "rpartition"], [69, 2, 1, "", "rsplit"], [69, 2, 1, "", "rstrip"], [69, 2, 1, "", "split"], [69, 2, 1, "", "splitlines"], [69, 2, 1, "", "startswith"], [69, 2, 1, "", "strip"], [69, 2, 1, "", "swapcase"], [69, 2, 1, "", "title"], [69, 2, 1, "", "translate"], [69, 2, 1, "", "upper"], [69, 2, 1, "", "zfill"]], "skfolio.measures.RiskMeasure": [[70, 2, 1, "", "capitalize"], [70, 2, 1, "", "casefold"], [70, 2, 1, "", "center"], [70, 2, 1, "", "count"], [70, 2, 1, "", "encode"], [70, 2, 1, "", "endswith"], [70, 2, 1, "", "expandtabs"], [70, 2, 1, "", "find"], [70, 2, 1, "", "format"], [70, 2, 1, "", "format_map"], [70, 2, 1, "", "has"], [70, 2, 1, "", "index"], [70, 2, 1, "", "isalnum"], [70, 2, 1, "", "isalpha"], [70, 2, 1, "", "isascii"], [70, 2, 1, "", "isdecimal"], [70, 2, 1, "", "isdigit"], [70, 2, 1, "", "isidentifier"], [70, 2, 1, "", "islower"], [70, 2, 1, "", "isnumeric"], [70, 2, 1, "", "isprintable"], [70, 2, 1, "", "isspace"], [70, 2, 1, "", "istitle"], [70, 2, 1, "", "isupper"], [70, 2, 1, "", "join"], [70, 2, 1, "", "ljust"], [70, 2, 1, "", "lower"], [70, 2, 1, "", "lstrip"], [70, 2, 1, "", "maketrans"], [70, 2, 1, "", "partition"], [70, 2, 1, "", "removeprefix"], [70, 2, 1, "", "removesuffix"], [70, 2, 1, "", "replace"], [70, 2, 1, "", "rfind"], [70, 2, 1, "", "rindex"], [70, 2, 1, "", "rjust"], [70, 2, 1, "", "rpartition"], [70, 2, 1, "", "rsplit"], [70, 2, 1, "", "rstrip"], [70, 2, 1, "", "split"], [70, 2, 1, "", "splitlines"], [70, 2, 1, "", "startswith"], [70, 2, 1, "", "strip"], [70, 2, 1, "", "swapcase"], [70, 2, 1, "", "title"], [70, 2, 1, "", "translate"], [70, 2, 1, "", "upper"], [70, 2, 1, "", "zfill"]], "skfolio.metrics": [[97, 3, 1, "", "make_scorer"]], "skfolio.model_selection": [[98, 1, 1, "", "BaseCombinatorialCV"], [99, 1, 1, "", "CombinatorialPurgedCV"], [100, 1, 1, "", "WalkForward"], [101, 3, 1, "", "cross_val_predict"], [102, 3, 1, "", "optimal_folds_number"]], "skfolio.model_selection.BaseCombinatorialCV": [[98, 2, 1, "", "get_path_ids"]], "skfolio.model_selection.CombinatorialPurgedCV": [[99, 4, 1, "", "binary_train_test_sets"], [99, 2, 1, "", "get_path_ids"], [99, 4, 1, "", "n_splits"], [99, 4, 1, "", "n_test_paths"], [99, 2, 1, "", "plot_train_test_folds"], [99, 2, 1, "", "plot_train_test_index"], [99, 4, 1, "", "recombined_paths"], [99, 2, 1, "", "split"], [99, 4, 1, "", "test_set_index"]], "skfolio.model_selection.WalkForward": [[100, 2, 1, "", "get_metadata_routing"], [100, 2, 1, "", "get_n_splits"], [100, 2, 1, "", "split"]], "skfolio.moments": [[103, 1, 1, "", "BaseCovariance"], [104, 1, 1, "", "BaseMu"], [105, 1, 1, "", "DenoiseCovariance"], [106, 1, 1, "", "DetoneCovariance"], [107, 1, 1, "", "EWCovariance"], [108, 1, 1, "", "EWMu"], [109, 1, 1, "", "EmpiricalCovariance"], [110, 1, 1, "", "EmpiricalMu"], [111, 1, 1, "", "EquilibriumMu"], [112, 1, 1, "", "GerberCovariance"], [113, 1, 1, "", "GraphicalLassoCV"], [114, 1, 1, "", "ImpliedCovariance"], [115, 1, 1, "", "LedoitWolf"], [116, 1, 1, "", "OAS"], [117, 1, 1, "", "ShrunkCovariance"], [118, 1, 1, "", "ShrunkMu"], [119, 1, 1, "", "ShrunkMuMethods"]], "skfolio.moments.BaseCovariance": [[103, 2, 1, "", "get_metadata_routing"], [103, 2, 1, "", "get_params"], [103, 2, 1, "", "set_params"]], "skfolio.moments.BaseMu": [[104, 2, 1, "", "get_metadata_routing"], [104, 2, 1, "", "get_params"], [104, 2, 1, "", "set_params"]], "skfolio.moments.DenoiseCovariance": [[105, 2, 1, "", "fit"], [105, 2, 1, "", "get_metadata_routing"], [105, 2, 1, "", "get_params"], [105, 2, 1, "", "set_params"]], "skfolio.moments.DetoneCovariance": [[106, 2, 1, "", "fit"], [106, 2, 1, "", "get_metadata_routing"], [106, 2, 1, "", "get_params"], [106, 2, 1, "", "set_params"]], "skfolio.moments.EWCovariance": [[107, 2, 1, "", "fit"], [107, 2, 1, "", "get_metadata_routing"], [107, 2, 1, "", "get_params"], [107, 2, 1, "", "set_params"]], "skfolio.moments.EWMu": [[108, 2, 1, "", "fit"], [108, 2, 1, "", "get_metadata_routing"], [108, 2, 1, "", "get_params"], [108, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalCovariance": [[109, 2, 1, "", "fit"], [109, 2, 1, "", "get_metadata_routing"], [109, 2, 1, "", "get_params"], [109, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalMu": [[110, 2, 1, "", "fit"], [110, 2, 1, "", "get_metadata_routing"], [110, 2, 1, "", "get_params"], [110, 2, 1, "", "set_params"]], "skfolio.moments.EquilibriumMu": [[111, 2, 1, "", "fit"], [111, 2, 1, "", "get_metadata_routing"], [111, 2, 1, "", "get_params"], [111, 2, 1, "", "set_params"]], "skfolio.moments.GerberCovariance": [[112, 2, 1, "", "fit"], [112, 2, 1, "", "get_metadata_routing"], [112, 2, 1, "", "get_params"], [112, 2, 1, "", "set_params"]], "skfolio.moments.GraphicalLassoCV": [[113, 2, 1, "", "error_norm"], [113, 2, 1, "", "fit"], [113, 2, 1, "", "get_metadata_routing"], [113, 2, 1, "", "get_params"], [113, 2, 1, "", "get_precision"], [113, 2, 1, "", "mahalanobis"], [113, 2, 1, "", "score"], [113, 2, 1, "", "set_params"], [113, 2, 1, "", "set_score_request"]], "skfolio.moments.ImpliedCovariance": [[114, 2, 1, "", "fit"], [114, 2, 1, "", "get_metadata_routing"], [114, 2, 1, "", "get_params"], [114, 2, 1, "", "set_fit_request"], [114, 2, 1, "", "set_params"]], "skfolio.moments.LedoitWolf": [[115, 2, 1, "", "error_norm"], [115, 2, 1, "", "fit"], [115, 2, 1, "", "get_metadata_routing"], [115, 2, 1, "", "get_params"], [115, 2, 1, "", "get_precision"], [115, 2, 1, "", "mahalanobis"], [115, 2, 1, "", "score"], [115, 2, 1, "", "set_params"], [115, 2, 1, "", "set_score_request"]], "skfolio.moments.OAS": [[116, 2, 1, "", "error_norm"], [116, 2, 1, "", "fit"], [116, 2, 1, "", "get_metadata_routing"], [116, 2, 1, "", "get_params"], [116, 2, 1, "", "get_precision"], [116, 2, 1, "", "mahalanobis"], [116, 2, 1, "", "score"], [116, 2, 1, "", "set_params"], [116, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkCovariance": [[117, 2, 1, "", "error_norm"], [117, 2, 1, "", "fit"], [117, 2, 1, "", "get_metadata_routing"], [117, 2, 1, "", "get_params"], [117, 2, 1, "", "get_precision"], [117, 2, 1, "", "mahalanobis"], [117, 2, 1, "", "score"], [117, 2, 1, "", "set_params"], [117, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkMu": [[118, 2, 1, "", "fit"], [118, 2, 1, "", "get_metadata_routing"], [118, 2, 1, "", "get_params"], [118, 2, 1, "", "set_params"]], "skfolio.moments.ShrunkMuMethods": [[119, 2, 1, "", "capitalize"], [119, 2, 1, "", "casefold"], [119, 2, 1, "", "center"], [119, 2, 1, "", "count"], [119, 2, 1, "", "encode"], [119, 2, 1, "", "endswith"], [119, 2, 1, "", "expandtabs"], [119, 2, 1, "", "find"], [119, 2, 1, "", "format"], [119, 2, 1, "", "format_map"], [119, 2, 1, "", "has"], [119, 2, 1, "", "index"], [119, 2, 1, "", "isalnum"], [119, 2, 1, "", "isalpha"], [119, 2, 1, "", "isascii"], [119, 2, 1, "", "isdecimal"], [119, 2, 1, "", "isdigit"], [119, 2, 1, "", "isidentifier"], [119, 2, 1, "", "islower"], [119, 2, 1, "", "isnumeric"], [119, 2, 1, "", "isprintable"], [119, 2, 1, "", "isspace"], [119, 2, 1, "", "istitle"], [119, 2, 1, "", "isupper"], [119, 2, 1, "", "join"], [119, 2, 1, "", "ljust"], [119, 2, 1, "", "lower"], [119, 2, 1, "", "lstrip"], [119, 2, 1, "", "maketrans"], [119, 2, 1, "", "partition"], [119, 2, 1, "", "removeprefix"], [119, 2, 1, "", "removesuffix"], [119, 2, 1, "", "replace"], [119, 2, 1, "", "rfind"], [119, 2, 1, "", "rindex"], [119, 2, 1, "", "rjust"], [119, 2, 1, "", "rpartition"], [119, 2, 1, "", "rsplit"], [119, 2, 1, "", "rstrip"], [119, 2, 1, "", "split"], [119, 2, 1, "", "splitlines"], [119, 2, 1, "", "startswith"], [119, 2, 1, "", "strip"], [119, 2, 1, "", "swapcase"], [119, 2, 1, "", "title"], [119, 2, 1, "", "translate"], [119, 2, 1, "", "upper"], [119, 2, 1, "", "zfill"]], "skfolio.optimization": [[120, 1, 1, "", "BaseComposition"], [121, 1, 1, "", "BaseHierarchicalOptimization"], [122, 1, 1, "", "ConvexOptimization"], [123, 1, 1, "", "DistributionallyRobustCVaR"], [124, 1, 1, "", "EqualWeighted"], [125, 1, 1, "", "HierarchicalEqualRiskContribution"], [126, 1, 1, "", "HierarchicalRiskParity"], [127, 1, 1, "", "InverseVolatility"], [128, 1, 1, "", "MaximumDiversification"], [129, 1, 1, "", "MeanRisk"], [130, 1, 1, "", "NestedClustersOptimization"], [131, 1, 1, "", "ObjectiveFunction"], [132, 1, 1, "", "Random"], [133, 1, 1, "", "RiskBudgeting"], [134, 1, 1, "", "StackingOptimization"], [0, 0, 0, "-", "cluster"], [0, 0, 0, "-", "convex"], [0, 0, 0, "-", "ensemble"], [0, 0, 0, "-", "naive"]], "skfolio.optimization.BaseComposition": [[120, 2, 1, "", "get_metadata_routing"], [120, 2, 1, "", "get_params"], [120, 2, 1, "", "set_params"]], "skfolio.optimization.BaseHierarchicalOptimization": [[121, 2, 1, "", "fit_predict"], [121, 2, 1, "", "get_metadata_routing"], [121, 2, 1, "", "get_params"], [121, 2, 1, "", "predict"], [121, 2, 1, "", "score"], [121, 2, 1, "", "set_params"]], "skfolio.optimization.ConvexOptimization": [[122, 2, 1, "", "fit_predict"], [122, 2, 1, "", "get_metadata_routing"], [122, 2, 1, "", "get_params"], [122, 2, 1, "", "predict"], [122, 2, 1, "", "score"], [122, 2, 1, "", "set_params"]], "skfolio.optimization.DistributionallyRobustCVaR": [[123, 2, 1, "", "fit"], [123, 2, 1, "", "fit_predict"], [123, 2, 1, "", "get_metadata_routing"], [123, 2, 1, "", "get_params"], [123, 2, 1, "", "predict"], [123, 2, 1, "", "score"], [123, 2, 1, "", "set_params"]], "skfolio.optimization.EqualWeighted": [[124, 2, 1, "", "fit"], [124, 2, 1, "", "fit_predict"], [124, 2, 1, "", "get_metadata_routing"], [124, 2, 1, "", "get_params"], [124, 2, 1, "", "predict"], [124, 2, 1, "", "score"], [124, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[125, 2, 1, "", "fit"], [125, 2, 1, "", "fit_predict"], [125, 2, 1, "", "get_metadata_routing"], [125, 2, 1, "", "get_params"], [125, 2, 1, "", "predict"], [125, 2, 1, "", "score"], [125, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalRiskParity": [[126, 2, 1, "", "fit"], [126, 2, 1, "", "fit_predict"], [126, 2, 1, "", "get_metadata_routing"], [126, 2, 1, "", "get_params"], [126, 2, 1, "", "predict"], [126, 2, 1, "", "score"], [126, 2, 1, "", "set_params"]], "skfolio.optimization.InverseVolatility": [[127, 2, 1, "", "fit"], [127, 2, 1, "", "fit_predict"], [127, 2, 1, "", "get_metadata_routing"], [127, 2, 1, "", "get_params"], [127, 2, 1, "", "predict"], [127, 2, 1, "", "score"], [127, 2, 1, "", "set_params"]], "skfolio.optimization.MaximumDiversification": [[128, 2, 1, "", "fit"], [128, 2, 1, "", "fit_predict"], [128, 2, 1, "", "get_metadata_routing"], [128, 2, 1, "", "get_params"], [128, 2, 1, "", "predict"], [128, 2, 1, "", "score"], [128, 2, 1, "", "set_params"]], "skfolio.optimization.MeanRisk": [[129, 2, 1, "", "fit"], [129, 2, 1, "", "fit_predict"], [129, 2, 1, "", "get_metadata_routing"], [129, 2, 1, "", "get_params"], [129, 2, 1, "", "predict"], [129, 2, 1, "", "score"], [129, 2, 1, "", "set_params"]], "skfolio.optimization.NestedClustersOptimization": [[130, 2, 1, "", "fit"], [130, 2, 1, "", "fit_predict"], [130, 2, 1, "", "get_metadata_routing"], [130, 2, 1, "", "get_params"], [130, 2, 1, "", "predict"], [130, 2, 1, "", "score"], [130, 2, 1, "", "set_params"]], "skfolio.optimization.ObjectiveFunction": [[131, 2, 1, "", "capitalize"], [131, 2, 1, "", "casefold"], [131, 2, 1, "", "center"], [131, 2, 1, "", "count"], [131, 2, 1, "", "encode"], [131, 2, 1, "", "endswith"], [131, 2, 1, "", "expandtabs"], [131, 2, 1, "", "find"], [131, 2, 1, "", "format"], [131, 2, 1, "", "format_map"], [131, 2, 1, "", "has"], [131, 2, 1, "", "index"], [131, 2, 1, "", "isalnum"], [131, 2, 1, "", "isalpha"], [131, 2, 1, "", "isascii"], [131, 2, 1, "", "isdecimal"], [131, 2, 1, "", "isdigit"], [131, 2, 1, "", "isidentifier"], [131, 2, 1, "", "islower"], [131, 2, 1, "", "isnumeric"], [131, 2, 1, "", "isprintable"], [131, 2, 1, "", "isspace"], [131, 2, 1, "", "istitle"], [131, 2, 1, "", "isupper"], [131, 2, 1, "", "join"], [131, 2, 1, "", "ljust"], [131, 2, 1, "", "lower"], [131, 2, 1, "", "lstrip"], [131, 2, 1, "", "maketrans"], [131, 2, 1, "", "partition"], [131, 2, 1, "", "removeprefix"], [131, 2, 1, "", "removesuffix"], [131, 2, 1, "", "replace"], [131, 2, 1, "", "rfind"], [131, 2, 1, "", "rindex"], [131, 2, 1, "", "rjust"], [131, 2, 1, "", "rpartition"], [131, 2, 1, "", "rsplit"], [131, 2, 1, "", "rstrip"], [131, 2, 1, "", "split"], [131, 2, 1, "", "splitlines"], [131, 2, 1, "", "startswith"], [131, 2, 1, "", "strip"], [131, 2, 1, "", "swapcase"], [131, 2, 1, "", "title"], [131, 2, 1, "", "translate"], [131, 2, 1, "", "upper"], [131, 2, 1, "", "zfill"]], "skfolio.optimization.Random": [[132, 2, 1, "", "fit"], [132, 2, 1, "", "fit_predict"], [132, 2, 1, "", "get_metadata_routing"], [132, 2, 1, "", "get_params"], [132, 2, 1, "", "predict"], [132, 2, 1, "", "score"], [132, 2, 1, "", "set_params"]], "skfolio.optimization.RiskBudgeting": [[133, 2, 1, "", "fit"], [133, 2, 1, "", "fit_predict"], [133, 2, 1, "", "get_metadata_routing"], [133, 2, 1, "", "get_params"], [133, 2, 1, "", "predict"], [133, 2, 1, "", "score"], [133, 2, 1, "", "set_params"]], "skfolio.optimization.StackingOptimization": [[134, 2, 1, "", "fit"], [134, 2, 1, "", "fit_predict"], [134, 2, 1, "", "get_metadata_routing"], [134, 2, 1, "", "get_params"], [134, 4, 1, "", "named_estimators"], [134, 2, 1, "", "predict"], [134, 2, 1, "", "score"], [134, 2, 1, "", "set_params"]], "skfolio.population": [[135, 1, 1, "", "Population"]], "skfolio.population.Population": [[135, 2, 1, "", "append"], [135, 2, 1, "", "clear"], [135, 2, 1, "", "composition"], [135, 2, 1, "", "contribution"], [135, 2, 1, "", "copy"], [135, 2, 1, "", "count"], [135, 2, 1, "", "extend"], [135, 2, 1, "", "filter"], [135, 2, 1, "", "index"], [135, 2, 1, "", "insert"], [135, 2, 1, "", "max_measure"], [135, 2, 1, "", "measures"], [135, 2, 1, "", "measures_mean"], [135, 2, 1, "", "measures_std"], [135, 2, 1, "", "min_measure"], [135, 2, 1, "", "non_denominated_sort"], [135, 2, 1, "", "plot_composition"], [135, 2, 1, "", "plot_contribution"], [135, 2, 1, "", "plot_cumulative_returns"], [135, 2, 1, "", "plot_distribution"], [135, 2, 1, "", "plot_measures"], [135, 2, 1, "", "plot_rolling_measure"], [135, 2, 1, "", "pop"], [135, 2, 1, "", "quantile"], [135, 2, 1, "", "remove"], [135, 2, 1, "", "reverse"], [135, 2, 1, "", "rolling_measure"], [135, 2, 1, "", "set_portfolio_params"], [135, 2, 1, "", "sort"], [135, 2, 1, "", "sort_measure"], [135, 2, 1, "", "summary"]], "skfolio.portfolio": [[136, 1, 1, "", "BasePortfolio"], [137, 1, 1, "", "MultiPeriodPortfolio"], [138, 1, 1, "", "Portfolio"]], "skfolio.portfolio.BasePortfolio": [[136, 4, 1, "", "annualized_factor"], [136, 2, 1, "", "clear"], [136, 4, 1, "", "composition"], [136, 2, 1, "", "contribution"], [136, 2, 1, "", "copy"], [136, 5, 1, "", "cumulative_returns"], [136, 4, 1, "", "cumulative_returns_df"], [136, 2, 1, "", "dominates"], [136, 5, 1, "", "drawdowns"], [136, 5, 1, "", "fitness"], [136, 4, 1, "", "fitness_measures"], [136, 2, 1, "", "get_measure"], [136, 4, 1, "", "measures_df"], [136, 4, 1, "", "n_observations"], [136, 2, 1, "", "plot_composition"], [136, 2, 1, "", "plot_contribution"], [136, 2, 1, "", "plot_cumulative_returns"], [136, 2, 1, "", "plot_returns"], [136, 2, 1, "", "plot_rolling_measure"], [136, 4, 1, "", "returns_df"], [136, 2, 1, "", "rolling_measure"], [136, 2, 1, "", "summary"]], "skfolio.portfolio.MultiPeriodPortfolio": [[137, 4, 1, "", "annualized_factor"], [137, 2, 1, "", "append"], [137, 4, 1, "", "assets"], [137, 2, 1, "", "clear"], [137, 4, 1, "", "composition"], [137, 2, 1, "", "contribution"], [137, 2, 1, "", "copy"], [137, 5, 1, "", "cumulative_returns"], [137, 4, 1, "", "cumulative_returns_df"], [137, 2, 1, "", "dominates"], [137, 5, 1, "", "drawdowns"], [137, 5, 1, "", "fitness"], [137, 4, 1, "", "fitness_measures"], [137, 2, 1, "", "get_measure"], [137, 4, 1, "", "measures_df"], [137, 4, 1, "", "n_observations"], [137, 2, 1, "", "plot_composition"], [137, 2, 1, "", "plot_contribution"], [137, 2, 1, "", "plot_cumulative_returns"], [137, 2, 1, "", "plot_returns"], [137, 2, 1, "", "plot_rolling_measure"], [137, 4, 1, "", "portfolios"], [137, 4, 1, "", "returns_df"], [137, 2, 1, "", "rolling_measure"], [137, 2, 1, "", "summary"], [137, 4, 1, "", "weights_per_observation"]], "skfolio.portfolio.Portfolio": [[138, 4, 1, "", "annualized_factor"], [138, 2, 1, "", "clear"], [138, 4, 1, "", "composition"], [138, 2, 1, "", "contribution"], [138, 2, 1, "", "copy"], [138, 5, 1, "", "cumulative_returns"], [138, 4, 1, "", "cumulative_returns_df"], [138, 4, 1, "", "diversification"], [138, 2, 1, "", "dominates"], [138, 5, 1, "", "drawdowns"], [138, 4, 1, "", "effective_number_assets"], [138, 2, 1, "", "expected_returns_from_assets"], [138, 5, 1, "", "fitness"], [138, 4, 1, "", "fitness_measures"], [138, 2, 1, "", "get_measure"], [138, 2, 1, "", "get_weight"], [138, 4, 1, "", "measures_df"], [138, 4, 1, "", "n_observations"], [138, 5, 1, "", "nonzero_assets"], [138, 5, 1, "", "nonzero_assets_index"], [138, 2, 1, "", "plot_composition"], [138, 2, 1, "", "plot_contribution"], [138, 2, 1, "", "plot_cumulative_returns"], [138, 2, 1, "", "plot_returns"], [138, 2, 1, "", "plot_rolling_measure"], [138, 4, 1, "", "returns_df"], [138, 2, 1, "", "rolling_measure"], [138, 4, 1, "", "sric"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "variance_from_assets"], [138, 4, 1, "", "weights_per_observation"]], "skfolio.pre_selection": [[139, 1, 1, "", "DropCorrelated"], [140, 1, 1, "", "SelectComplete"], [141, 1, 1, "", "SelectKExtremes"], [142, 1, 1, "", "SelectNonDominated"], [143, 1, 1, "", "SelectNonExpiring"]], "skfolio.pre_selection.DropCorrelated": [[139, 2, 1, "", "fit"], [139, 2, 1, "", "fit_transform"], [139, 2, 1, "", "get_feature_names_out"], [139, 2, 1, "", "get_metadata_routing"], [139, 2, 1, "", "get_params"], [139, 2, 1, "", "get_support"], [139, 2, 1, "", "inverse_transform"], [139, 2, 1, "", "set_output"], [139, 2, 1, "", "set_params"], [139, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectComplete": [[140, 2, 1, "", "fit"], [140, 2, 1, "", "fit_transform"], [140, 2, 1, "", "get_feature_names_out"], [140, 2, 1, "", "get_metadata_routing"], [140, 2, 1, "", "get_params"], [140, 2, 1, "", "get_support"], [140, 2, 1, "", "inverse_transform"], [140, 2, 1, "", "set_output"], [140, 2, 1, "", "set_params"], [140, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectKExtremes": [[141, 2, 1, "", "fit"], [141, 2, 1, "", "fit_transform"], [141, 2, 1, "", "get_feature_names_out"], [141, 2, 1, "", "get_metadata_routing"], [141, 2, 1, "", "get_params"], [141, 2, 1, "", "get_support"], [141, 2, 1, "", "inverse_transform"], [141, 2, 1, "", "set_output"], [141, 2, 1, "", "set_params"], [141, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectNonDominated": [[142, 2, 1, "", "fit"], [142, 2, 1, "", "fit_transform"], [142, 2, 1, "", "get_feature_names_out"], [142, 2, 1, "", "get_metadata_routing"], [142, 2, 1, "", "get_params"], [142, 2, 1, "", "get_support"], [142, 2, 1, "", "inverse_transform"], [142, 2, 1, "", "set_output"], [142, 2, 1, "", "set_params"], [142, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectNonExpiring": [[143, 2, 1, "", "fit"], [143, 2, 1, "", "fit_transform"], [143, 2, 1, "", "get_feature_names_out"], [143, 2, 1, "", "get_metadata_routing"], [143, 2, 1, "", "get_params"], [143, 2, 1, "", "get_support"], [143, 2, 1, "", "inverse_transform"], [143, 2, 1, "", "set_output"], [143, 2, 1, "", "set_params"], [143, 2, 1, "", "transform"]], "skfolio.preprocessing": [[144, 3, 1, "", "prices_to_returns"]], "skfolio.prior": [[145, 1, 1, "", "BaseLoadingMatrix"], [146, 1, 1, "", "BasePrior"], [147, 1, 1, "", "BlackLitterman"], [148, 1, 1, "", "EmpiricalPrior"], [149, 1, 1, "", "FactorModel"], [150, 1, 1, "", "LoadingMatrixRegression"], [151, 1, 1, "", "PriorModel"]], "skfolio.prior.BaseLoadingMatrix": [[145, 2, 1, "", "get_metadata_routing"], [145, 2, 1, "", "get_params"], [145, 2, 1, "", "set_params"]], "skfolio.prior.BasePrior": [[146, 2, 1, "", "get_metadata_routing"], [146, 2, 1, "", "get_params"], [146, 2, 1, "", "set_params"]], "skfolio.prior.BlackLitterman": [[147, 2, 1, "", "fit"], [147, 2, 1, "", "get_metadata_routing"], [147, 2, 1, "", "get_params"], [147, 2, 1, "", "set_params"]], "skfolio.prior.EmpiricalPrior": [[148, 2, 1, "", "fit"], [148, 2, 1, "", "get_metadata_routing"], [148, 2, 1, "", "get_params"], [148, 2, 1, "", "set_params"]], "skfolio.prior.FactorModel": [[149, 2, 1, "", "fit"], [149, 2, 1, "", "get_metadata_routing"], [149, 2, 1, "", "get_params"], [149, 2, 1, "", "set_params"]], "skfolio.prior.LoadingMatrixRegression": [[150, 2, 1, "", "fit"], [150, 2, 1, "", "get_metadata_routing"], [150, 2, 1, "", "get_params"], [150, 2, 1, "", "set_params"]], "skfolio.uncertainty_set": [[152, 1, 1, "", "BaseCovarianceUncertaintySet"], [153, 1, 1, "", "BaseMuUncertaintySet"], [154, 1, 1, "", "BootstrapCovarianceUncertaintySet"], [155, 1, 1, "", "BootstrapMuUncertaintySet"], [156, 1, 1, "", "EmpiricalCovarianceUncertaintySet"], [157, 1, 1, "", "EmpiricalMuUncertaintySet"], [158, 1, 1, "", "UncertaintySet"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[152, 2, 1, "", "get_metadata_routing"], [152, 2, 1, "", "get_params"], [152, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[153, 2, 1, "", "get_metadata_routing"], [153, 2, 1, "", "get_params"], [153, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[154, 2, 1, "", "fit"], [154, 2, 1, "", "get_metadata_routing"], [154, 2, 1, "", "get_params"], [154, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[155, 2, 1, "", "fit"], [155, 2, 1, "", "get_metadata_routing"], [155, 2, 1, "", "get_params"], [155, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[156, 2, 1, "", "fit"], [156, 2, 1, "", "get_metadata_routing"], [156, 2, 1, "", "get_params"], [156, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[157, 2, 1, "", "fit"], [157, 2, 1, "", "get_metadata_routing"], [157, 2, 1, "", "get_params"], [157, 2, 1, "", "set_params"]], "skfolio.utils.stats": [[159, 3, 1, "", "NBinsMethod"], [160, 3, 1, "", "assert_is_distance"], [161, 3, 1, "", "assert_is_square"], [162, 3, 1, "", "assert_is_symmetric"], [163, 3, 1, "", "commutation_matrix"], [164, 3, 1, "", "compute_optimal_n_clusters"], [165, 3, 1, "", "corr_to_cov"], [166, 3, 1, "", "cov_nearest"], [167, 3, 1, "", "cov_to_corr"], [168, 3, 1, "", "is_cholesky_dec"], [169, 3, 1, "", "minimize_relative_weight_deviation"], [170, 3, 1, "", "n_bins_freedman"], [171, 3, 1, "", "n_bins_knuth"], [172, 3, 1, "", "rand_weights"], [173, 3, 1, "", "rand_weights_dirichlet"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "terms": {"": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 164, 169, 171, 174, 177, 178, 179, 180, 181, 185, 187, 188, 189, 190, 191, 192], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 57, 60, 61, 62, 64, 65, 72, 73, 74, 75, 77, 78, 82, 94, 99, 100, 101, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 142, 144, 147, 154, 155, 156, 157, 158, 172, 174, 175, 178, 182, 183, 186, 187, 188, 189, 190, 191, 192], "00": [7, 8, 9, 14, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 34, 36, 40, 43, 45, 49, 51, 175], "000": [48, 51], "0000": [53, 57, 66, 67, 68, 69, 70, 119, 131], "000000": [7, 8, 41, 42], "000000132533317": 9, "000005": 40, "000006": [9, 40], "000007": [9, 40], "000008": [8, 9], "000009": [9, 15, 23], "000010": [9, 19, 36], "000011": [7, 9, 18, 19, 20], "000012": [9, 20], "000013": [8, 9, 14, 15, 23], "000014": [9, 15, 36], "000015": [9, 36], "000016": [8, 9], "000017": 9, "000018": 9, "000019": 9, "000020": [9, 14], "000021": [9, 14, 19], "000022": [7, 9, 18, 19], "000023": [9, 18, 20], "000024": 9, "000025": 20, "000026": 9, "000027": [8, 23], "000028": [9, 23], "000029": [7, 9], "000031": 9, "000033": 9, "000034": 9, "000035": 9, "000037": [9, 29], "000038": 9, "000039": 29, "000040": [9, 29], "000041": [9, 29], "000043": [9, 29], "000045": 9, "000046": 9, "000050": 9, "000054": 9, "000055": 9, "000056": 9, "000057": 9, "000058": 9, "000062": 9, "00007": 6, "000070": 9, "000073": 29, "000074": 29, "000078": 29, "000079": [9, 29], "000082": 15, "000088": 9, "000090": 29, "000096": 40, "000097": 9, "000098": 9, "0001": [26, 113, 174, 182], "00010": [15, 147], "00011": [6, 9, 40], "00012": [9, 10], "00013": 14, "00014": 9, "00015": 147, "00016": 9, "00017": [8, 9, 36], "00018": 9, "00019": 9, "0002": [147, 174, 189], "00020": 9, "00021": [7, 9, 18, 19], "00022": [9, 18, 20], "00023": [8, 9, 14, 19, 20, 23], "00024": [7, 9, 23], "00025": [9, 15], "00026": [9, 29], "00027": [9, 29], "00028": [9, 29], "00029": 9, "0003": [187, 191], "00030": 9, "00031": 9, "00032": 9, "00033": 9, "00034": 9, "00035": 9, "00035714285714285714": 14, "00036": 9, "00037": 9, "00038": 9, "00039": [6, 9, 147], "0004": [147, 187, 191], "00040": 9, "00041": 9, "00042": 9, "00043": 9, "00044": 9, "00045": 9, "00046": 9, "00047": 9, "00048": 9, "0005": 31, "00059": [4, 6, 9], "0006": [187, 191], "00062": 15, "00068": 15, "00071": 14, "00074": 15, "00075": 15, "00077": 9, "00079": [14, 15], "00080": 15, "00081": 14, "00084": 14, "00085": 9, "00086": [4, 6, 14], "00087": 14, "00093": 15, "00094": 14, "00097": 40, "00098": [4, 6], "001": [14, 26, 36, 138, 182, 189], "0010": 189, "00105085": 8, "0011": [9, 40], "0012": [9, 14, 15, 36], "00122": 36, "00125": 36, "0013": [11, 14, 15, 40, 122, 123, 128, 129, 133], "00139632": 2, "0014": [9, 189], "0015": [8, 9, 40, 189], "00152747": 7, "0016": [9, 15, 40], "0017": [9, 14, 15], "00175085e": 5, "0018": [7, 9, 14, 18, 19, 40], "001848": 42, "00184821": 42, "0019": [9, 15, 18, 20, 36], "00199173": 7, "002": [12, 13, 16, 175, 189], "0020": [8, 9, 20, 23, 40], "0021": [9, 14, 15, 19], "002125": 42, "00212535": 42, "0022": [7, 9, 15], "0023": [9, 14, 29, 40], "0024": [9, 23, 29], "0025": [8, 9, 189], "0026": [9, 36], "00263": 36, "0027": [9, 14, 15], "0028": [9, 14], "0029": [9, 15, 31], "003": [2, 189], "0030": [9, 189], "00305": 36, "0031": [9, 36], "0032": [7, 9, 18, 19], "00322793": 2, "0033": [8, 9, 15, 18, 20, 23, 29], "00331543e": 32, "0034": [9, 15, 29, 40], "00342423": 8, "0035": [8, 9], "00354605": 8, "00356473": 9, "0036": [9, 19], "00369475": 42, "003695": 42, "0036976120249752": 7, "0037": [7, 9, 14], "00370324": 2, "003731": [7, 8], "003745": [7, 8], "003759": [7, 8], "0038": [9, 40], "0039": [9, 23], "004": 189, "0040": [9, 15, 36, 40], "0041": [9, 14, 40], "0042": 40, "0043": [9, 15], "0044": [9, 14], "004411": 42, "00441122": 42, "0045": [9, 15, 29], "0046": [8, 9, 29], "0047": [9, 29, 36], "0048": [9, 36, 40], "0049": [9, 23], "005": [9, 12, 16, 175], "0050": 9, "0051": [8, 9, 15, 23], "0052": [7, 9, 18, 19, 20, 36], "005201": [7, 8], "005267": [7, 8], "0053": [7, 9, 14, 18, 19, 20], "0054": [9, 14, 18, 20, 36], "00542224": 8, "0055": [9, 15], "0056": [9, 19], "005633": [7, 8], "0057": [15, 36], "0058": [9, 20], "0059": 9, "006": 15, "0060": [8, 9, 23], "0061": [7, 8, 9, 18, 19], "0062": [9, 23], "0063": [7, 9, 14, 15, 18, 20, 40], "0064": [8, 9, 15, 23], "00649762e": 32, "0065": 9, "0066": [9, 40], "0067": [9, 19], "0068": [9, 15], "0069": 9, "00696856": 42, "006969": 42, "007": [26, 27, 175], "0070": [9, 29, 40], "007042": 42, "00704222": 42, "0071": [7, 9, 14], "0072": [8, 9, 14, 23, 29], "0073": [7, 9, 18, 19, 20, 29, 40], "0074": [9, 29, 40], "007435": [7, 8], "0075": [9, 40], "007576": [7, 8], "0076": [9, 14, 29], "00765335": 19, "0077": [9, 19, 29], "0078": [9, 14, 29], "0079": [9, 23], "007f": [53, 66, 67, 68, 69, 70, 119, 131], "0080": [9, 29], "008045": [7, 8], "00805152": 7, "0081": [9, 36], "0082": 9, "00827991": 30, "0083": 9, "0084": 9, "0085": [9, 14], "0086": 9, "0087": 9, "0088": [9, 14], "0089": 9, "0090": [8, 9], "0091": 9, "0092": 9, "0093": 9, "0093012": 19, "00932275": 7, "0094": 9, "0095": [9, 36], "00954938e": 39, "0096": [9, 36], "0097": [9, 15], "0098": [9, 15, 36], "009868": [7, 8], "0099": [9, 15], "009908": 42, "00990834": 42, "00992555": 9, "009933": [7, 8], "01": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 45, 46, 48, 54, 55, 56, 57, 58, 143, 147, 175, 179, 182, 187, 189], "010": [7, 8, 9, 15, 18, 19, 20], "0100": 9, "010079": [7, 8], "01024013e": 8, "01028137": 2, "01069377": 8, "010732": [7, 8], "01084089": 7, "011": [8, 9, 20, 29, 36], "01100645": 2, "01140416": 30, "012": [7, 8, 9, 14, 18, 19, 20, 23, 29], "01217676": 8, "01241175": 9, "013": [8, 9, 14, 15, 19, 20, 23, 29, 36], "013630": [7, 8], "014": [7, 9, 14, 23, 29, 40, 56], "0141": 31, "0149": 31, "015": [7, 8, 9, 14, 15, 23, 29, 147], "01516702e": 32, "015381": [7, 8], "015500": [7, 8], "01562655e": 5, "0157": 31, "0159": 31, "016": [7, 9, 15, 18, 19, 20, 36, 40], "016527": [7, 8], "017": [8, 9, 19], "01757816": 30, "01787286": 7, "018": 9, "019": [9, 14], "01910610e": 26, "019355": [7, 8], "01943433": 9, "02": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 37, 39, 40, 41, 48, 54, 56, 57, 58, 123, 143, 147, 175, 179, 189], "020": [9, 14], "020114": [7, 8], "0201935849251913": 9, "020833": [7, 8], "02092595": 9, "021": [9, 15, 36, 48], "02117437": 2, "021355": [7, 8], "02155918": 2, "02170548": 30, "021741551637176403": 8, "021821": [7, 8], "022": [9, 15, 23, 29, 36], "022087577333231": 9, "02231082e": 4, "02274707": 45, "023": [9, 14, 29, 40, 48], "02313728e": 6, "02325356e": 39, "023351363731400693": 14, "0235": 33, "02374444": 2, "024": [7, 8, 9, 14, 15, 29, 48], "02409012": 30, "02428936": 30, "024823": [7, 8], "02483767": 29, "025": [9, 15, 29], "025061083134673378": 8, "02548697": [7, 18, 19], "02554287": 45, "02564642": [7, 18, 19], "02575021": 30, "02596219": 29, "026": [8, 9, 14, 20, 23, 29, 40], "026619": [7, 8], "027": [7, 8, 9, 14, 18, 19, 20, 23, 29, 48], "02702131": 9, "02730592": 30, "02737024e": 23, "02773558": 29, "028": 9, "029": [7, 9, 19, 23, 40], "02943678": 9, "0296872": [7, 18, 19], "02979163": 45, "0298146": 2, "02983878": 30, "03": [2, 4, 5, 6, 7, 8, 9, 13, 15, 16, 19, 23, 29, 32, 36, 39, 40, 42, 48, 54, 56, 57, 58, 143, 174, 175, 189], "030": 9, "030303": [7, 8], "031": [9, 15], "03133290e": [5, 6], "03144452": 29, "031996": [7, 8], "032": [9, 15, 40, 48], "03210859": [18, 20], "03257461": 19, "032813": 9, "033": [9, 40], "03306735": [7, 18, 19], "03319698": 30, "03336015": 19, "03372588": [18, 20], "034": [9, 14, 40], "03411224e": 39, "03451951": [18, 20], "03497807": 29, "035": [9, 14, 15, 36], "03551377": [7, 18, 19], "03629576": 45, "03632272": 29, "03676195": 2, "037": [9, 14, 36, 40], "03703667": 45, "03704654": 9, "0373302": 2, "03752756": 45, "0376": 33, "03774863": 9, "03785038": [18, 20], "03790179": 29, "038": [9, 40], "03882539": [7, 18, 19], "039": [8, 9, 29, 55, 147], "0393462": 29, "03970752": [7, 18, 19], "03993049": 9, "03994768": 19, "0399564198206181": 7, "04": [2, 3, 4, 7, 8, 9, 14, 15, 16, 20, 21, 31, 36, 39, 40, 45, 48, 55, 56, 57, 58, 143, 147, 174, 175], "040": [7, 9, 14, 18, 19, 29], "0404652": [18, 20], "04094166": 29, "041": [9, 18, 20, 29, 30, 34, 48, 175], "04135261": [18, 20], "04135536": 45, "04158213": 9, "04183614e": 6, "042": [9, 15, 55], "04203502": 189, "04203503": 189, "04204356": 9, "04207543": 45, "04230882": 19, "04238321": 45, "04252186": [18, 20], "04289017": 9, "042905188114835": 9, "043": [9, 20, 34], "0430764": 9, "043189": [7, 8], "0437015": 20, "044": [7, 8, 9, 15, 18, 19, 23], "04421773": 29, "04432799": [18, 20], "04462864": 45, "045": [8, 9, 15, 18, 20, 23, 40], "0450291": 20, "04535479": [18, 20], "04539473": 20, "04579241": 19, "04585759e": 8, "04592872": 45, "046": [9, 55], "04647791": 20, "04667615": [18, 20], "047": [7, 9, 14, 19], "04723274": [7, 18, 19], "04726087": 30, "04742354": [7, 18, 19], "04745674": 45, "04755091": 20, "04763559e": 32, "04774388": 20, "048": [7, 9, 40, 55], "04807705": 29, "04828249": 19, "04852985": 20, "04863941e": 3, "04893332": 12, "04897392": 19, "049": [9, 36], "04907476": 20, "04927258": 20, "04927288": 30, "04988152": 20, "05": [7, 8, 9, 10, 14, 15, 16, 18, 19, 23, 26, 29, 30, 31, 32, 36, 39, 40, 43, 45, 48, 55, 56, 57, 58, 122, 123, 128, 129, 133, 147, 174, 175], "050": [8, 9, 14, 36], "05033705": 29, "0507476631082548": 33, "051": [9, 23, 36, 40], "05104143": [18, 20], "05112774": 20, "05138231": 20, "05151071e": 13, "05178557": 20, "05199293": 20, "052": [8, 9, 29, 36], "05201909e": 39, "05209466": [18, 20], "05284612": 20, "05289115": 29, "05293211": 20, "053": [9, 29], "05358558": 45, "05360597": 20, "05371274": 19, "05373832": 20, "05375682": 20, "054": [9, 29, 40, 54], "05417536": 20, "05418934": [18, 20], "05430773": 19, "05434705": [7, 18, 19], "055": [8, 9, 14, 29], "05537228": 19, "05570808": [7, 18, 19], "05576851": [7, 18, 19], "05581397": [7, 18, 19], "056": [8, 9, 29], "05618856": 45, "05627036": [18, 20], "05685439e": 5, "057": [9, 29], "05717669e": 3, "05726203": 30, "05744543": [7, 18, 19], "058": [9, 29], "05814153": 30, "05865087e": 12, "05865225e": 12, "059": 9, "059202": 29, "06": [7, 8, 9, 13, 18, 19, 20, 23, 29, 45, 46, 54, 55, 143, 174, 175], "060": 9, "061": 9, "06105344": [18, 20], "06119539": [18, 20], "06173016": 19, "062": 9, "06210401": 11, "06251756": 19, "063": [7, 9, 14, 18, 19, 36], "06308422": 29, "06310889": 29, "06348968": 19, "06351213": [7, 18, 19], "06358463": [7, 18, 19], "06368034": 45, "064": [7, 8, 9, 18, 19, 20, 23], "06469301": [18, 20], "065": [7, 9, 18, 19, 20, 23], "06560031": 19, "06568174": [18, 20], "06593408": [18, 20], "066": [7, 9], "06610498": [7, 18, 19], "06656721": 30, "06697905": [7, 18, 19], "067": [9, 19, 40, 54], "06700177": 19, "06701373": 45, "06751700801423988": 10, "0676481": [7, 18, 19], "068": [9, 14, 19, 20, 36, 40, 48], "06832987": 11, "06858182": 2, "06880861": 19, "06892752": 19, "06894357": [18, 20], "069": [8, 9, 15, 23], "06982611e": 26, "07": [8, 9, 12, 16, 23, 29, 45, 54, 55, 175], "070": [9, 15, 36], "07033698": 19, "07049715": [7, 18, 19], "07087663e": 26, "07089574e": 39, "071": 9, "072": [9, 23], "07275256": 45, "073": [7, 9, 14, 15, 36], "07317879": 2, "0739193": 45, "074": [9, 15, 29], "07464383": 29, "07489027": 45, "075": [9, 14, 29], "07596741": 29, "076": [8, 9, 29], "07646462e": 32, "077": [9, 29, 36], "078": 9, "079": [9, 29], "07941073": 2, "08": [2, 4, 5, 7, 8, 9, 13, 14, 15, 19, 23, 36, 40, 45, 48, 54, 56, 57, 58], "080": [9, 55], "08070112": 30, "08083036": 30, "08086158e": 23, "081": [9, 29], "0810491": 2, "082": 9, "08277551": 29, "083": 9, "083026522037526": 9, "084": [9, 29], "085": [8, 9, 29], "08520002": 45, "086": [9, 29], "08622477": 29, "087": [9, 29], "08797657e": 39, "088": [7, 8, 9, 18, 19, 23], "08892765e": 39, "089": [9, 18, 20], "09": [3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 26, 40, 45], "090": [9, 15], "091": 9, "092": [7, 9, 23, 45, 46, 175], "09228437e": [3, 4, 7], "093": [9, 19], "0933616": 30, "094": 9, "09415607e": 39, "09420898": 30, "095": 9, "09507654e": [3, 4, 7], "096": [9, 23], "09680459e": 39, "097": [8, 9, 20, 23, 40], "09718550832245015": 10, "0972": 10, "098": [7, 9, 18, 19, 20], "09849875e": [5, 6], "099": [7, 9], "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 24, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 40, 41, 42, 45, 46, 48, 49, 52, 53, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 94, 97, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 150, 154, 155, 156, 157, 158, 159, 164, 166, 169, 170, 171, 174, 178, 182, 183, 187, 188, 189, 192], "10": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 23, 26, 29, 36, 37, 39, 40, 41, 42, 45, 48, 55, 99, 116, 122, 123, 128, 129, 133, 141, 143, 174, 175, 182, 186], "100": [9, 11, 14, 15, 31, 36, 39, 40, 42, 45, 55, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 133, 149, 166, 186, 188], "1000": [82, 115, 135, 136, 137, 138, 154, 155], "1006": 33, "10077842e": 5, "1010": 9, "102": 48, "1021": 9, "10292082300833043": 10, "103": 56, "1030": 9, "10319630e": 8, "10362386": 11, "1037": 9, "105": 31, "1053": 9, "10584830e": 5, "106": 9, "1060": 9, "107": 15, "10747077e": 39, "1077": 9, "10847215e": 23, "10y": 48, "11": [3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 26, 29, 36, 39, 40, 42, 57, 99, 175], "1106": 9, "11063951e": 32, "11093659": 2, "111": [15, 16, 175], "112": [33, 34, 54, 175], "113": 48, "1133": 9, "11391513": 11, "11421640e": 4, "11472481e": 39, "11478008e": 23, "115": 55, "1162": 9, "117": 48, "1176": 9, "1177": 9, "118": 55, "11868007e": 12, "11892006e": 23, "119": [14, 40, 55], "1191": 9, "1193": 9, "11960299e": 39, "12": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 41, 42, 45, 48, 54, 56, 57, 58, 99, 174, 179], "120": 31, "12042043e": 39, "121": [48, 55], "1210": 9, "12125703e": 39, "1220": 9, "12216977e": 5, "1225": 14, "1235": 9, "124": 55, "1248": 9, "12489362e": 39, "125": 48, "1250": 57, "12538450e": 39, "126": 39, "1275": 9, "128": 48, "1282": 15, "12895735e": [5, 6], "129": 41, "1291": 9, "1298": 9, "13": [5, 7, 8, 9, 14, 15, 20, 23, 29, 40, 42, 56, 103, 105, 106, 107, 109, 112, 114, 115, 166], "13001762e": [5, 6], "1301": 9, "1304": 36, "1314": 9, "1315": 9, "1317": 9, "132": 9, "13239659e": 39, "1327": 9, "1330": 9, "1332": [9, 40], "13346758e": [5, 6], "1335": 9, "1343": 15, "1346": 40, "13607836e": 8, "1362": 56, "13696569e": [5, 6], "13737924e": 32, "13808863e": 39, "1394": 9, "14": [7, 8, 9, 14, 15, 16, 18, 19, 23, 29, 31, 40, 41, 48], "1428": 9, "14310856e": 39, "144": 48, "1453": 9, "1455": 56, "147": 48, "14733606e": 8, "14759387e": 6, "148": 48, "1486": 14, "14895433": 30, "14919998e": 39, "1494": 9, "15": [4, 8, 9, 14, 15, 23, 26, 27, 29, 34, 36, 40, 42, 175], "150": 11, "152135": 45, "152278": 45, "1526": 29, "153001": 45, "1536": 9, "154207": 45, "155202": 45, "1565": 29, "1577": 29, "1588": 29, "1589": 9, "159": [3, 16, 48, 175], "15980287": 2, "16": [7, 8, 9, 14, 15, 16, 18, 19, 20, 29, 31, 36, 40, 42, 45, 175], "1604": 36, "161": 48, "16112642e": 26, "16206284e": 5, "16242405e": 39, "1630": 29, "16368341e": [3, 4, 7], "1648": 9, "165": [14, 15, 40], "16515408e": 32, "16562529e": 8, "166667": 41, "16688012e": 32, "169083": 45, "1695": 9, "16956647": 11, "17": [7, 8, 9, 10, 14, 19, 20, 23, 29, 40, 41, 42, 45], "170": 36, "17002387816452474": 10, "170897": 45, "171": 36, "17143953e": 32, "171737": 45, "17183301e": 39, "171892": 45, "17198639e": 39, "173": [2, 16, 175], "17341195e": 39, "17341943e": 11, "1739": 9, "174": 48, "1742": 9, "174764": 45, "17510456": 2, "17733231e": [12, 13], "177369": 45, "178946": 45, "1794": 9, "18": [7, 9, 14, 15, 18, 19, 20, 23, 29, 33, 36, 40, 41, 42, 43, 45, 175], "180": [14, 40], "1800": 23, "181": 48, "182061194354427": 9, "18289085e": 8, "183766": 45, "18408031e": 5, "184267": 45, "1843": 9, "18441126e": [3, 4, 7], "185": 55, "18501757e": 5, "186081": 45, "187148": 45, "187463": 45, "1875": 57, "18803064e": 26, "18837243e": 39, "1888": 7, "1890": 9, "19": [7, 8, 9, 14, 15, 18, 20, 23, 29, 36, 41, 42], "190": 36, "190308": 45, "190412": 45, "191375": 45, "192": 48, "192007": 45, "19329099e": 32, "1938": 9, "19417516e": 32, "194368": 45, "195078": 45, "19512961e": 32, "1952": 174, "1955": 118, "1959": [8, 23], "195953": 45, "19657594e": [5, 6], "1967": [31, 39], "196927": 45, "197475": 45, "1976": 8, "19789402e": 6, "1981": 170, "1984": 9, "1986": 118, "19873005e": [3, 4, 7], "1988": [76, 138], "1990": [3, 4, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 32, 41, 48, 57, 58, 179], "1991": 147, "1996": 20, "1_mean_risk": [16, 175], "1d": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "1e": [14, 103, 105, 106, 107, 109, 112, 113, 114, 115, 122, 123, 128, 129, 133, 166, 174], "1e5": 102, "1e6": 41, "1y": 48, "2": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 23, 26, 29, 31, 32, 36, 39, 40, 42, 45, 48, 52, 53, 56, 60, 62, 63, 64, 65, 76, 99, 100, 101, 102, 107, 108, 112, 114, 115, 116, 118, 122, 123, 125, 126, 128, 129, 130, 133, 135, 138, 139, 140, 142, 143, 147, 154, 155, 156, 157, 158, 164, 169, 174, 178, 182, 187, 188, 189, 192], "20": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 41, 42, 45, 48, 57, 58, 114, 122, 123, 128, 129, 133, 179], "200": [11, 122, 123, 128, 129, 133], "2000": [14, 15, 31, 36, 39, 40, 55, 123], "200046": 45, "200105310174294": 9, "2002": [103, 105, 106, 107, 109, 112, 114, 115, 149, 166], "2004": [115, 154, 155], "2005": [61, 118], "20057593224975": 9, "2006": 114, "2007": [147, 174], "2009": [52, 125, 154, 155, 156, 157, 164], "201": [20, 21, 175], "2010": [45, 116, 144, 148, 178, 185], "20106233e": 8, "2014": [2, 5, 6, 29, 54], "201485": 45, "2015": [10, 33, 112, 114], "2016": [60, 62, 64, 65, 126, 130], "2017": [125, 142, 178], "2018": [26, 56, 99, 123, 125], "2019": [112, 118, 126, 130, 138], "2020": [26, 30, 105, 106, 114, 125, 126, 130, 187, 192], "2020819241703986": 9, "20210608e": 39, "2022": [3, 4, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 30, 32, 33, 41, 45, 48, 54, 57, 58, 112, 179, 189], "20227491": 2, "2023": [14, 15, 31, 36, 39, 40, 55, 56, 112, 143, 174], "2024": [42, 183], "2025": 9, "203": 48, "2031": 19, "203852": 45, "2041": 9, "204832": 45, "20495386e": 39, "205": 55, "20549958e": 39, "20552212e": 39, "2061": 9, "2065": [18, 20], "20663228": 11, "20664617": 11, "206697": 45, "20670474": 11, "20671539": 11, "206951": 45, "206968": 45, "207576": 45, "2076": 9, "20898034e": [3, 4, 7], "209": 55, "2091": 9, "209388": 45, "21": [8, 9, 10, 12, 14, 15, 16, 19, 29, 39, 40, 175], "210": 39, "2102": 9, "21047018e": 5, "2112": 9, "2117": [7, 9, 18, 19], "212": [7, 16, 175], "2124": 9, "2126": 9, "215": 48, "215212": 45, "21580436": 2, "216570": 45, "22": [4, 7, 9, 14, 15, 18, 19, 20, 29], "220": [48, 55], "22024388e": 32, "221074": 45, "22153486e": 5, "221868": 45, "22188511e": [5, 6], "222": 55, "223": 33, "224": 55, "225127": 45, "2264": 54, "22723885e": 39, "22768876": 11, "22770146": 11, "22770271": 11, "22788246": 11, "229": [48, 55], "23": [7, 8, 9, 18, 20, 23, 29, 116], "23117943e": 39, "23352411e": 3, "235": 48, "235650": 45, "23719260e": 5, "239496": 45, "239639": 45, "24": [9, 14, 15, 23, 29, 36, 40, 45], "240": 55, "24004576e": 5, "24120028e": [3, 4, 7], "241811": 45, "241965": 45, "242284": 45, "242375": 45, "24356260e": 4, "245": 31, "24556425e": 6, "246774": 45, "247": 56, "249": 55, "24959219e": [5, 6], "25": [4, 9, 14, 15, 31, 33, 36, 40, 121, 125, 126], "2500": 57, "25000": 57, "25072704e": 32, "251145": 45, "251838": 45, "252": [9, 12, 13, 14, 15, 31, 33, 36, 39, 40, 48, 114, 136, 137, 138, 174, 178, 186], "25212125e": 13, "253": 54, "253970": 45, "254": 55, "25421095e": 39, "254766": 45, "255": [14, 15, 40], "256": 54, "26": [8, 9, 15, 36, 40, 43], "260": [5, 16, 175], "26012707e": 5, "26155697e": 8, "261709": 45, "263": 54, "264": 48, "264077": 45, "264144": 45, "266": 48, "266908": 45, "267": 48, "268": 48, "269": 48, "269549": 45, "269812": 45, "27": [8, 9, 15, 29, 36], "270434": 45, "27194222e": 3, "272263586429105": 29, "27250993e": 4, "27300467e": 39, "275882": 45, "27963367e": 4, "27967880e": [5, 6], "28": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 40, 41, 45, 48, 54, 57, 58, 179], "28133405e": 39, "282": 48, "28246101": 11, "283": [48, 55], "28439988": 12, "28499733e": [3, 4, 7], "285": 55, "28522027e": [3, 4, 7], "28591222e": 32, "286204": 45, "287342": 45, "288": 48, "288435": 45, "289": 55, "289510": 45, "29": [7, 9, 14, 18, 19, 23, 29, 40, 54], "292817": 45, "29453598e": 13, "29453703e": 13, "295364": 45, "296356964249894": 9, "297652": 45, "298": 36, "2980": 36, "2_": [154, 155, 156, 157], "2_risk_budget": [21, 175], "2d": [5, 11, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 147, 191], "2f": [2, 14, 23, 33, 36, 39, 40], "2h": [135, 136, 137, 138], "2x3x3": 15, "3": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 26, 29, 31, 32, 36, 39, 40, 41, 42, 45, 48, 53, 57, 66, 67, 68, 69, 70, 99, 100, 102, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 128, 129, 130, 131, 133, 139, 140, 143, 154, 155, 174, 178, 182, 189, 190], "30": [2, 8, 9, 14, 15, 18, 20, 23, 33, 36, 40, 41, 48, 135, 136, 137, 138, 188], "3000003461791651": 11, "301": 48, "301057537801782": 29, "303": 56, "30314924e": 3, "304": 48, "30535971e": [3, 4, 7], "305664213683842": 9, "306": [31, 34, 175], "306039": 45, "30675668e": 39, "30702059e": 32, "30761286e": 39, "31": [8, 9, 14, 15, 31, 36, 39, 40, 45, 55, 56, 175], "310": [48, 56], "31098517e": 5, "312173": 45, "31250": 57, "313": 55, "314383": 45, "315": [11, 16, 175], "31539217e": 39, "316": 56, "316284": 45, "31737525e": [5, 6], "32": [7, 8, 9, 14, 15, 18, 19, 23, 29, 40], "320883": 45, "321191": 45, "32124541e": 5, "322": 48, "322091": 45, "322661810342193": 9, "32493866e": 6, "32678922e": 39, "327": 42, "33": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 32, 36, 39, 40, 174, 175, 182, 187, 188], "330": 54, "330876": 45, "332589": 57, "333333": 42, "3333332": 12, "33333333e": 11, "33333336": 12, "33333345": 12, "33456624e": 23, "334821": 57, "33561596": 42, "335616": 42, "335938": 57, "336": 56, "337": 55, "337054": 57, "33720112e": 5, "338": 54, "339286": 57, "34": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 31, 34, 175], "34073945e": 4, "34097308e": 6, "3450877954226774": 10, "34584209e": 32, "347656": 57, "348085": 45, "34862950e": [3, 4, 7], "34903427e": 32, "34914228e": 26, "349220": 45, "35": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 33, 34, 36, 45, 56, 175], "35005322e": 3, "351": 54, "351130": 45, "352": 58, "35228602e": 5, "353": 58, "354": 55, "354942": 45, "355": 58, "355469": 57, "355792": 45, "35632022e": 23, "35652050e": [5, 6], "356746": 45, "35710067e": [3, 4, 7], "358": 58, "359": 58, "35927671e": 8, "35997473e": 32, "36": [9, 14, 18, 20, 29, 33, 45, 56], "360345": 45, "36064315e": 39, "361084": 45, "36189297e": 32, "36241349e": 26, "362751": 45, "36336705e": [5, 6], "364": 48, "36401076e": 4, "364353": 45, "365": [36, 37, 115, 175], "36833537771513": 9, "368504": 45, "368514": 45, "37": [7, 9, 14, 18, 20, 23, 29, 56], "371094": 57, "371865": 45, "37191866e": 12, "374699": 45, "3750": 57, "375000": 57, "38": [9, 15, 29, 40, 56], "38064708e": 5, "381": 55, "382": 55, "382813": 57, "382926": 45, "384": 48, "38460704e": 26, "38469617e": 39, "38499188e": 39, "386": [48, 55], "387": 48, "39": [2, 7, 9, 14, 15, 18, 19, 20, 29, 36, 40], "391": 48, "391758": 45, "392": 55, "393": 48, "394": 48, "394581": 45, "395642": 45, "397": 48, "39936034148487": 9, "399780": 45, "3_maxiumum_diversif": [24, 175], "3d": 135, "3f": 15, "3fri": [41, 100], "3m": 48, "3rd": 41, "3x3": 14, "4": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 23, 26, 29, 32, 36, 39, 40, 42, 43, 45, 48, 52, 56, 57, 99, 100, 112, 113, 114, 125, 126, 129, 139, 140, 141, 142, 143, 164, 178, 187, 189], "40": [8, 9, 14, 18, 20, 23, 29, 36, 39, 55, 189], "400": [45, 56], "40080372e": 39, "402394853192732": 9, "40264246e": 39, "40429482e": 4, "405": 55, "40598738e": 4, "407690290603215": 9, "40812344e": 3, "408136": 45, "40967128e": 39, "40979621e": 12, "41": [9, 14, 18, 20, 29, 56, 115], "41147667e": 23, "413": 175, "414": [4, 16, 175], "41661311e": 39, "41726679e": 8, "41742527e": 8, "41747896e": 32, "42": [9, 14, 15, 29, 36], "422": 54, "42282444e": 5, "423": 48, "42391438e": 5, "42616137e": 32, "42685508e": 6, "427": [23, 24, 175], "42755915e": 39, "42768380e": 26, "42833920e": 39, "42882219e": 26, "43": [7, 8, 9, 14, 19, 23, 29, 36], "430": [54, 56], "43028625e": 13, "431": 43, "43232875e": [3, 4, 7], "437": 54, "437583988064256": 9, "438": 48, "43855248e": [3, 4, 7], "43876113e": 5, "439": [18, 21, 175], "44": [9, 29, 31, 40], "44128512e": [5, 6], "44532312e": 5, "44687699e": 5, "44938306e": 3, "45": [7, 9, 14, 15, 18, 19, 23, 31, 36], "45171911e": 23, "452": [48, 55], "455": [42, 43, 54, 175], "45574521e": 5, "458": 55, "45805548e": 4, "459": 48, "46": [9, 14, 15, 18, 20, 23, 29, 36, 39, 54], "460": 56, "460872007821077": [7, 18, 19], "461275191312059": 8, "46161545e": 32, "462": 55, "463": 48, "464": [6, 16, 175], "46436338e": [5, 6], "47": [7, 9, 19, 20, 29, 54], "47134961e": 5, "47358386e": 8, "474123745523491": 9, "475": 55, "476": 55, "477": [10, 16, 175], "47875780e": 32, "48": [8, 9, 14, 19, 23, 29, 36, 54], "48042602e": 5, "481": 48, "48132561e": 39, "48206757e": 39, "483": 55, "48338678e": 32, "48495185e": 32, "48590925e": 5, "48662595e": 5, "48699105e": 23, "49": [7, 8, 9, 15, 18, 19, 23, 29, 36, 40], "49403297e": 5, "495": 56, "498": 55, "49940517e": [3, 4, 7], "49999867": 11, "4999999999999999": 11, "4_distributionally_robust_cvar": [27, 175], "4f": [31, 33], "5": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 36, 39, 40, 41, 42, 45, 54, 57, 60, 61, 62, 64, 65, 99, 100, 101, 112, 113, 114, 121, 122, 123, 125, 126, 128, 129, 130, 133, 134, 140, 142, 143, 174, 178, 190, 192], "50": [9, 11, 12, 14, 15, 19, 29, 31, 36, 40, 45, 56, 121, 125, 126], "500": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 41, 45, 48, 57, 58, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 179], "5000": 57, "50000": 57, "5016": 116, "502": 54, "5029": 116, "50486199e": 5, "50726536e": 23, "508": 48, "51": [8, 9, 14, 15, 20, 23, 29, 39, 56], "512": 55, "51323607e": 23, "51376159e": 4, "51475217e": 39, "5152184941723117": 9, "51844546e": 3, "52": [8, 9, 15, 18, 20, 23, 54], "52139762e": 39, "522": 48, "52211073e": 39, "52708811e": 8, "53": [7, 8, 9, 14, 15, 36, 40, 54], "53270264e": 39, "53328937509076": 29, "53379955e": 26, "53398775": 9, "534": [8, 16, 175], "535": 55, "53583827e": 39, "536": 48, "537": 48, "54": [7, 8, 9, 14, 18, 19, 23, 29, 40], "540": 55, "54375185e": 39, "543932": 45, "54445590e": 39, "54697151e": 5, "548": 55, "549": 48, "55": [9, 14, 23], "550": 56, "55252258e": 32, "553": 55, "55455742": 9, "558054": 45, "56": [7, 9, 15, 18, 19, 29, 40], "56000809e": 6, "560177235001134": 29, "560475": 45, "562": 55, "56214479e": 6, "56311233e": 39, "56548525": 11, "56558315": 11, "56559255": 11, "56566507": 11, "568791": 45, "56967308e": 26, "57": [9, 14, 19, 23], "572": 55, "572056": 45, "57560762e": 23, "577": 21, "578": 55, "57851861e": 5, "5798056188192846": 9, "58": [2, 7, 9, 14, 15, 20, 29, 116], "581": [48, 55], "58269071e": 3, "58312606e": 39, "58350612e": 8, "588": [40, 43, 175], "59": [9, 14, 15, 23, 40, 45], "590": 55, "59167564989511": 9, "59482204e": 5, "595": 48, "59579372e": 5, "5960": 55, "59676596e": 39, "59789920e": 5, "59858003": 9, "599": 48, "5_cluster": [34, 175], "5f": 36, "6": [3, 5, 6, 8, 9, 11, 12, 13, 15, 23, 26, 29, 32, 39, 41, 42, 45, 48, 56, 99, 100, 114, 143, 178, 189], "60": [2, 9, 12, 13, 14, 15, 31, 33, 36, 40, 45, 174], "600838708075875": 9, "60299315e": 39, "61": [8, 9, 29, 40], "61481439e": 5, "61513792e": 5, "62": [8, 9, 14, 15, 29], "62028854e": 39, "621": [48, 56], "62234859e": 32, "62545194e": 26, "62632716e": 5, "63": [9, 15, 18, 19, 20, 29], "632": [12, 16, 175], "63357514e": 39, "634": 48, "63432134e": [5, 6], "636": 48, "63902381e": 32, "64": [9, 14, 15, 29, 31, 36, 39, 40, 55], "64005580e": 6, "64201792e": 5, "644": 48, "64563576e": 5, "646": 48, "64684769e": 39, "647": [41, 43, 175], "64772972e": [3, 4, 7], "648": 56, "64823711e": 39, "64823756e": 3, "64888981e": 8, "65": [7, 9, 14, 15, 18, 19, 29, 36, 40], "65046122e": 39, "65055374e": 39, "653": 48, "65451603e": 4, "655": 15, "65625": 57, "658": 48, "659": [32, 34, 175], "66": [9, 15, 18, 20, 23, 29, 40, 55, 56], "66112270e": 5, "664": 48, "66647584e": 4, "66666667e": 11, "66761472e": 5, "669076363624884": 9, "67": [8, 9, 23, 45, 58], "67249461e": 26, "67271929e": 39, "677": 54, "67797898e": 39, "68": [7, 8, 9, 18, 20, 36], "681": 56, "68197345e": 5, "685": 55, "685271602599979": 23, "68550154": 9, "68734509e": 39, "68739416e": 5, "687782011559598": 9, "69": [9, 14, 15, 20, 29, 36, 55, 58], "692": 48, "69581067e": 6, "69632764e": 6, "697": 16, "6_ensembl": [37, 175], "7": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 23, 26, 32, 33, 39, 40, 56, 99, 122, 123, 128, 129, 133, 143, 178], "70": [8, 9, 15, 23, 29, 36, 52, 55, 122, 123, 128, 129, 133], "700": 56, "704": 54, "70440099e": [5, 6], "709": 48, "71": [8, 9, 14, 23, 29, 40], "711": 55, "716": 55, "72": [7, 9, 10, 14, 15, 19, 29, 36, 40, 55, 56], "722": 54, "72248235e": 5, "72324619e": 5, "72469426e": 6, "725": 55, "72770463e": 39, "728117696106207": 19, "729": 55, "72970927e": 32, "72985253e": 4, "73": [7, 9, 14, 15, 18, 19, 20], "731": 54, "73650583e": 39, "73670065e": 4, "73719690e": 4, "738": 48, "73909314e": [3, 4, 7], "74": [7, 9, 14, 15, 29, 40, 55], "741": [39, 43, 175], "74138185e": 23, "74197781": 11, "74201691e": 32, "74253021e": [5, 6], "74292313e": 39, "74352792e": 5, "74485691e": 39, "74494067e": 39, "74787861e": 13, "74823262e": 5, "74857916e": [3, 4, 7], "75": [9, 11, 14, 15, 23, 29, 36], "75000": 57, "75749128e": 39, "75788140e": 32, "75802352": 11, "75882448e": 39, "76": [8, 9, 15, 20, 58], "76911441e": 5, "76918462e": 39, "77": [8, 9, 14, 23, 29, 56], "77307463e": 39, "775": [48, 49, 175], "777": 48, "77784307e": 5, "77910455e": 4, "78": [2, 8, 9, 14, 19, 23, 29, 40, 56], "780": 56, "78010014e": [3, 4, 7], "78013891e": 6, "78046476e": 32, "78090544": 9, "78410016e": 3, "786": 39, "78708176e": 5, "78708311e": 3, "78775541e": [12, 13], "7881858925195955": 9, "79": [7, 8, 9, 14, 18, 19, 23, 36, 58], "79050966e": 23, "79104637e": [5, 6], "792": 54, "79314628e": 32, "79558938e": 39, "79614691e": 39, "796875": 57, "79844555e": 8, "79852587e": 4, "7_pre_select": [43, 175], "8": [3, 4, 5, 6, 7, 8, 9, 12, 15, 18, 19, 20, 23, 26, 29, 31, 32, 33, 36, 39, 40, 42, 45, 53, 56, 66, 67, 68, 69, 70, 99, 119, 131, 164, 174, 186], "80": [9, 15, 19, 40], "800": 39, "80644990e": 39, "80823151e": 39, "809": 56, "81": [7, 8, 9, 14, 15, 19, 20, 29, 40], "811": 56, "81108516e": 39, "81161325e": 3, "81176235e": 5, "812": 48, "8125": 57, "81629430e": 26, "82": [9, 15, 23, 29, 36, 56], "820": 48, "82266765e": [12, 13], "825": 56, "82564384e": 39, "82592031e": 23, "82778946e": 39, "829": 55, "83": [7, 9, 15, 18, 19, 23, 36], "8313": [57, 58], "83522508e": 6, "83689678e": 39, "84": [9, 14, 20, 29, 36], "84021249e": [3, 4, 7], "84039680e": 39, "843069929156864": 9, "84348572e": 26, "84356062e": 39, "84421971e": 39, "84531907e": 26, "847": 48, "84867696e": 39, "84916828e": 39, "84980192e": 4, "85": [9, 14, 15, 40], "852": 55, "853": 48, "85385819e": 39, "85688593e": 6, "859": 9, "859375": 57, "85983398e": 26, "86": [9, 14, 18, 20, 29, 33, 40], "860": [14, 48], "864764715987107": 9, "869": [9, 56], "87": [8, 9, 14, 29], "875000": 57, "87866505e": 3, "87986871": 9, "88": [9, 33, 36, 40, 115], "88131852e": 12, "88142338e": [5, 6], "88195823e": 5, "885": 55, "88818125e": 32, "89": [9, 15, 29, 40, 56], "890625": 57, "89116954e": 5, "89206278e": 39, "89248471e": 39, "89320410e": 3, "894001701423032": 9, "89793803e": 8, "8_metadata_rout": [46, 175], "9": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 20, 23, 26, 32, 33, 36, 39, 45, 99, 122, 123, 128, 129, 133, 187, 190], "90": [8, 9, 15, 23, 29, 36], "90123331e": 26, "90339158e": 23, "9038840087598631": 10, "907": 55, "90876073e": 3, "91": [9, 15, 29, 40, 56], "910": 48, "91035768e": 8, "912975728799285": 7, "913": 56, "914061803581202": 9, "91462883e": 39, "91733243e": 39, "91785162": 9, "91802980e": 5, "91833475e": 39, "92": [8, 9, 15, 23, 29, 55], "92102950954716": 20, "92120614e": 39, "922": [9, 56], "924": [29, 34, 175], "926": 55, "92817471e": 8, "92866673e": 39, "92880653e": 39, "93": [9, 14, 29], "93000375": 9, "93188830e": 6, "933": 56, "93642825430989": 9, "937": [19, 21, 175], "93749217": 9, "9375": 57, "93769628e": 3, "938": [14, 16, 48, 175], "93952573e": 23, "94": [7, 8, 9, 15, 18, 19, 23, 29, 36], "940": 9, "9401232": 9, "94492605e": 39, "94746608e": 5, "94815126e": 39, "94948507e": 32, "95": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 55, 72, 73, 74, 75, 77, 78, 94, 122, 123, 129, 133, 136, 137, 138, 139, 154, 155, 156, 157, 186, 188], "950": 55, "95027284": 9, "95048460e": 23, "95095776e": 5, "95557198e": 32, "96": [9, 14, 15, 55], "96041498e": 39, "965": 56, "966": 48, "967": 56, "96861483": 9, "96871556e": 39, "96894464e": 3, "969": 9, "97": [9, 14, 15, 18, 20, 29, 36, 55], "972": 55, "97503410e": 26, "97776252e": 5, "97964062": 9, "97994501e": 6, "98": [7, 9, 15, 18, 19, 36], "98150200e": 23, "98210389e": 3, "98242729e": 6, "98247369e": 39, "98298183e": 5, "98358814e": 32, "98378328e": 39, "98463685": 9, "98545974e": 39, "986": 54, "987": 48, "99": [9, 15, 19, 29], "991": [48, 54], "99207626e": 32, "99284245e": 39, "995": 56, "99586745481971": [18, 20], "99612718e": 4, "99620661e": 39, "99627408e": 39, "9983657": 9, "999": [9, 54], "999999999999993": [8, 23, 29], "9_data_prepar": [49, 175], "A": [2, 3, 4, 5, 11, 12, 14, 29, 40, 42, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 166, 177, 178, 180, 182, 185, 187, 188, 189, 190, 191], "And": [18, 19, 30, 42, 118, 133, 187], "As": [2, 12, 13, 18, 19, 23, 42], "At": [136, 137, 138], "But": 6, "By": [4, 6, 11, 12, 13, 14, 15, 32, 40, 55, 56, 140, 179, 182, 191], "For": [2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 52, 63, 99, 100, 101, 103, 105, 106, 107, 109, 111, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 144, 149, 169, 174, 178, 182, 185, 186, 187, 188, 189, 191], "IN": 135, "If": [11, 12, 13, 42, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 83, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 166, 174, 178, 179], "In": [2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 39, 40, 42, 45, 53, 63, 66, 67, 68, 69, 70, 97, 100, 113, 116, 119, 125, 131, 134, 151, 182, 185, 186, 188, 189], "It": [3, 4, 5, 7, 8, 11, 15, 26, 29, 30, 32, 40, 45, 76, 79, 81, 84, 87, 89, 90, 103, 105, 106, 107, 109, 112, 114, 115, 121, 122, 123, 125, 126, 128, 129, 130, 133, 136, 137, 138, 143, 147, 149, 164, 166, 174, 176, 177, 178, 180, 181, 182, 187, 189, 190, 191, 192], "Its": [14, 15, 130], "No": [2, 14, 15, 168], "Not": [52, 59, 60, 61, 62, 63, 64, 65, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 147, 148], "On": [144, 170, 174], "One": [113, 130, 186], "That": [14, 122], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 26, 29, 30, 31, 32, 33, 36, 39, 40, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 84, 87, 89, 90, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176, 179, 182, 186, 187, 189, 191, 192], "Then": [2, 12, 13, 14, 31, 32, 39, 40, 42, 45, 130, 148, 166, 185, 187], "There": [118, 178], "These": [14, 15, 42, 178, 191], "To": [5, 7, 8, 10, 12, 18, 19, 20, 23, 26, 29, 30, 32, 36, 40, 45, 99, 130, 134, 138, 139, 186, 187, 191], "With": [45, 53, 66, 67, 68, 69, 70, 114, 119, 122, 123, 128, 129, 131, 133, 144, 147, 174, 187], "_": [122, 178], "_2": 53, "__": [52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 182], "__getitem__": [53, 66, 67, 68, 69, 70, 119, 131], "__init__": [41, 59, 103, 104, 145, 146, 152, 153, 187], "_asset": [154, 155, 156, 157], "_avers": 111, "_coef": [14, 122, 128, 129], "_cost": [12, 121, 122, 125, 126, 128, 129, 133, 138], "_cvx_cach": 122, "_deviat": [136, 137, 138], "_factor": [136, 137, 138], "_fee": [13, 121, 122, 125, 126, 128, 129, 133, 138], "_get_support_mask": 41, "_prev_": [12, 121, 122, 125, 126, 128, 129, 133, 138], "_ratio": [136, 137, 138], "_return": [12, 13, 121, 122, 125, 126, 128, 129, 133, 138, 187], "_risk": 122, "_risk_": [129, 187], "_set_covari": 187, "_test_scor": 113, "_validate_data": [41, 187], "_varianc": [136, 137, 138], "aal": [55, 56], "aaoi": 56, "aaon": 56, "aapl": [4, 6, 7, 8, 11, 12, 13, 19, 41, 45, 48, 56, 57, 174, 191], "ab": [53, 66, 67, 68, 69, 70, 119, 131, 138], "abf": 55, "abl": [4, 6, 14, 15, 33], "about": [3, 4, 5, 6, 26, 29, 44, 47, 50, 122, 123, 125, 128, 129, 133, 147, 169, 183, 187, 191], "abov": [6, 11, 12, 13, 14, 15, 32, 45, 52, 102, 103, 105, 106, 107, 109, 112, 114, 115, 121, 122, 123, 125, 126, 128, 129, 133, 139, 144, 166, 174, 178, 182], "absolut": [4, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 60, 62, 64, 65, 69, 70, 84, 87, 122, 123, 125, 128, 129, 133, 136, 137, 138, 139, 147, 174, 187], "abstract": [59, 98, 136], "accept": [79, 81, 87, 89, 90, 122, 129, 133, 135, 136, 137, 138], "accept_spars": 41, "access": [5, 26, 134], "accord": [12, 40, 101, 130, 134, 135, 139, 140, 141, 142, 143, 186, 187], "account": [12, 18], "accur": [4, 6, 149], "accuraci": [113, 122, 123, 128, 129, 133], "achiev": [2, 12, 14, 15, 31, 45, 178], "across": [0, 113, 140, 144, 178], "activ": [143, 183], "ad": [52, 113, 114, 115, 116, 117, 129, 133, 139, 140, 141, 142, 143, 149, 174, 182, 186, 188], "add": [9, 11, 12, 13, 31, 33, 36, 39, 40, 45, 121, 122, 123, 125, 126, 128, 129, 133], "add_constraint": [122, 123, 128, 129, 133], "add_object": [122, 123, 128, 129, 133], "add_vlin": [14, 15, 40], "addit": [42, 45, 97, 101, 129, 133, 134, 135, 139, 140, 141, 142, 143, 174, 176, 178, 185, 186, 189], "addition": 182, "adher": [54, 55, 56, 57, 58, 179], "adjust": [54, 55, 56, 57, 58, 114, 125, 138, 179], "advanc": [7, 8, 11, 50, 99, 122, 123, 125, 128, 129, 133, 169], "advantag": [14, 15, 182], "advis": [26, 183], "af": [12, 13, 114, 121, 122, 125, 126, 128, 129, 133, 138], "affect": [29, 30, 32, 106, 115, 116], "after": [42, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 99, 100, 119, 125, 130, 131, 143, 179, 182], "again": [113, 134], "against": [5, 118, 139, 149, 191], "aggreg": [144, 178], "aht": 55, "ai": 174, "al": 112, "alejandro": 178, "algorithm": [29, 30, 32, 52, 53, 103, 105, 106, 107, 109, 112, 114, 115, 116, 125, 126, 130, 139, 142, 149, 154, 155, 166, 187], "alia": [113, 114, 115, 116, 117], "align": [125, 129, 133, 164, 169, 187], "all": [0, 5, 8, 11, 12, 14, 15, 26, 29, 32, 42, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 174, 175, 178, 179, 182, 186, 187, 189], "allevi": 174, "alloc": [4, 12, 14, 15, 26, 29, 30, 31, 41, 118, 123, 125, 126, 133, 174, 178], "allow": [11, 36, 106, 113, 114, 115, 116, 117, 121, 125, 126, 134, 143, 182, 187], "almost": [113, 115, 116, 117], "along": 14, "alpha": [45, 53, 66, 67, 68, 69, 70, 107, 108, 113, 114, 118, 119, 131, 174, 182], "alpha_": [113, 118], "alphabet": [53, 66, 67, 68, 69, 70, 119, 131], "alreadi": [30, 134, 179], "also": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 29, 30, 31, 32, 40, 41, 42, 45, 53, 66, 67, 68, 69, 70, 119, 122, 123, 125, 128, 129, 130, 131, 133, 134, 139, 140, 142, 144, 149, 174, 178, 185, 186, 187, 189, 191], "alter": 112, "altern": [10, 114, 179], "alwai": [100, 166, 182], "amd": [7, 8, 41, 45, 48, 57], "among": [14, 15, 122, 129, 130, 133, 134, 187], "amount": 13, "amplitud": 112, "an": [4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 39, 41, 42, 45, 53, 55, 56, 66, 67, 68, 69, 70, 75, 78, 99, 100, 101, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 157, 158, 160, 161, 162, 169, 172, 181, 186, 187, 189, 192], "analys": 45, "analysi": [12, 13, 15, 39, 40, 45, 115, 118, 166, 188, 189], "analyst": [147, 187, 191], "analyst_view": [4, 191], "analyz": [10, 14, 15, 18, 19, 23, 29, 30, 31, 32, 36], "andersen": 114, "angular": [60, 62, 64, 65], "ani": [32, 45, 52, 53, 66, 67, 68, 69, 70, 114, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 134, 135, 144, 174, 177, 180, 181, 182, 187, 189, 190, 191, 192], "ann": 33, "annual": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 45, 68, 69, 70, 100, 114, 136, 137, 138, 178], "annualized_factor": [39, 114, 136, 137, 138], "annualized_mean": [9, 10, 14, 15, 48, 68, 136, 137, 138, 188], "annualized_semi_devi": [70, 136, 137, 138], "annualized_semi_vari": [70, 136, 137, 138], "annualized_sharpe_ratio": [7, 9, 10, 14, 15, 31, 33, 36, 39, 40, 45, 69, 136, 137, 138, 174, 186, 187, 189, 190], "annualized_sortino_ratio": [9, 10, 14, 15, 31, 69, 136, 137, 138], "annualized_standard_devi": [14, 70, 136, 137, 138], "annualized_vari": [9, 10, 18, 48, 70, 136, 137, 138, 188], "annum": 13, "anoth": [13, 14, 55, 56, 121, 122, 125, 126, 128, 129, 133, 138, 178, 182, 189, 191], "anthoni": [76, 138], "anto": 55, "anymor": 12, "api": [5, 6, 8, 33, 45, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 147, 148, 174, 177, 179, 180, 181, 182, 187, 190, 191, 192], "appear": 140, "append": [12, 29, 30, 32, 135, 137, 188], "appl": [4, 11, 12, 13, 19], "appli": [6, 11, 12, 13, 42, 60, 62, 64, 65, 100, 114, 121, 122, 123, 125, 126, 128, 129, 130, 133, 135, 138, 143, 151, 164, 168, 169, 178, 182], "applic": [52, 54, 55, 56, 57, 58, 106, 125, 164, 179, 182], "appreci": 174, "approach": [13, 14, 15, 42, 121, 122, 125, 126, 128, 129, 133, 139, 147, 174, 182, 187, 191], "appropri": [30, 54, 55, 56, 57, 58, 139, 140, 141, 142, 143, 179], "approxim": [116, 174, 178], "ar": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 36, 41, 45, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 83, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 166, 174, 177, 178, 179, 180, 181, 182, 186, 187, 189, 190, 191], "arang": [41, 45], "arg": [53, 59, 66, 67, 68, 69, 70, 103, 104, 119, 131, 145, 146, 152, 153], "argpartit": 41, "argsort": [14, 15, 41], "argument": [52, 53, 59, 66, 67, 68, 69, 70, 97, 103, 104, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 145, 146, 152, 153, 169, 182], "aris": [15, 42, 122, 129, 187, 192], "arma": [99, 186], "around": [14, 31, 33, 36, 39, 113], "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 39, 41, 52, 59, 60, 61, 62, 63, 64, 65, 97, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 154, 155, 156, 157, 169, 170, 171, 177, 180, 181, 187, 189, 190, 191, 192], "articl": 116, "asarrai": [7, 8, 14, 15, 97, 186, 189], "ascend": 135, "ascii": [53, 66, 67, 68, 69, 70, 119, 131], "assembl": 40, "asset": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 40, 41, 42, 43, 45, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 166, 169, 174, 175, 177, 178, 179, 180, 181, 185, 187, 189, 190, 191, 192], "asset1": [140, 143], "asset2": [140, 143], "asset3": [140, 143], "asset4": [140, 143], "asset_i": 147, "asset_j": 147, "asset_nam": 19, "assets_covari": 138, "assets_expected_return": 138, "assets_view": 6, "assign": [11, 53, 99, 102, 121, 122, 123, 125, 126, 128, 129, 133, 142], "associ": [78, 105, 113, 115, 116, 117], "assum": [4, 6, 10, 12, 13, 53, 66, 67, 68, 69, 70, 113, 115, 116, 117, 119, 131, 134], "assume_cent": [113, 115, 116, 117], "assumpt": [157, 178], "astyp": [14, 15, 45], "attent": 174, "attilio": [118, 144, 148], "attribut": [52, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 99, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 177, 180, 181, 187, 191, 192], "author": 174, "auto": [32, 45, 114, 187], "auto_exampl": [16, 21, 24, 27, 34, 37, 43, 46, 49, 51], "auto_examples_jupyt": 50, "auto_examples_python": 50, "automat": [154, 155, 179], "auxiliari": [133, 187], "avail": [45, 55, 56, 105, 106, 111, 113, 114, 115, 116, 117, 118, 122, 123, 125, 127, 128, 129, 130, 133, 134, 147, 148, 149, 150, 154, 155, 156, 157, 169, 177, 179, 180, 181, 184, 185, 187, 189, 190, 192], "averag": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 41, 42, 45, 53, 69, 70, 71, 102, 109, 129, 133, 136, 137, 138, 139, 144, 174, 186, 187], "average_drawdown": [70, 121, 122, 125, 126, 129, 133, 136, 137, 138], "average_drawdown_ratio": [69, 136, 137, 138], "avers": [12, 13, 77, 78, 111, 123, 129, 136, 137, 138, 187], "avg": [14, 15, 36, 40], "avoid": [7, 8, 32, 36, 45, 99, 101, 114, 122, 130, 134, 139, 186, 187], "ax": 42, "axi": [29, 30, 32, 41, 42, 135, 136, 137, 138], "b": [11, 12, 42, 112, 122, 123, 128, 129, 133, 142, 147, 187, 189], "bac": [7, 8, 41, 45, 48, 57], "back": 166, "backtest": 42, "ball": [26, 123, 187], "bank": [76, 138], "bar": [45, 118], "barmod": 45, "barrier": [133, 187], "base": [28, 29, 36, 40, 41, 50, 52, 59, 66, 98, 99, 103, 104, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 142, 145, 146, 152, 153, 156, 157, 164, 171, 174], "basecombinatorialcv": [130, 134], "basecovari": [60, 105, 106, 111, 114, 118, 148, 187], "basecovarianceuncertaintyset": [122, 129], "basecrossvalid": [130, 134], "basedist": [121, 125, 126, 130], "baseestim": [41, 114, 130, 150], "baseloadingmatrix": [5, 149], "basemu": 148, "basemuuncertaintyset": [122, 129], "baseoffset": 143, "baseoptim": [101, 130, 134], "baseportfolio": [135, 137, 138, 189], "baseprior": [121, 122, 123, 125, 126, 127, 128, 129, 133, 147, 149, 154, 155, 156, 157], "basic": 20, "bay": [118, 119], "bayes_stein": [118, 119], "bayesian": [147, 174, 191], "bby": [41, 45, 48, 174, 191], "becaus": [4, 6, 12, 18, 30, 45, 116, 142, 178, 186], "becom": [12, 130, 134, 189], "been": [29, 30, 53, 66, 67, 68, 69, 70, 112, 119, 125, 131, 134, 139, 140, 141, 142, 143, 164, 174], "befor": [39, 40, 42, 50, 53, 66, 67, 68, 69, 70, 99, 100, 113, 115, 116, 117, 119, 131, 135, 140, 142, 143, 189], "began": 42, "begin": [53, 66, 67, 68, 69, 70, 119, 125, 129, 131, 133, 140, 144, 164, 169, 187], "behav": 178, "behind": 174, "being": [99, 116, 182], "belief": [3, 4, 5, 29, 187, 191], "bellow": 29, "belong": [9, 10, 188], "below": [4, 6, 9, 11, 12, 13, 14, 15, 29, 30, 32, 33, 36, 45, 52, 79, 81, 90, 100, 102, 112, 113, 121, 122, 123, 125, 126, 128, 129, 133, 136, 137, 138, 139, 142, 174, 178, 182, 187], "bench": [3, 18, 19, 20, 23, 26, 29, 30, 32], "benchmark": [7, 8, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 40, 45, 127, 128, 129, 130, 134, 187], "benefit": 182, "best": [38, 43, 50, 113, 141, 174, 175, 182], "best_estimator_": [14, 15, 31, 33, 36, 40, 42, 45, 174, 182], "best_model": [14, 15, 174, 182], "best_model_r": 15, "best_model_rd": 14, "best_params_": [14, 15, 40], "beta": [5, 72, 73, 74, 75, 77, 78, 94, 118, 136, 137, 138, 149, 154, 155, 156, 157, 191], "beta_": [45, 114, 118], "better": [14, 15, 29, 30, 31, 32, 41, 45, 114, 122, 123, 125, 126, 128, 129, 133, 136, 137, 138, 169, 187], "between": [2, 12, 14, 15, 29, 30, 32, 41, 48, 52, 53, 63, 66, 67, 68, 69, 70, 84, 113, 114, 115, 116, 117, 119, 126, 128, 129, 131, 136, 137, 138, 140, 144, 147, 164, 182, 187], "beyond": 143, "bia": [13, 42, 118, 121, 122, 125, 126, 128, 129, 133, 138], "bibtex": 174, "big": 11, "biggl": [144, 178], "biggr": [144, 178], "bigl": 164, "bigr": 164, "bin": [63, 135, 159, 170, 171], "binary_train_test_set": 99, "binder": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48], "binom": 52, "bisect": [29, 30, 125, 126, 187], "bi\u0144kowski": [125, 126], "bj\u00f6rkman": 114, "black": [1, 16, 50, 147, 175, 187], "blacklitterman": [4, 6, 174, 187, 191], "block": [115, 154, 155], "block_siz": [115, 154, 155], "blue": [29, 30, 32, 42, 52], "bodnar": [118, 119], "bodnar_okhrin": [118, 119], "bollerslev": 114, "bond": [42, 122, 123, 128, 129, 133, 140, 143, 147, 174, 178], "bool": [52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 83, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 166, 168], "boolean": [139, 140, 141, 142, 143], "bootstrap": [154, 155, 174], "bootstrapcovarianceuncertaintyset": 192, "bootstrapmuuncertaintyset": [15, 174, 187, 192], "both": [2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 45, 99, 116, 135, 138, 158, 166, 178, 187, 188, 192], "bottom": 42, "bound": [9, 14, 75, 78, 121, 122, 123, 125, 126, 128, 129, 133, 136, 137, 138, 169], "boundari": [53, 66, 67, 68, 69, 70, 119, 131], "box": 42, "brace": [53, 66, 67, 68, 69, 70, 119, 131], "break": [42, 53, 66, 67, 68, 69, 70, 119, 131, 183], "bring": 26, "browser": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48], "bsd": 174, "budget": [21, 122, 123, 128, 129, 133, 174, 175, 182], "bui": 12, "build": [3, 4, 5, 6, 19, 60, 62, 64, 65, 126, 130, 174, 183, 188, 192], "built": 174, "bunch": 134, "busi": [12, 14, 15, 31, 33, 36, 40, 45, 178], "businessdai": 42, "c": [41, 116, 133, 164, 187, 189], "c_": [12, 53, 121, 122, 125, 126, 128, 129, 133, 138, 164], "c_t": 53, "cach": [55, 56, 122, 179, 189], "calcul": [52, 53, 113], "call": [7, 8, 14, 29, 30, 32, 42, 53, 63, 66, 67, 68, 69, 70, 101, 119, 122, 129, 130, 131, 144, 182, 188, 189], "callabl": [97, 122, 123, 128, 129, 133], "calmar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 136, 137, 138], "calmar_ratio": [36, 69, 136, 137, 138, 174], "cambridg": [126, 130], "can": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 53, 59, 63, 66, 67, 68, 69, 70, 75, 78, 84, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 166, 168, 174, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192], "candid": 182, "cannot": [12, 84, 125, 136, 137, 138, 178], "cap": [11, 111], "capit": [11, 53, 66, 67, 68, 69, 70, 119, 131], "captur": [42, 61], "cardin": [14, 53, 122, 128, 129, 164], "carlo": [174, 178], "carri": 114, "case": [11, 15, 26, 42, 53, 66, 67, 68, 69, 70, 97, 101, 119, 122, 123, 125, 128, 129, 131, 133, 151, 164, 169, 178, 189, 192], "casefold": [53, 66, 67, 68, 69, 70, 119, 131], "caseless": [53, 66, 67, 68, 69, 70, 119, 131], "cash": 42, "caus": [45, 114], "cd": 113, "cdar": [1, 7, 8, 9, 14, 15, 16, 18, 19, 20, 23, 28, 29, 34, 36, 40, 50, 70, 75, 121, 122, 125, 126, 129, 133, 136, 137, 138, 174, 175, 187, 189], "cdar_beta": [122, 129, 133, 136, 137, 138], "cdar_ratio": [36, 69, 136, 137, 138, 187], "cdot": [11, 12, 13, 111, 121, 122, 123, 125, 126, 128, 129, 133, 138, 189], "center": [26, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 113, 115, 116, 117, 119, 123, 131, 179, 187], "central": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 80, 92, 136, 137, 138, 174], "centroid": 53, "certain": [112, 187], "chain": [29, 30, 32], "challeng": [42, 113], "chanc": 33, "chang": [5, 7, 8, 12, 13, 14, 29, 30, 32, 40, 45, 113, 114, 115, 116, 117, 178, 183], "char": [53, 66, 67, 68, 69, 70, 119, 131], "charact": [53, 66, 67, 68, 69, 70, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "characterist": 178, "check": [7, 8, 41, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 166, 168, 169, 187], "check_arrai": 41, "check_is_fit": 41, "check_observations_ord": 137, "chen": 116, "chernoff": [75, 78, 136, 137, 138], "chi": [154, 155, 156, 157], "choic": [29, 30, 32, 113, 118, 178, 182], "choleski": [3, 4, 5, 103, 105, 106, 107, 109, 112, 114, 115, 122, 123, 127, 128, 129, 133, 147, 151, 166, 168, 187, 191], "choos": [31, 33, 36, 39, 102, 122, 123, 125, 128, 129, 133, 169, 186], "chose": 19, "chosen": [29, 31, 33, 36, 40, 60, 130, 134, 182, 187], "christensen": 114, "christoffersen": 114, "chronolog": 137, "circ": 178, "circular": [154, 155, 174], "clarabel": [26, 122, 123, 125, 128, 129, 133, 169], "class": [7, 8, 41, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 182, 187, 188, 189, 192], "classifi": 105, "classmethod": [53, 66, 67, 68, 69, 70, 119, 131], "claus": 174, "clear": [14, 135, 136, 137, 138], "clearli": 14, "clip": [103, 105, 106, 107, 109, 112, 114, 115, 149, 166], "clone": [2, 14, 15], "close": [29, 42, 54, 55, 56, 57, 58, 113, 156, 178, 179], "closer": [26, 45, 114], "cluster": [29, 30, 31, 33, 34, 106, 121, 125, 126, 130, 134, 164, 175], "clustering_estim": [32, 33, 130, 187], "clustering_estimator_": [32, 130], "clustering_estimator__linkage_method": 33, "co": 112, "code": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50, 53, 66, 67, 68, 69, 70, 119, 131, 174], "codec": [53, 66, 67, 68, 69, 70, 119, 131], "codepend": [59, 60, 61, 62, 63, 64, 65, 121, 125, 126, 130, 180, 187], "codependence_": [59, 60, 61, 62, 63, 64, 65, 180], "coef": [14, 45], "coeffici": [14, 45, 114, 115, 116, 117, 122, 128, 129], "coefs_": [45, 114], "coher": [52, 75, 78, 136, 137, 138, 174, 189], "collect": [101, 130, 134, 186, 187], "color": [14, 15, 29, 30, 32, 40, 45, 52, 135], "color_scal": [9, 10, 14, 15, 135], "column": [7, 8, 11, 12, 13, 19, 41, 42, 45, 101, 113, 114, 121, 122, 123, 125, 126, 128, 129, 133, 137, 138, 139, 140, 141, 142, 143, 147, 189], "column_indic": 101, "com": [7, 8, 174], "combin": [31, 33, 36, 39, 99, 102, 115, 116, 117, 134, 147, 182, 186], "combinatori": [28, 34, 50, 98, 99, 101, 102, 175, 187], "combinatorialcv": [130, 134], "combinatorialpurgecv": 186, "combinatorialpurgedcv": [31, 33, 36, 39, 101, 130, 134, 174, 186, 187], "come": [54, 55, 56, 57, 58, 113, 179], "common": [5, 6, 29, 42, 54, 100, 144, 147, 148, 149, 178, 187, 191], "commonli": [42, 187], "commut": [156, 163], "comp_cov": [113, 115, 116, 117], "compar": [2, 7, 8, 10, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 45, 53, 66, 67, 68, 69, 70, 99, 100, 113, 115, 116, 117, 119, 128, 129, 131, 137, 142, 147, 151, 186, 187, 189], "comparison": [2, 3, 4, 5, 6, 31, 53, 66, 67, 68, 69, 70, 119, 131], "compat": [5, 7, 8, 100, 174, 186, 189, 190, 191], "complement": 176, "complet": [31, 42, 53, 125, 140, 185], "complex": [135, 187], "compon": [5, 52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 178, 191], "compos": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 48, 52, 54, 55, 56, 57, 58, 121, 122, 125, 126, 128, 129, 133, 135, 137, 138, 174, 179, 189], "composit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 39, 40, 41, 42, 45, 48, 55, 56, 57, 135, 136, 137, 138, 179, 188, 189], "compound": [82, 83, 135, 136, 137, 138, 144, 148, 178, 188], "comput": [4, 14, 15, 29, 30, 32, 45, 52, 53, 60, 62, 63, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 121, 122, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 142, 147, 154, 155, 156, 157, 163, 164, 166, 168, 170, 171, 178, 182, 187, 189, 191], "concaten": [9, 53, 66, 67, 68, 69, 70, 119, 131], "concentr": [30, 76, 138, 174], "concept": [7, 8, 75, 78, 136, 137, 138], "concern": [17, 22, 25, 28, 35, 50, 183], "conclud": 30, "condens": 52, "condensed_distance_": 52, "condit": [2, 8, 10, 69, 70, 72, 73, 84, 105, 113, 115, 122, 123, 129, 133, 136, 137, 138, 174, 187], "confid": [15, 72, 73, 74, 75, 77, 78, 94, 122, 123, 129, 133, 136, 137, 138, 147, 154, 155, 156, 157, 158], "confidence_level": [15, 154, 155, 156, 157, 187, 192], "configur": [139, 140, 141, 142, 143], "confirm": 30, "consecut": 182, "consid": [14, 15, 31, 53, 66, 67, 68, 69, 70, 119, 131, 138, 142, 156, 182], "consider": 174, "consist": [5, 8, 36, 52, 53, 59, 60, 61, 62, 63, 64, 65, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 147, 148, 182, 186, 187, 191], "constant": [42, 105, 118], "constrain": [14, 15, 187], "constraint": [1, 2, 9, 10, 14, 15, 16, 26, 50, 122, 123, 125, 128, 129, 133, 169, 175, 187], "construct": [26, 112, 114, 123, 182, 187], "constructor": [134, 182], "consum": 185, "consumpt": 101, "contain": [2, 3, 4, 5, 7, 8, 29, 30, 32, 41, 52, 53, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 182, 187, 188, 189, 191], "context": [101, 113, 130, 134, 150], "conting": 63, "continu": [14, 15, 36, 144, 178, 182], "contrast": 125, "contribut": [28, 34, 36, 50, 52, 125, 133, 135, 136, 137, 138, 142, 174, 175, 189], "contributor": 174, "control": [11, 26, 100, 101, 113, 128, 129, 147, 189], "convent": [52, 59, 60, 61, 62, 63, 64, 65, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 147, 148], "converg": [26, 113, 122, 151], "convers": 178, "convert": [4, 6, 12, 13, 41, 42, 53, 66, 67, 68, 69, 70, 97, 119, 131, 147, 148, 165, 166, 167, 178], "convex": [26, 67, 115, 116, 117, 122, 123, 125, 133, 138, 174, 187, 189], "cookbook": 178, "coordin": 113, "cophenet": [29, 30, 32, 52], "copi": [41, 53, 66, 67, 68, 69, 70, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "core": 182, "corr": [45, 60, 62, 64, 65, 114, 139, 165, 167], "correct": [154, 155], "correctli": 42, "correl": [12, 18, 29, 30, 32, 38, 43, 45, 50, 60, 61, 62, 64, 65, 99, 112, 114, 125, 126, 139, 142, 165, 166, 167, 174, 175, 186], "correspond": [10, 52, 81, 101, 106, 113, 114, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 186, 189], "cost": [1, 16, 50, 102, 121, 122, 123, 125, 126, 128, 129, 133, 138, 175, 187, 189], "coul": 2, "could": [41, 42, 178], "count": [53, 66, 67, 68, 69, 70, 112, 119, 131, 135], "coupl": [6, 144], "cov": [45, 115, 116, 117, 156, 165, 166, 167, 178, 187], "cov_nearest": [40, 103, 105, 106, 107, 109, 112, 114, 115, 149], "covari": [3, 4, 5, 6, 17, 21, 40, 50, 60, 103, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 127, 128, 129, 133, 138, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 165, 166, 167, 175, 178, 187, 191, 192], "covariance_": [45, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 177], "covariance_estim": [3, 5, 20, 36, 45, 60, 105, 106, 111, 118, 148, 174, 185, 187, 191], "covariance_estimator_": [60, 105, 106, 111, 118, 148], "covariance_uncertainty_set_estim": [122, 129, 192], "covariance_uncertainty_set_estimator_": [122, 129], "covariancedist": [180, 187], "covert": 114, "cp": [122, 123, 128, 129, 133], "cpu": 101, "creat": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 101, 179, 188, 191], "criterion": 138, "cross": [14, 32, 40, 98, 99, 100, 101, 113, 130, 134, 143, 182, 187], "cross_val_predict": [12, 13, 14, 15, 31, 33, 36, 39, 40, 41, 42, 45, 134, 174, 186, 189], "cross_val_scor": 97, "crsp": [54, 55, 56, 57, 58, 179], "crucial": 12, "ct": [135, 136, 137, 138], "cumprod": 42, "cumul": [7, 8, 12, 13, 18, 19, 20, 26, 31, 33, 36, 39, 40, 45, 82, 83, 135, 136, 137, 138, 154, 155, 156, 157], "cumulative_return": [136, 137, 138, 189], "cumulative_returns_df": [136, 137, 138, 189], "current": [113, 115, 116, 117, 125, 136, 137, 138, 142, 182], "custom": [38, 40, 43, 50, 97, 122, 123, 128, 129, 133, 175, 178, 182], "custom_scor": 182, "cv": [12, 13, 14, 15, 28, 31, 34, 36, 39, 40, 41, 42, 45, 50, 99, 100, 101, 113, 130, 134, 174, 175, 182, 186, 187], "cv_result": [14, 15, 40, 45], "cv_results_": [14, 15, 40, 45, 113, 182], "cvar": [1, 2, 7, 9, 14, 15, 16, 17, 18, 20, 21, 23, 27, 28, 30, 31, 32, 33, 34, 36, 40, 70, 78, 121, 122, 123, 125, 126, 129, 130, 133, 136, 137, 138, 175, 182, 189], "cvar_beta": [15, 122, 123, 129, 133, 136, 137, 138], "cvar_ratio": [2, 15, 31, 33, 69, 136, 137, 138], "cvpxy": [122, 123, 128, 129, 133], "cvx": [41, 45, 48, 122, 174, 191], "cvxpy": [122, 123, 125, 128, 129, 133, 169, 174], "d": [45, 52, 53, 63, 112, 114, 143, 157, 164], "d_": 164, "dai": [12, 13, 14, 15, 31, 33, 36, 39, 40, 41, 42, 45, 100, 143, 178], "daili": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 45, 48, 54, 55, 56, 57, 58, 114, 121, 122, 125, 126, 128, 129, 133, 138, 147, 178, 179], "dar": [74, 75, 136, 137, 138], "dash": [14, 15, 40], "data": [45, 48, 52, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 99, 100, 101, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 123, 130, 131, 134, 139, 140, 141, 142, 143, 144, 148, 149, 171, 174, 179, 182, 183, 185, 186, 187, 189, 191], "data_hom": [55, 56], "dataclass": [3, 4, 5, 151, 158, 191], "datafram": [11, 12, 13, 42, 45, 54, 55, 56, 57, 58, 100, 114, 121, 122, 123, 125, 126, 128, 129, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 177, 180, 181, 187, 189, 190, 191, 192], "dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 43, 48, 50, 99, 103, 105, 106, 107, 109, 112, 114, 115, 140, 143, 166, 175, 176, 177, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192], "date": [7, 8, 42, 45, 48, 54, 55, 56, 58, 100, 143, 144, 189], "date_rang": [42, 143], "dateoffset": [100, 143], "datetim": [42, 100, 143, 189], "datetimeindex": 100, "ddof": [109, 187], "de": [29, 32, 60, 62, 64, 65, 99, 105, 106, 126, 130, 187], "decad": [125, 126], "decim": [53, 66, 67, 68, 69, 70, 119, 131], "declar": 113, "decomposit": [5, 103, 105, 106, 107, 109, 112, 114, 115, 122, 123, 127, 128, 129, 133, 147, 149, 151, 166, 168, 187, 191], "deconstruct": 112, "decreas": [40, 182], "dedic": 182, "deep": [52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 174, 182], "def": [41, 42, 53, 66, 67, 68, 69, 70, 119, 131, 182, 187], "defaul": 100, "default": [3, 4, 5, 7, 8, 11, 12, 13, 14, 26, 29, 30, 32, 38, 40, 43, 45, 50, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 87, 89, 90, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 169, 172, 175, 178, 179, 182, 186, 187, 189, 191], "defin": [2, 11, 12, 52, 60, 61, 62, 63, 64, 65, 76, 77, 98, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 158, 164, 178, 192], "definit": [40, 103, 105, 106, 107, 109, 112, 114, 115, 149, 166, 168], "deform": 10, "degre": [84, 136, 137, 138, 147, 154, 155, 156, 157], "delai": 101, "delatt": 174, "delet": [53, 66, 67, 68, 69, 70, 119, 131], "delimit": [53, 66, 67, 68, 69, 70, 119, 131], "delist": 42, "demand": 101, "demiguel": 174, "demonstr": [36, 40, 41, 42, 178, 187], "dendrogram": [52, 125, 126, 187], "denois": [3, 105, 187, 191], "denoisecovari": [3, 174, 177, 187, 191], "denomin": [112, 116, 142], "denot": [156, 178], "densiti": [164, 170], "depend": [12, 33, 61, 63, 77, 97, 112, 122, 123, 128, 129, 133, 136, 137, 138, 139, 154, 155, 174, 178, 186], "deriv": [114, 127, 178], "descend": [135, 138], "descent": 113, "describ": [115, 147, 182], "descript": [52, 53, 129, 133], "design": [6, 174, 187], "detail": [0, 40, 45, 103, 105, 106, 107, 109, 111, 112, 113, 114, 115, 118, 122, 123, 125, 127, 128, 129, 130, 133, 134, 147, 148, 149, 150, 154, 155, 156, 157, 169, 174, 182], "determin": [33, 101, 113, 118, 130, 134, 137, 164, 178], "determinist": [13, 121, 122, 125, 126, 128, 129, 133], "deton": 106, "detonecovari": [174, 177], "develop": [29, 30, 32, 125, 126, 130, 164, 174, 183, 187], "deviat": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 45, 69, 70, 81, 87, 89, 91, 113, 122, 125, 129, 133, 135, 136, 137, 138, 165, 166, 167, 169, 174, 187], "df": [42, 45, 54, 55, 56, 57, 58, 135], "diaconi": 170, "diag": 178, "diagon": [147, 149, 154, 155, 156, 157], "dict": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 48, 52, 59, 60, 61, 62, 63, 64, 65, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 169], "dictionari": [11, 12, 13, 53, 66, 67, 68, 69, 70, 114, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 134, 138, 143, 147, 182], "diebol": 114, "differ": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 33, 36, 39, 40, 48, 52, 69, 70, 84, 88, 116, 125, 128, 129, 133, 135, 136, 137, 138, 144, 164, 174, 178, 187], "differenti": 105, "digit": [53, 66, 67, 68, 69, 70, 119, 131], "dimens": [41, 151], "dimension": [5, 40, 103, 105, 106, 107, 109, 112, 114, 115, 118, 149, 166, 191], "direcli": 13, "direct": [113, 174], "directli": [2, 11, 63, 121, 122, 125, 126, 128, 129, 133, 134, 151, 178, 182, 189], "directori": 179, "dirichlet": [132, 173, 174], "dirk": 138, "discard": [53, 66, 67, 68, 69, 70, 119, 131], "discret": [26, 123, 182, 187], "dispatch": 101, "dispers": 164, "displai": [7, 8, 29, 30, 32, 36, 40, 41, 52, 135, 136, 137, 138], "display_sub_ptf_nam": [31, 33, 36, 40, 45, 135], "dist": [53, 113, 115, 116, 117], "distanc": [31, 33, 52, 53, 102, 113, 115, 116, 117, 121, 125, 126, 130, 160, 164, 174, 176, 187], "distance_": [59, 60, 61, 62, 63, 64, 65, 176, 180], "distance_estim": [29, 30, 31, 32, 33, 52, 121, 125, 126, 130, 176, 187], "distance_estimator_": [121, 125, 126, 130], "distancecorrel": [180, 187], "distinct": [29, 30, 32, 52], "distinguish": [79, 81, 87, 89, 90, 122, 129, 133, 136, 137, 138], "distribut": [3, 4, 5, 14, 15, 26, 29, 45, 54, 55, 56, 57, 58, 84, 113, 114, 115, 116, 117, 123, 132, 135, 136, 137, 138, 154, 155, 156, 157, 164, 172, 173, 174, 178, 179, 182, 187, 191, 192], "distribution": [27, 123, 174, 175], "distributionallyrobustcvar": [25, 26, 50, 187], "diverg": 48, "diversif": [14, 24, 36, 122, 128, 129, 138, 174, 175], "diversifi": [60, 62, 64, 65, 76, 126, 130, 138], "divid": [12, 69, 113, 115, 116, 117, 136, 137, 138], "dividend": [54, 55, 56, 57, 58, 179], "divis": [30, 125, 187], "do": [31, 143, 182], "docstr": [45, 113], "document": [7, 8, 45, 122, 123, 125, 128, 129, 133, 169, 185], "doe": [14, 114, 115, 125, 179, 182], "doesn": [29, 116], "domin": [84, 135, 136, 137, 138, 142, 174, 189], "don": 11, "done": [53, 66, 67, 68, 69, 70, 113, 119, 131, 182], "donnat": [125, 126], "dot": [0, 32, 36, 130, 134, 138, 187, 189], "doubl": 15, "down": [14, 29, 30, 32, 42, 125, 126, 187], "download": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50, 55, 56, 179], "download_if_miss": [55, 56], "downsid": [70, 79, 81, 87, 89, 90, 122, 129, 133, 136, 137, 138, 187], "drawdown": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 69, 70, 71, 72, 74, 75, 83, 85, 93, 122, 129, 133, 136, 137, 138, 174, 187, 189], "drawdown_at_risk": [67, 121, 125, 126, 136, 137, 138], "drawdown_at_risk_beta": [136, 137, 138], "drawdown_at_risk_ratio": [69, 136, 137, 138], "drawn": [113, 115, 116, 117, 132], "drift": 189, "driven": 123, "drop": [38, 43, 50, 134, 139, 144, 174, 175], "drop_assets_with_internal_nan": 140, "drop_inceptions_nan": [42, 144], "dropcorrel": [39, 190], "dt": [42, 100, 143, 189], "dtype": [29, 31, 33, 36, 39, 41, 42, 52, 113], "dual": 113, "dualiti": 113, "due": [12, 33, 40, 42, 101, 103, 105, 106, 107, 109, 112, 114, 115, 140, 150, 166, 189], "duplic": 122, "durat": [12, 100], "dure": [13, 30, 41, 52, 60, 61, 62, 63, 64, 65, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 125, 126, 128, 129, 130, 133, 134, 139, 140, 141, 142, 143, 147, 148, 149, 187], "dynam": 122, "e": [5, 42, 100, 113, 114, 115, 116, 117, 134, 135, 140, 149, 178, 191], "each": [5, 7, 8, 11, 12, 13, 14, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 182, 186, 187, 189, 191], "earli": [42, 140], "earlier": [29, 42], "easi": 178, "easier": 45, "eco": [122, 123, 125, 128, 129, 133, 169], "edar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 70, 121, 122, 125, 126, 129, 133, 136, 137, 138, 174, 187], "edar_beta": [122, 129, 133, 136, 137, 138], "edar_ratio": [69, 136, 137, 138], "eff": [76, 138], "effect": [7, 8, 9, 18, 19, 20, 23, 29, 30, 32, 76, 112, 113, 114, 115, 116, 117, 138, 139], "effective_number_asset": 138, "effici": [1, 10, 16, 41, 48, 50, 126, 130, 175, 178, 182, 188], "efficient_frontier_s": [9, 14, 15, 48, 129, 188], "egber": 114, "eigenvalu": [103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 166], "eigenvector": [105, 106], "either": [42, 139, 182], "elast": 113, "eldar": 116, "electr": [4, 11, 12, 13, 19], "electron": [126, 130], "element": [105, 106, 122, 123, 126, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 154, 155, 156, 157, 178], "ellipsoid": [15, 122, 129, 154, 155, 156, 157, 158, 187, 192], "elsewher": 113, "embargo": [31, 33, 36, 39, 99, 186], "embargo_s": 99, "embed": 15, "emit": 166, "empir": [1, 6, 16, 50, 105, 109, 110, 148, 156, 157, 174, 175], "empiricalcovari": [36, 45, 105, 106, 111, 114, 118, 148, 177], "empiricalcovarianceuncertaintyset": [154, 192], "empiricalmu": [148, 181], "empiricalmuuncertaintyset": [15, 192], "empiricalprior": [3, 5, 20, 29, 36, 45, 48, 121, 122, 123, 125, 126, 127, 128, 129, 133, 147, 149, 154, 155, 156, 157, 174, 178, 182, 185, 187, 191], "emploi": [29, 31, 126, 187], "empti": [53, 66, 67, 68, 69, 70, 119, 131, 135, 137], "enabl": [41, 45, 185], "enable_metadata_rout": [41, 45, 105, 106, 111, 113, 114, 115, 116, 117, 118, 123, 125, 127, 128, 130, 134, 147, 148, 149, 150, 154, 155, 156, 157, 185], "encapsul": [52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157], "encod": [53, 66, 67, 68, 69, 70, 119, 131], "encount": 42, "end": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 53, 66, 67, 68, 69, 70, 99, 100, 119, 125, 129, 131, 133, 135, 140, 142, 143, 164, 169, 187], "endswith": [53, 66, 67, 68, 69, 70, 119, 131], "enet_tol": 113, "enforc": 125, "enhanc": [97, 105, 112, 186, 189], "enough": [0, 31, 33, 36, 39, 189], "ensembl": [9, 10, 36, 120, 134, 174, 187], "ensur": [112, 125, 133, 143, 144, 186, 187], "ensure_2d": 41, "entir": [9, 14, 113, 140], "entri": [53, 174], "entrop": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 69, 70, 75, 77, 78, 122, 129, 133, 136, 137, 138, 174, 187], "entropi": [63, 75, 78, 136, 137, 138], "entropic_risk_measur": [67, 121, 125, 126, 136, 137, 138], "entropic_risk_measure_beta": [136, 137, 138], "entropic_risk_measure_ratio": [69, 136, 137, 138], "entropic_risk_measure_theta": [136, 137, 138], "enum": [53, 66, 67, 68, 69, 70, 119, 131], "enumer": [67, 68, 69, 70, 99, 100, 131, 159], "environ": 179, "epsilon": [45, 114], "eq": 116, "equal": [8, 12, 14, 18, 23, 26, 28, 29, 31, 32, 33, 34, 36, 41, 50, 52, 53, 66, 67, 68, 69, 70, 111, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 135, 174, 175], "equalweight": [2, 8, 14, 23, 26, 29, 30, 32, 33, 36, 41, 42, 132, 187], "equalweighted_1": 41, "equalweighted_10": 41, "equalweighted_100": 41, "equalweighted_101": 41, "equalweighted_102": 41, "equalweighted_103": 41, "equalweighted_104": 41, "equalweighted_105": 41, "equalweighted_106": 41, "equalweighted_107": 41, "equalweighted_108": 41, "equalweighted_109": 41, "equalweighted_11": 41, "equalweighted_110": 41, "equalweighted_111": 41, "equalweighted_112": 41, "equalweighted_113": 41, "equalweighted_114": 41, "equalweighted_115": 41, "equalweighted_116": 41, "equalweighted_117": 41, "equalweighted_118": 41, "equalweighted_119": 41, "equalweighted_12": 41, "equalweighted_120": 41, "equalweighted_121": 41, "equalweighted_122": 41, "equalweighted_123": 41, "equalweighted_124": 41, "equalweighted_125": 41, "equalweighted_126": 41, "equalweighted_127": 41, "equalweighted_128": 41, "equalweighted_13": 41, "equalweighted_14": 41, "equalweighted_15": 41, "equalweighted_16": 41, "equalweighted_17": 41, "equalweighted_18": 41, "equalweighted_19": 41, "equalweighted_2": 41, "equalweighted_20": 41, "equalweighted_21": 41, "equalweighted_22": 41, "equalweighted_23": 41, "equalweighted_24": 41, "equalweighted_25": 41, "equalweighted_26": 41, "equalweighted_27": 41, "equalweighted_28": 41, "equalweighted_29": 41, "equalweighted_3": 41, "equalweighted_30": 41, "equalweighted_31": 41, "equalweighted_32": 41, "equalweighted_33": 41, "equalweighted_34": 41, "equalweighted_35": 41, "equalweighted_36": 41, "equalweighted_37": 41, "equalweighted_38": 41, "equalweighted_39": 41, "equalweighted_4": 41, "equalweighted_5": 41, "equalweighted_6": 41, "equalweighted_7": 41, "equalweighted_8": 41, "equalweighted_89": 41, "equalweighted_9": 41, "equalweighted_90": 41, "equalweighted_91": 41, "equalweighted_92": 41, "equalweighted_93": 41, "equalweighted_94": 41, "equalweighted_95": 41, "equalweighted_96": 41, "equalweighted_97": 41, "equalweighted_98": 41, "equalweighted_99": 41, "equat": 14, "equilibrium": [111, 147, 174, 187], "equilibriummu": [147, 181, 187], "equiti": [122, 123, 128, 129, 133, 147, 174], "equival": [11, 14, 29, 122, 123, 128, 129, 133, 182], "error": [1, 5, 15, 16, 45, 50, 53, 66, 67, 68, 69, 70, 113, 114, 115, 116, 117, 118, 119, 122, 123, 128, 129, 131, 133, 137, 138, 149, 160, 161, 162, 166, 174, 175, 187, 191, 192], "error_i": 45, "error_norm": [113, 115, 116, 117], "esfahani": [26, 123, 187], "especi": [42, 140], "estim": [3, 4, 5, 6, 7, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 40, 42, 52, 59, 60, 61, 62, 63, 64, 65, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 170, 174, 178, 185, 186, 190], "estimators_": [36, 134], "et": 112, "etc": [32, 130, 174, 177, 178, 180, 181, 187, 189, 190, 191, 192], "etf": [5, 6, 29, 54], "europ": [122, 123, 128, 129, 133, 147, 174], "european": 147, "evalu": [7, 8, 9, 14, 18, 19, 20, 23, 31, 33, 36, 40, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 182], "evar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 70, 121, 122, 125, 126, 129, 133, 136, 137, 138, 174, 187], "evar_beta": [122, 129, 133, 136, 137, 138], "evar_ratio": [69, 136, 137, 138], "even": [5, 8, 100, 178, 191], "event": 42, "everi": [7, 8, 11, 12, 13, 41, 45, 100, 186, 187], "evid": 114, "evolutionari": 142, "ewcovari": 177, "ewm": 108, "ewmu": [174, 181, 182], "exacerb": 14, "exact": 101, "exactli": [113, 115, 116, 117], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 99, 100, 101, 119, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 138, 139, 140, 141, 142, 143, 147, 151, 169, 174, 175, 176, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192], "exce": 112, "except": [8, 135, 136, 137, 138], "excess": [69, 136, 137, 138], "exclud": [12, 42, 99, 100, 143], "execut": [16, 21, 24, 27, 34, 37, 43, 46, 49, 51, 101, 175], "exhibit": [99, 186], "exist": [52, 100, 113, 114, 115, 116, 117, 122, 123, 125, 128, 129, 133, 179], "exit": [42, 143], "exp": 178, "expand": [53, 66, 67, 68, 69, 70, 119, 131], "expandtab": [53, 66, 67, 68, 69, 70, 119, 131], "expect": [2, 3, 4, 5, 6, 9, 12, 13, 15, 18, 19, 23, 42, 70, 72, 73, 84, 104, 108, 110, 111, 118, 121, 122, 123, 125, 126, 127, 128, 129, 131, 133, 136, 137, 138, 147, 148, 149, 151, 155, 157, 158, 178, 187, 191, 192], "expected_returns_from_asset": 138, "expend_train": 100, "expir": [42, 140, 143], "expiration_d": [42, 143], "expiration_lookahead": [42, 143], "expiri": [38, 43, 50, 140, 175], "explain": [5, 12, 13, 29, 48, 106, 149, 191], "explan": 185, "explicit": [59, 103, 104, 113, 145, 146, 152, 153], "explicitli": 185, "exploit": [30, 33, 125, 187], "explor": [48, 113, 182, 187, 188], "explos": 101, "expon": [60, 62, 64, 65, 182], "exponenti": [77, 107, 108, 136, 137, 138, 174], "expos": 130, "express": [12, 13, 45, 53, 66, 67, 68, 69, 70, 101, 114, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 138, 147], "extend": [36, 48, 112, 135, 186, 188], "extrariskmeasur": [97, 121, 125, 126, 130, 134, 136, 137, 138], "extrem": [81, 112, 136, 137, 138, 174], "ey": 10, "f": [2, 14, 23, 31, 33, 36, 39, 41, 45, 48, 53, 66, 67, 68, 69, 70, 99, 100, 102, 119, 129, 131, 187, 189], "f_": [13, 102, 121, 122, 125, 126, 128, 129, 133, 138], "face": [113, 174], "fact": 174, "factor": [1, 3, 4, 16, 29, 50, 54, 101, 107, 108, 111, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 144, 149, 150, 151, 154, 155, 156, 157, 175, 187], "factor_pric": [5, 6, 29, 174, 187, 191], "factor_prior_estim": [5, 6, 149, 174, 187, 191], "factor_prior_estimator_": 149, "factor_view": [6, 174, 187], "factori": 97, "factormodel": [5, 6, 29, 174, 187, 191], "fail": [42, 113, 122, 123, 128, 129, 133, 166], "failur": [53, 66, 67, 68, 69, 70, 119, 131], "fall": [15, 187], "fals": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 53, 55, 56, 60, 62, 64, 65, 66, 67, 68, 69, 70, 82, 83, 97, 100, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 128, 129, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 166, 168, 174, 182, 186, 187, 188, 190], "farthest": 53, "fast": [101, 135, 150], "faster": 166, "fat": [81, 136, 137, 138], "favor": 182, "feasibl": [10, 11], "featur": [63, 99, 107, 113, 115, 116, 117, 139, 140, 141, 142, 143, 147, 148, 149, 174, 186], "feature_names_in_": [52, 60, 61, 62, 63, 64, 65, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 125, 126, 128, 129, 130, 133, 134, 139, 140, 141, 142, 143, 147, 148, 149], "feature_names_out": [139, 140, 141, 142, 143], "feature_select": 41, "februari": 115, "fee": [1, 16, 50, 121, 122, 125, 126, 128, 129, 133, 138, 174, 175, 187, 189], "few": 185, "fewer": 100, "field": [53, 66, 67, 68, 69, 70, 119, 131], "fig": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 52], "figsiz": 42, "figur": [7, 8, 14, 15, 40, 52, 135, 136, 137, 138], "file": [16, 21, 24, 27, 34, 37, 43, 46, 49, 51, 175], "fill": [14, 40, 53, 66, 67, 68, 69, 70, 119, 131, 144], "fill_nan": [42, 144], "fill_valu": 42, "fillchar": [53, 66, 67, 68, 69, 70, 119, 131], "fillcolor": [14, 40], "filter": [14, 135], "final": [2, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 36, 45, 112, 114, 125, 126, 130, 134, 142, 169, 187, 189], "final_estim": [36, 134, 187], "final_estimator_": [36, 134], "financ": [105, 106, 126, 130, 166], "financi": [5, 11, 76, 99, 106, 125, 126, 138, 140, 147, 149, 186, 191], "find": [7, 8, 9, 10, 18, 23, 26, 31, 33, 36, 40, 42, 45, 52, 53, 66, 67, 68, 69, 70, 102, 103, 105, 106, 107, 109, 112, 114, 115, 118, 119, 123, 131, 149, 166, 178, 182, 187, 188], "fine": 174, "finer": 182, "finit": [26, 45, 114, 123, 135, 136, 137, 138, 187], "first": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 36, 39, 40, 42, 45, 48, 53, 66, 67, 68, 69, 70, 79, 100, 106, 113, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 166, 174, 178, 183, 185, 187], "first_front_onli": 135, "first_lower_partial_mo": [70, 121, 122, 125, 126, 129, 133, 136, 137, 138], "first_lower_partial_moment_ratio": [69, 136, 137, 138], "fischer": 147, "fit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 45, 52, 59, 60, 61, 62, 63, 64, 65, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192], "fit_intercept": [5, 150], "fit_param": [60, 105, 106, 111, 113, 114, 118, 123, 125, 126, 127, 128, 129, 130, 133, 134, 139, 140, 141, 142, 143, 147, 148, 149, 150, 154, 155, 156, 157], "fit_predict": [9, 10, 33, 48, 52, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "fit_transform": [139, 140, 141, 142, 143, 190], "fitness_measur": [136, 137, 138, 142, 189], "fitting_period": [12, 13], "fix": [12, 113, 147], "flag": 135, "flat": 52, "flint": 112, "flip": 97, "float": [11, 12, 13, 14, 15, 40, 41, 42, 60, 61, 62, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 147, 148, 154, 155, 156, 157, 158, 166], "float32": 41, "float64": [14, 41, 42], "fluctuat": 112, "focu": 42, "fold": [12, 31, 33, 36, 39, 99, 100, 101, 102, 113, 130, 134, 182, 186, 189], "folder": [55, 56, 179], "follow": [11, 19, 40, 41, 42, 53, 66, 67, 68, 69, 70, 99, 119, 122, 123, 128, 129, 131, 133, 139, 140, 141, 142, 143, 147, 174, 176, 177, 178, 180, 181, 182, 186, 187, 190, 191, 192], "font": 9, "foral": [125, 129, 169, 187], "forc": [154, 155, 157], "forecast": [114, 147], "forest": 53, "form": [32, 52, 53, 59, 60, 61, 62, 63, 64, 65, 84, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 176], "format": [53, 66, 67, 68, 69, 70, 119, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143], "format_map": [53, 66, 67, 68, 69, 70, 119, 131], "formul": [116, 122, 125, 189], "formula": [12, 111, 115, 116, 118, 121, 122, 125, 126, 128, 129, 133], "forward": [12, 13, 15, 41, 100, 144, 174], "found": [53, 66, 67, 68, 69, 70, 113, 119, 131], "four": [26, 42], "fourth": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 80, 81, 136, 137, 138, 174], "fourth_central_mo": [67, 121, 125, 126, 136, 137, 138], "fourth_lower_partial_mo": [67, 121, 125, 126, 136, 137, 138], "frac": [15, 53, 63, 76, 102, 114, 122, 125, 129, 131, 135, 136, 137, 138, 144, 156, 157, 164, 169, 178, 187], "framework": [174, 183], "frank": [125, 126], "free": [122, 123, 128, 129, 133, 136, 137, 138, 147], "freedman": [63, 159, 170], "freedom": [154, 155, 156, 157], "freq": [41, 42, 100, 143], "freq_offset": 100, "frequenc": [100, 114, 147, 178], "frequent": [178, 189], "fridai": [41, 100], "frobeniu": [113, 115, 116, 117], "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 75, 78, 82, 83, 97, 99, 100, 102, 105, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192], "front": [53, 66, 67, 68, 69, 70, 119, 131, 135, 142, 188], "frontier": [1, 10, 16, 48, 50, 126, 130, 175, 178, 188], "ftse": [14, 15, 31, 36, 39, 40, 55], "full": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 52, 53, 134, 182, 185, 189], "fulli": [11, 122, 123, 128, 129, 190, 191], "function": [12, 14, 15, 26, 40, 45, 77, 97, 101, 102, 113, 122, 123, 128, 129, 131, 133, 135, 136, 137, 138, 154, 155, 156, 157, 174, 178, 182, 186, 187, 188], "fund": 174, "further": [0, 33], "futur": [4, 6, 42, 114, 122, 123, 128, 129, 133, 178], "g": [42, 45, 102, 113, 114, 115, 116, 117, 134, 140, 174], "g_": 102, "galleri": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50, 175], "gamma": 182, "gap": [52, 113, 125, 140, 164], "garp": [144, 148, 178], "gaussian": [113, 115, 116, 117], "gautier": [125, 126, 174], "ge": [4, 6, 11, 12, 13, 19, 41, 45, 48, 129, 133, 164, 187], "ge0": 187, "gener": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50, 99, 100, 101, 113, 126, 130, 134, 139, 140, 141, 142, 143, 154, 155, 178, 182, 186, 187], "generate_pric": 42, "gerber": [5, 112], "gerbercovari": [5, 45, 60, 174, 177], "get": [4, 6, 26, 52, 59, 60, 61, 62, 63, 64, 65, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 178, 191], "get_feature_names_out": [139, 140, 141, 142, 143], "get_measur": [136, 137, 138], "get_metadata_rout": [52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157], "get_n_split": 100, "get_param": [52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 174, 182], "get_path_id": [98, 99], "get_precis": [113, 115, 116, 117], "get_summari": 174, "get_support": [139, 140, 141, 142, 143], "get_weight": [138, 189], "getter": [113, 115, 116, 117], "gini": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 69, 70, 84, 88, 129, 133, 136, 137, 138, 174, 187], "gini_mean_differ": [36, 70, 136, 137, 138], "gini_mean_difference_ratio": [69, 121, 122, 125, 126, 129, 133, 136, 137, 138], "github": [174, 179], "give": [0, 7, 8, 45, 101, 113, 178], "given": [40, 53, 66, 67, 68, 69, 70, 74, 77, 94, 113, 114, 115, 116, 117, 119, 130, 131, 134, 135, 136, 137, 138, 141, 143, 147, 157, 165, 178, 182], "gmd": [84, 88, 136, 137, 138], "go": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 178], "goal": 105, "goe": [113, 187], "good": [97, 142], "grand": 118, "graph": [113, 135], "graph_obj": 40, "graph_object": [14, 15], "graphic": 174, "graphicallasso": 113, "graphicallassocv": 177, "greater": [30, 81, 106, 113, 122, 123, 128, 129, 133, 136, 137, 138], "greater_is_bett": 97, "greatli": [29, 30, 32], "green": [14, 15, 40, 42], "grid": [14, 15, 45, 113], "grid_search": [14, 15, 36, 40, 42, 45, 182], "grid_search_herc": 31, "grid_search_hrp": [31, 33], "gridsearch": 33, "gridsearchcv": [14, 15, 31, 33, 36, 40, 42, 45, 97, 174, 182], "group": [45, 99, 100, 122, 123, 128, 129, 133, 136, 137, 138, 147, 174, 187], "groups_": 147, "gs_model": 45, "guarante": 123, "guid": [0, 7, 8, 45, 52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 174, 178], "guidelin": 0, "g\u00e1bor": 61, "h": [63, 112, 135, 136, 137, 138], "ha": [8, 12, 14, 18, 19, 23, 29, 30, 31, 32, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 139, 140, 141, 142, 143, 147, 148, 149, 164, 169, 174, 182, 187], "hadamard": 178, "hand": 144, "handl": [12, 26, 38, 43, 50, 53, 66, 67, 68, 69, 70, 119, 120, 123, 125, 131, 175, 187], "hansen": 114, "hat": [15, 118, 122, 129, 154, 155, 156, 157, 158, 192], "have": [2, 4, 6, 10, 11, 12, 14, 30, 36, 41, 42, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 174, 178, 182], "hd": [29, 30, 32, 41, 45, 48], "head": [7, 8, 45, 48, 54, 55, 56, 57, 58, 179], "heatmap": [29, 30, 32, 52], "heavi": [81, 136, 137, 138], "hee": 53, "height": [29, 30, 32], "help": [5, 149, 191], "herc": [28, 30, 34, 50, 125, 175, 186, 187], "here": [7, 8, 29, 32, 41, 100, 113, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 178, 182, 185, 187], "herfindahl": [76, 138], "hermitian": 168, "hero": 116, "hierarch": [32, 34, 36, 52, 121, 125, 126, 130, 174, 175, 176], "hierarchi": [52, 53, 125, 126], "hierarchical_clustering_estim": [29, 30, 31, 121, 125, 126], "hierarchical_clustering_estimator_": [29, 30, 121, 125, 126], "hierarchical_clustering_estimator__linkage_method": 31, "hierarchicalclust": [29, 30, 31, 32, 33, 121, 125, 126, 130, 176], "hierarchicalequalriskcontribut": [30, 31, 36, 176, 187], "hierarchicalriskpar": [29, 31, 176, 187], "high": [26, 40, 97, 103, 105, 106, 107, 109, 112, 114, 115, 118, 123, 130, 134, 142, 147, 166, 174, 187], "higham": [103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 149, 166], "higham_max_iter": [103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 166], "higher": [2, 12, 13, 14, 31, 76, 81, 100, 136, 137, 138, 141, 174], "highest": [14, 15, 23, 31, 41, 45, 53, 66, 67, 68, 69, 70, 119, 131, 139, 141, 174, 182], "highli": [30, 38, 43, 50, 139, 174, 175, 178], "highlight": 135, "histogram": [170, 171], "histor": [31, 33, 36, 39, 72, 73, 94, 107, 110, 136, 137, 138], "histori": 42, "holding_period": [12, 13], "home": 179, "homogen": [0, 4, 6, 12, 121, 122, 125, 126, 128, 129, 133, 138, 189], "horizon": [47, 49, 50, 148, 175, 178], "horizont": [29, 30, 32], "hous": 187, "hover": 135, "hover_measur": [9, 10, 14, 15, 135], "how": [2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 20, 36, 40, 41, 42, 45, 52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 182, 185, 187], "howev": [12, 13, 14, 29, 33, 42, 121, 122, 125, 126, 128, 129, 133, 178], "hrp": [28, 29, 30, 32, 34, 50, 125, 130, 175, 186, 187], "html": [122, 123, 125, 128, 129, 133, 169], "http": [7, 8, 122, 123, 125, 128, 129, 133, 169, 174], "hugo": 174, "hyper": 174, "hyperparamet": [33, 42], "hypothet": 42, "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 94, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 168, 169, 174, 176, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192], "i_": 156, "id": [98, 99, 136, 137, 138], "idea": 10, "ident": [115, 116, 117, 133, 144, 178], "identifi": [53, 66, 67, 68, 69, 70, 99, 119, 131], "idx": [135, 136, 137, 138], "idzorek": 147, "ieee": 116, "iff": [139, 140, 141, 142, 143], "ignor": [52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 147, 148], "ij": 53, "ill": [105, 178], "iloc": 42, "ima": 166, "imag": 42, "img": 42, "immedi": [99, 101, 186], "impact": [8, 12, 13, 14, 30, 121, 122, 125, 126, 128, 129, 133, 138], "implement": [41, 42, 53, 66, 67, 68, 69, 70, 98, 112, 116, 119, 131, 138, 139, 178, 182, 186, 187, 189], "impli": [44, 46, 50, 114, 174, 175, 185], "implied_vol": [45, 114, 185], "implied_vol_test": 45, "implied_vol_train": 45, "impliedcovari": [45, 185], "import": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 54, 55, 56, 57, 58, 99, 100, 140, 143, 176, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192], "impos": [5, 133, 149, 187, 191], "improv": [7, 8, 9, 18, 19, 20, 23, 31, 33, 36, 39, 40, 122, 151, 164, 188, 189], "imput": 42, "imread": 42, "imshow": 42, "inaccuraci": [40, 103, 105, 106, 107, 109, 112, 114, 115, 166], "inappropri": 100, "incept": [38, 43, 50, 140, 144, 175], "includ": [0, 7, 42, 53, 66, 67, 68, 69, 70, 99, 113, 115, 116, 117, 119, 131, 133, 135, 139, 142, 143, 174, 176, 186, 189], "incom": 147, "incomplet": [38, 43, 50, 175], "incomplete_dataset": 42, "incorpor": [2, 6, 11, 12, 13, 14, 15, 20, 99, 106, 125, 147, 186, 187, 191], "incorrect": 178, "increas": [14, 26, 39, 40, 122, 123, 128, 129, 133, 182], "increment": 53, "incur": 12, "independ": [36, 61, 178, 182], "index": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 53, 55, 56, 57, 58, 66, 67, 68, 69, 70, 76, 93, 99, 100, 114, 119, 122, 123, 125, 128, 129, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 169, 174, 187, 189], "index_train_test_": 99, "indexerror": 135, "indic": [29, 30, 32, 76, 99, 100, 101, 113, 136, 137, 138, 139, 140, 141, 142, 143], "indict": 14, "individu": [36, 134, 142, 150, 154, 155, 187], "induc": [12, 13], "industri": 11, "inequ": [75, 78, 122, 123, 128, 129, 133, 136, 137, 138], "inf": [11, 113, 121, 122, 123, 125, 126, 128, 129, 133], "influenc": 182, "inform": [33, 45, 52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 174, 187], "inherit": [188, 189], "init": [125, 169], "initi": [125, 137, 139, 154, 155, 166, 169, 190], "inner": [32, 130, 134, 187], "inner_estim": [32, 33, 130, 174, 187], "inner_estimator__risk_measur": 33, "inner_estimators_": 130, "input": [4, 6, 11, 12, 13, 36, 52, 53, 66, 67, 68, 69, 70, 101, 113, 114, 119, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 170, 171, 174, 178, 187, 189, 191], "input_featur": [139, 140, 141, 142, 143], "input_nam": 41, "insert": [53, 66, 67, 68, 69, 70, 119, 131, 135, 139, 140, 141, 142, 143], "insid": [45, 113, 114, 115, 116, 117, 130, 178, 185], "inspir": 174, "instabl": [15, 39, 122, 129, 187, 192], "instanc": [52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 182], "instead": [6, 9, 10, 14, 30, 53, 55, 56, 63, 66, 67, 68, 69, 70, 100, 101, 113, 114, 115, 116, 117, 119, 125, 130, 131, 134, 144, 147, 182, 186, 187], "institut": [76, 138], "insuffici": 142, "int": [41, 42, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 88, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 154, 155, 164, 166, 170, 171, 172, 173], "int64": [31, 33, 36, 39, 45, 52], "integ": [53, 66, 67, 68, 69, 70, 100, 113, 119, 130, 131, 134, 139, 140, 141, 142, 143], "integr": [41, 186], "intend": [187, 189], "intention": [53, 66, 67, 68, 69, 70, 119, 131], "inter": [32, 130], "intercept": [5, 45, 114, 150], "intercepts_": [45, 114, 150], "interchang": 178, "interest": [122, 123, 128, 129, 133], "interfac": 174, "intermedi": 125, "intern": 140, "interpret": [53, 66, 67, 68, 69, 70, 119, 131], "intersect": 135, "intra": [32, 130], "introduc": [6, 26, 29, 30, 32, 33, 36, 39, 40, 42, 45, 61, 174], "invari": 178, "invers": [7, 18, 19, 29, 30, 36, 76, 113, 115, 116, 117, 125, 126, 127, 138, 147, 154, 155, 156, 157, 166, 174, 187], "inverse_transform": [139, 140, 141, 142, 143], "inversevolatil": [7, 18, 19, 36, 45, 187], "invest": [11, 12, 47, 49, 50, 122, 123, 128, 129, 138, 148, 175, 178], "investment_horizon": [48, 148, 178], "investor": [3, 4, 5, 29, 77, 136, 137, 138, 147, 187, 189, 191], "invok": 101, "io": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 45, 48], "ipynb": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48], "is_log_norm": [48, 148, 178], "isalnum": [53, 66, 67, 68, 69, 70, 119, 131], "isalpha": [53, 66, 67, 68, 69, 70, 119, 131], "isascii": [53, 66, 67, 68, 69, 70, 119, 131], "isdecim": [53, 66, 67, 68, 69, 70, 119, 131], "isdigit": [53, 66, 67, 68, 69, 70, 119, 131], "isidentifi": [53, 66, 67, 68, 69, 70, 119, 131], "isin": 41, "iskeyword": [53, 66, 67, 68, 69, 70, 119, 131], "islow": [53, 66, 67, 68, 69, 70, 119, 131], "isnumer": [53, 66, 67, 68, 69, 70, 119, 131], "isprint": [53, 66, 67, 68, 69, 70, 119, 131], "isspac": [53, 66, 67, 68, 69, 70, 119, 131], "issu": 115, "istitl": [53, 66, 67, 68, 69, 70, 119, 131], "isupp": [53, 66, 67, 68, 69, 70, 119, 131], "item": [45, 135], "iter": [53, 66, 67, 68, 69, 70, 100, 101, 103, 105, 106, 107, 109, 112, 113, 114, 115, 119, 130, 131, 134, 135, 149, 166, 182], "its": [11, 12, 13, 14, 15, 40, 45, 53, 63, 66, 67, 68, 69, 70, 78, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 147, 158, 164, 165, 177, 178, 180, 181, 185, 187, 189, 191, 192], "itself": [2, 53, 66, 67, 68, 69, 70, 119, 131, 135], "iv": [45, 114], "iv_": [45, 114], "j": [53, 61, 99, 129, 178, 187], "jame": [3, 5, 118, 119, 191], "james_stein": [118, 119], "japan": 174, "javid": 112, "jnj": [41, 45, 48], "job": [101, 113, 130, 134, 150], "joblib": [101, 113, 130, 134, 150], "join": [53, 66, 67, 68, 69, 70, 119, 131, 144], "joint": [63, 178], "jorion": 118, "journal": [60, 62, 64, 65, 112, 115, 125, 126, 130, 147, 154, 155, 156, 157, 166], "jpm": [4, 6, 11, 12, 13, 19, 41, 45, 48, 174], "jpmorgan": [4, 11, 12, 13, 19], "julia": 114, "jupyt": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50], "just": 42, "justifi": [53, 66, 67, 68, 69, 70, 119, 131], "k": [40, 45, 99, 101, 102, 113, 141, 144, 154, 156, 158, 163, 164, 178, 182, 186, 192], "k_": 156, "kappa": [15, 122, 129, 154, 155, 156, 157, 158, 192], "kappa_": [15, 122, 129], "keep": [139, 141, 144], "keepend": [53, 66, 67, 68, 69, 70, 119, 131], "kei": [11, 12, 13, 53, 66, 67, 68, 69, 70, 113, 114, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 134, 135, 138, 143, 147], "kendal": [29, 30, 32, 62, 65, 112, 174, 187], "kendalldist": [29, 30, 31, 32, 33, 180, 187], "kept": 144, "keyword": [53, 59, 66, 67, 68, 69, 70, 103, 104, 119, 131, 134, 145, 146, 152, 153, 182], "kfold": [32, 99, 101, 113, 130, 134, 174, 182, 186, 187], "kmean": [32, 130, 187], "know": 11, "known": [15, 42, 53, 63, 143, 174, 187], "knuth": [63, 159, 171], "ko": [41, 45, 48, 174, 191], "kroneck": 156, "kuhn": [26, 123, 187], "kurtosi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 136, 137, 138, 174, 178], "kwarg": [52, 53, 59, 66, 67, 68, 69, 70, 97, 103, 104, 119, 131, 135, 145, 146, 152, 153], "l": 55, "l1": [1, 16, 36, 50, 113, 122, 128, 129, 174, 175, 187], "l1_coef": [14, 36, 122, 128, 129, 182], "l2": [1, 16, 50, 122, 128, 129, 170, 175, 187], "l2_coef": [14, 122, 128, 129, 174, 182], "label": [52, 99, 186], "labels_": [52, 130], "lambda": [40, 129, 131, 178, 187], "lar": 113, "larg": [14, 42, 103, 105, 106, 107, 109, 112, 114, 115, 116, 142, 144, 166, 174, 189], "larger": 179, "lasso": [113, 174], "lassocv": [5, 149, 150, 191], "last": [100, 107, 108, 109, 110, 112, 135, 137], "late": 140, "later": [42, 140, 186], "latest": [12, 13], "latter": [52, 59, 60, 61, 62, 63, 64, 65, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157], "law": [76, 138], "le": [129, 187], "lead": [13, 53, 66, 67, 68, 69, 70, 119, 121, 122, 125, 126, 128, 129, 130, 131, 133, 134, 140, 178, 182, 186], "leaf": [29, 126, 187], "leakag": [7, 8, 32, 36, 99, 130, 134, 174, 183, 186, 187], "learn": [5, 7, 8, 97, 99, 105, 106, 113, 114, 115, 116, 117, 126, 130, 174, 177, 180, 181, 182, 183, 185, 186, 187, 190, 191, 192], "learnt": 182, "least": [53, 66, 67, 68, 69, 70, 99, 119, 131, 136, 137, 138], "ledoit": [115, 174], "ledoitwolf": [36, 45, 177], "left": [42, 53, 66, 67, 68, 69, 70, 103, 105, 106, 107, 109, 112, 113, 114, 115, 119, 122, 123, 128, 129, 131, 133, 154, 155, 156, 157, 158, 166, 174, 178, 189, 192], "left_inequ": [11, 122, 123, 128, 129, 133], "len": [14, 53, 66, 67, 68, 69, 70, 119, 131], "length": [53, 66, 67, 68, 69, 70, 100, 119, 131, 154, 155], "leptokurt": [45, 114], "leq": [11, 107, 108, 122, 123, 125, 128, 129, 133, 154, 155, 156, 157, 158, 169, 192], "less": [11, 19, 31, 45, 114, 147, 151, 178], "let": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 139, 185, 188], "level": [15, 59, 72, 73, 74, 75, 77, 78, 94, 101, 103, 104, 122, 123, 129, 130, 133, 134, 135, 136, 137, 138, 145, 146, 152, 153, 154, 155, 156, 157], "level_0": 45, "level_1": 45, "leverag": 11, "le\u00f3n": 178, "lib": 174, "librari": 174, "licens": 174, "lightweight": 101, "like": [11, 12, 13, 26, 29, 42, 52, 53, 59, 60, 61, 62, 63, 64, 65, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 154, 155, 156, 157, 174, 177, 178, 180, 181, 186, 187, 190, 191, 192], "likelihood": [113, 115, 116, 117], "limit": [6, 53, 66, 67, 68, 69, 70, 112, 119, 125, 131, 133, 187], "lin": 178, "line": [14, 15, 29, 30, 32, 40, 45, 52, 53, 66, 67, 68, 69, 70, 119, 131], "line_color": [14, 15, 40], "line_dash": [14, 15, 40], "line_width": [14, 15, 40], "linear": [7, 8, 12, 13, 26, 61, 114, 121, 122, 123, 125, 126, 128, 129, 133, 138, 144, 148, 150, 187], "linear_constraint": [11, 122, 123, 128, 129, 133, 174], "linear_model": [5, 191], "linear_regressor": [5, 114, 150], "linear_regressors_": 114, "linearregress": 114, "link": [29, 30, 32], "linkag": [52, 53, 121, 125, 126, 130, 164, 187], "linkage_matrix": 164, "linkage_matrix_": [52, 176], "linkage_method": [29, 30, 31, 32, 52], "linkagemethod": [29, 30, 31, 32, 33, 52], "linspac": 10, "list": [0, 11, 40, 42, 53, 66, 67, 68, 69, 70, 100, 113, 114, 119, 122, 123, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 142, 147, 182, 188, 189], "literatur": [45, 147], "litterman": [1, 16, 50, 147, 175, 187], "live": 143, "ljust": [53, 66, 67, 68, 69, 70, 119, 131], "ll": 42, "lly": [41, 45, 48], "ln": [45, 114, 144, 178], "load": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 48, 54, 55, 56, 57, 58, 145, 149, 150, 179, 191], "load_factors_dataset": [5, 6, 29, 174, 179, 187, 191], "load_ftse100_dataset": [14, 15, 31, 36, 39, 40, 179], "load_nasdaq_dataset": 179, "load_sp500_dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 41, 45, 48, 174, 176, 177, 179, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192], "load_sp500_implied_vol_dataset": [45, 185], "load_sp500_index": [2, 179], "loading_matrix": 5, "loading_matrix_": [5, 150], "loading_matrix_estim": [5, 149, 191], "loading_matrix_estimator_": [5, 149], "loadingmatrixestim": 149, "loadingmatrixregress": [5, 149, 191], "loc": [15, 29, 45, 185], "local": [55, 56, 179], "locat": [99, 113, 115, 116, 117], "location_": [113, 115, 116, 117], "log": [14, 41, 45, 113, 114, 115, 116, 117, 133, 178, 182, 187], "log_return": 144, "log_scal": [135, 136, 137, 138], "logarithm": [45, 114, 135, 136, 137, 138, 144, 148], "logic": [100, 182], "loguniform": [14, 174, 182], "long": [2, 14, 15, 42, 121, 122, 123, 125, 126, 128, 129, 133, 178, 187], "longer": [48, 136, 137, 138], "lookahead": 143, "lookup": [53, 66, 67, 68, 69, 70, 119, 122, 131], "lookuperror": [53, 66, 67, 68, 69, 70, 119, 131], "lopez": [29, 32, 126, 130, 187], "lopsided": [136, 137, 138], "loss": [15, 42, 94, 97, 136, 137, 138], "lost": 33, "loud": 106, "lovett": [76, 138], "low": [54, 97, 142, 147], "lower": [2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 53, 66, 67, 68, 69, 70, 79, 81, 89, 90, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 136, 137, 138, 151, 169, 174, 187, 191], "lowercas": [5, 53, 66, 67, 68, 69, 70, 119, 131, 191], "lowest": [14, 15, 53, 66, 67, 68, 69, 70, 119, 131, 139, 141], "lstrip": [53, 66, 67, 68, 69, 70, 119, 131], "lvert": [15, 102, 122, 129], "l\u00f2pez": [60, 62, 64, 65, 105, 106], "l\u00f3pez": [99, 126, 130], "m": [100, 115, 135, 162, 163, 168], "machin": [99, 105, 106, 126, 130, 174], "mad": [87, 136, 137, 138], "made": 14, "magenta": 42, "mahalanobi": [113, 115, 116, 117], "mai": [0, 7, 8, 14, 31, 33, 36, 39, 42, 53, 66, 67, 68, 69, 70, 113, 119, 131, 140, 182, 186, 187], "main": 182, "mainli": [53, 66, 67, 68, 69, 70, 119, 131], "maintain": 135, "make": [5, 6, 7, 8, 11, 12, 13, 53, 66, 67, 68, 69, 70, 97, 100, 119, 131, 149, 187, 189, 191], "make_scor": [14, 15, 31, 36, 40, 45, 182], "maketran": [53, 66, 67, 68, 69, 70, 119, 131], "manag": [1, 16, 50, 60, 62, 64, 65, 105, 106, 112, 120, 121, 122, 125, 126, 128, 129, 130, 133, 138, 144, 148, 174, 175, 178, 187, 189], "management_fe": [13, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 138], "mani": 182, "manipul": [136, 137, 138, 188], "manner": [29, 126, 182, 187], "map": [10, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 178], "marco": [29, 32, 99, 126, 130, 187], "margin": 63, "market": [4, 11, 106, 111, 122, 123, 125, 126, 128, 129, 147, 178, 187], "markowitz": [112, 174], "marti": [125, 126, 174], "mar\u010denko": 105, "mask": [139, 140, 141, 142, 143], "match": [122, 123, 128, 129, 133, 139, 140, 141, 142, 143, 147], "math": 53, "mathbb": 178, "mathemat": [154, 155, 156, 157], "matplotlib": 42, "matric": [106, 112, 115], "matrix": [3, 4, 5, 11, 29, 30, 32, 40, 45, 52, 53, 59, 60, 61, 62, 63, 64, 65, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 138, 145, 147, 148, 149, 150, 151, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176, 177, 178, 180, 186, 187, 189, 191, 192], "matur": 178, "max": [3, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 41, 53, 113, 115, 116, 117, 125, 129, 164, 169, 187], "max_": [129, 164, 178, 187], "max_average_drawdown": 129, "max_budget": [11, 122, 123, 128, 129], "max_cdar": [10, 129], "max_clust": 52, "max_cvar": [15, 129], "max_drawdown": [9, 10, 14, 15, 70, 121, 122, 125, 126, 129, 133, 136, 137, 138, 188, 189], "max_edar": 129, "max_evar": 129, "max_first_lower_partial_mo": 129, "max_gini_mean_differ": 129, "max_it": 113, "max_iter": 149, "max_long": [11, 122, 123, 128, 129], "max_max_drawdown": 129, "max_mean_absolute_devi": 129, "max_measur": [10, 135], "max_semi_devi": 129, "max_semi_vari": 129, "max_short": [11, 122, 123, 128, 129], "max_standard_devi": 129, "max_tracking_error": [2, 128, 129], "max_turnov": [128, 129], "max_ulcer_index": 129, "max_vari": [10, 14, 129], "max_weight": [11, 121, 122, 123, 125, 126, 128, 129, 133, 169, 174], "max_worst_r": 129, "maxim": [10, 14, 15, 23, 31, 32, 33, 36, 40, 45, 52, 128, 129, 131, 174, 187], "maximize_ratio": [3, 4, 5, 6, 7, 10, 32, 39, 129, 131, 174, 182, 187, 192], "maximize_return": [10, 14, 15, 129, 131], "maximize_util": [12, 13, 36, 129, 131], "maximum": [1, 3, 4, 5, 6, 10, 11, 12, 13, 16, 24, 36, 39, 40, 52, 53, 66, 67, 68, 69, 70, 74, 85, 94, 103, 105, 106, 107, 109, 112, 113, 114, 115, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 135, 136, 137, 138, 149, 166, 169, 175], "maximumdiversif": [22, 23, 36, 50, 187], "maxsiz": 135, "maxsplit": [53, 66, 67, 68, 69, 70, 119, 131], "mb": [16, 21, 24, 27, 34, 37, 43, 46, 49, 51, 175], "mean": [0, 2, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 36, 39, 40, 41, 45, 48, 53, 66, 67, 68, 69, 70, 73, 79, 81, 84, 87, 88, 89, 90, 97, 100, 101, 108, 110, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 147, 150, 151, 154, 155, 156, 157, 174, 175, 178, 182, 189], "mean_absolute_devi": [70, 121, 122, 125, 126, 129, 133, 136, 137, 138], "mean_absolute_deviation_ratio": [69, 136, 137, 138], "mean_risk": 190, "mean_test_scor": [14, 15, 40, 45, 113], "mean_train_scor": [14, 40], "mean_volum": 41, "meanrisk": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 36, 39, 40, 45, 48, 50, 128, 130, 134, 174, 182, 185, 186, 187, 188, 190, 192], "meantim": 178, "measur": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 61, 63, 97, 112, 122, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 174, 182, 186, 187, 188, 189], "measure_list": [31, 33, 36, 39, 135, 174, 188], "measures_df": [136, 137, 138], "measures_mean": [10, 14, 31, 33, 36, 39, 135], "measures_std": [10, 31, 33, 36, 39, 135], "mechan": [52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 185], "median": [53, 130, 134], "mega": 11, "mem": [16, 21, 24, 27, 34, 37, 43, 46, 49, 51, 175], "memori": [101, 115], "merg": [6, 31, 39], "meshgrid": 10, "meta": [45, 113, 114, 115, 116, 117, 187], "metadata": [41, 46, 52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 175], "metadata_rout": [113, 114, 115, 116, 117], "metadatarequest": [52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157], "metadatarout": 113, "method": [0, 5, 7, 8, 9, 11, 12, 13, 14, 18, 36, 45, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 166, 174, 177, 178, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192], "methodologi": 178, "metric": [14, 15, 29, 30, 31, 32, 36, 40, 45, 63, 123], "meucci": [118, 144, 148, 178], "mf": 13, "michaud": 178, "micropredict": 174, "mid": 183, "miko\u0142aj": [125, 126], "min": [8, 53, 125, 129, 133, 169, 187], "min_": [125, 129, 133, 169, 187], "min_acceptable_return": [79, 81, 87, 89, 90, 122, 129, 133, 136, 137, 138], "min_budget": [11, 122, 123, 128, 129], "min_measur": 135, "min_n_asset": 142, "min_return": [9, 128, 129, 133], "min_weight": [2, 11, 14, 15, 36, 121, 122, 123, 125, 126, 128, 129, 133, 169, 174, 182], "minim": [2, 9, 26, 29, 30, 31, 32, 52, 53, 102, 123, 125, 126, 129, 131, 169, 174, 187], "minimize_risk": [2, 8, 129, 131], "minimum": [1, 2, 9, 10, 11, 16, 29, 32, 40, 45, 50, 52, 79, 81, 87, 89, 90, 121, 122, 123, 125, 126, 128, 129, 130, 133, 135, 136, 137, 138, 142, 169, 175, 187], "minium": [121, 122, 123, 125, 126, 128, 129, 133], "minu": 189, "minut": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48], "mirror": [14, 182], "misc": 174, "miskolczi": 178, "miss": [113, 140, 144], "mitig": 187, "mix": [11, 13, 121, 122, 123, 125, 126, 128, 129, 133], "mmp": 174, "mmse": 116, "mn": 135, "mode": [14, 15, 40, 113], "model": [1, 14, 15, 16, 41, 42, 45, 50, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 147, 149, 151, 175, 176, 177, 180, 181, 182, 183, 185, 187, 188, 189, 190, 192], "model1": [26, 29, 30, 32, 36, 39, 187], "model2": [26, 29, 30, 32, 36, 39, 187], "model2__prior_estimator__covariance_estim": 36, "model3": [26, 29, 30, 32, 36], "model3__l1_coef": 36, "model4": [26, 29, 32, 36], "model4__risk_measur": 36, "model_bl": 4, "model_bl_factor": 6, "model_empir": [4, 5], "model_factor": 6, "model_factor_1": 5, "model_factor_2": 5, "model_factor_3": 5, "model_herc": 31, "model_hrp": 31, "model_l1": 14, "model_l2": 14, "model_mf": 13, "model_nam": 36, "model_nco": 33, "model_no_track": 2, "model_no_uncertainti": 15, "model_select": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 97, 130, 174, 182, 186, 187, 188, 189, 190], "model_spx": 2, "model_stack": 36, "model_tc": 12, "model_tc2": 12, "model_track": 2, "model_uncertainti": 15, "model_valid": 99, "modern": [112, 174], "modifi": [97, 135], "modul": [0, 53, 66, 67, 68, 69, 70, 119, 131, 159, 176, 182, 186, 187], "mohajerin": 26, "moment": [3, 5, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 45, 67, 69, 70, 79, 80, 81, 89, 90, 91, 92, 95, 121, 122, 125, 126, 129, 133, 136, 137, 138, 148, 174, 177, 178, 181, 182, 185, 187, 191, 192], "momentum": [6, 54], "month": [12, 14, 15, 31, 33, 36, 40, 41, 100], "montli": 100, "more": [4, 5, 7, 8, 11, 12, 13, 14, 19, 29, 30, 31, 32, 33, 36, 39, 40, 45, 50, 52, 53, 66, 67, 68, 69, 70, 76, 100, 101, 103, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 138, 139, 147, 148, 149, 150, 154, 155, 156, 157, 169, 174, 182, 187, 189, 191], "mosek": [26, 123, 178, 187], "most": [178, 182], "move": [50, 189], "movement": 112, "mpi": 42, "mrk": [41, 45, 48], "msft": [41, 45, 48, 174, 191], "mtum": [6, 54, 174, 187, 191], "mu": [3, 4, 5, 12, 13, 15, 108, 110, 111, 115, 116, 117, 118, 121, 122, 123, 125, 126, 128, 129, 131, 133, 151, 153, 155, 157, 158, 178, 181, 187, 191, 192], "mu_": [108, 110, 111, 118, 178, 181], "mu_estim": [3, 5, 147, 148, 174, 182, 187, 191], "mu_estimator_": 148, "mu_target_": 118, "mu_uncertainty_set_estim": [15, 122, 129, 174, 187, 192], "mu_uncertainty_set_estimator_": [122, 129], "mu_uncertainty_set_estimator__confidence_level": 15, "multi": [14, 15, 99, 112, 135, 137, 142, 188], "multi_output_regressor_": 150, "multicollinear": [40, 103, 105, 106, 107, 109, 112, 114, 115, 166], "multioutput": 150, "multioutputregressor": 150, "multiperiodportfolio": [0, 12, 13, 14, 15, 31, 33, 36, 39, 40, 101, 135, 174, 186, 188, 189], "multipl": [29, 31, 33, 36, 39, 99, 101, 122, 126, 130, 134, 186, 187, 189], "multipli": [54, 55, 56, 57, 58, 116, 179], "multivari": [26, 115, 123, 178, 187], "must": [11, 12, 13, 41, 45, 53, 66, 67, 68, 69, 70, 97, 98, 99, 100, 111, 114, 119, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 168, 178, 185], "mutli": 137, "mutual": [63, 187], "mutualinform": [180, 187], "mvo": 174, "my_param": 187, "my_portfolio": 189, "mycustomcovari": 187, "n": [2, 12, 13, 14, 31, 33, 36, 41, 42, 51, 53, 66, 67, 68, 69, 70, 102, 111, 119, 121, 122, 125, 126, 128, 129, 131, 133, 135, 138, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 178, 188], "n_": [76, 138], "n_alpha": 113, "n_asset": [12, 13, 39, 41, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 169, 188], "n_bin": [31, 36, 39, 63, 135, 170, 171], "n_bins_method": 63, "n_bootstrap_sampl": [154, 155], "n_clusters_": 52, "n_constraint": [122, 123, 128, 129, 133], "n_factor": [123, 133, 149, 150, 154, 155, 156, 157], "n_featur": [52, 99, 113, 115, 116, 117, 139, 140, 141, 142, 143], "n_features_in_": [52, 60, 61, 62, 63, 64, 65, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 125, 126, 128, 129, 130, 133, 134, 139, 140, 141, 142, 143, 147, 148, 149], "n_features_new": [139, 140, 141, 142, 143], "n_fold": [31, 33, 36, 39, 99, 100, 102, 174, 186], "n_group": [122, 123, 128, 129, 133, 147], "n_init": [32, 187], "n_iter": [14, 15, 182], "n_iter_": 113, "n_job": [5, 12, 13, 14, 15, 31, 32, 33, 36, 39, 40, 45, 101, 113, 130, 134, 150, 174, 182, 187], "n_market": 106, "n_observ": [31, 33, 36, 39, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 154, 155, 156, 157, 170, 171, 186], "n_optim": [122, 123, 124, 127, 128, 129, 132, 133], "n_original_featur": [139, 140, 141, 142, 143], "n_output": [139, 140, 141, 142, 143], "n_refin": 113, "n_sampl": [52, 99, 113, 115, 116, 117, 139, 140, 141, 142, 143], "n_selected_featur": [139, 140, 141, 142, 143], "n_split": [99, 174], "n_target": [100, 101, 127, 128, 129, 130, 134], "n_test_fold": [31, 33, 36, 39, 99, 102, 174, 186], "n_test_path": 99, "n_to_keep": 41, "n_view": 147, "naiv": [30, 45, 125, 139, 174], "name": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 42, 45, 48, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 179, 182, 187, 188, 189], "named_estim": 134, "named_estimators_": 134, "named_step": 39, "nan": [42, 55, 140, 144], "nan_threshold": 144, "nasdaq": 56, "nativ": 179, "natur": [53, 66, 67, 68, 69, 70, 119, 131], "nb": [14, 15, 36, 40], "nbinsmethod": 63, "nco": [32, 34, 130, 175, 187], "ndarrai": [41, 52, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ne": [129, 187], "nearest": [40, 53, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 149, 166], "necessari": [84, 136, 137, 138, 139], "necessarili": 14, "need": [0, 7, 8, 12, 13, 15, 45, 121, 122, 123, 125, 126, 128, 129, 130, 133, 138, 143, 166, 174, 178, 185], "neg": [11, 121, 122, 123, 125, 126, 128, 129, 139, 142], "neglig": [12, 189], "nest": [6, 28, 34, 50, 52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 175, 182], "nestedclustersoptim": [32, 33, 174, 176, 187], "net": [13, 113, 121, 122, 125, 126, 128, 129, 133], "network": [112, 125, 126], "neutral": [11, 122, 123, 128, 129], "never": [53, 66, 67, 68, 69, 70, 119, 131], "new": [29, 32, 53, 66, 67, 68, 69, 70, 113, 114, 119, 131, 135, 188, 190, 191], "new_portfolio": 12, "new_valu": 134, "new_x": 190, "newli": 53, "next": [42, 100], "nick": [103, 105, 106, 107, 109, 112, 114, 115, 149, 166], "nicolini": 174, "nielsen": [125, 126], "nn": 156, "nois": [5, 105, 138, 149, 191], "non": [12, 14, 18, 26, 33, 36, 45, 53, 61, 66, 67, 68, 69, 70, 82, 84, 101, 112, 114, 119, 122, 123, 128, 129, 131, 135, 136, 137, 138, 140, 142, 154, 155, 156, 157, 166, 172, 174, 186, 187], "non_denominated_sort": [135, 188], "none": [11, 12, 41, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 81, 87, 89, 90, 97, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 169, 187], "nonzero_asset": [14, 138], "nonzero_assets_index": 138, "nor": 178, "norm": [14, 113, 115, 116, 117, 122, 128, 129], "normal": [42, 45, 63, 84, 109, 114, 136, 137, 138, 178], "notat": [53, 66, 67, 68, 69, 70, 119, 131, 156], "note": [2, 5, 11, 12, 13, 14, 15, 40, 53, 59, 66, 67, 68, 69, 70, 97, 103, 104, 109, 113, 114, 115, 116, 117, 119, 122, 123, 128, 129, 130, 131, 133, 134, 143, 145, 146, 152, 153, 178, 189, 191], "notebook": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50], "notic": [12, 13, 29, 30], "notion": [12, 178], "now": [2, 10, 12, 14, 15, 36, 40, 42], "np": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 41, 42, 45, 52, 97, 99, 100, 115, 116, 117, 121, 122, 123, 125, 126, 128, 129, 133, 140, 186, 187, 189], "nugget": 178, "null": 164, "num": 10, "number": [5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 31, 33, 36, 39, 40, 42, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 88, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 154, 155, 159, 164, 166, 172, 173, 174, 182, 186, 187, 191], "numer": [53, 66, 67, 68, 69, 70, 113, 116, 119, 122, 123, 125, 128, 129, 131, 133, 166, 169, 174], "numpi": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 41, 42, 45, 97, 99, 100, 137, 138, 140, 177, 180, 181, 186, 187, 189, 190, 191, 192], "nutshel": [76, 138], "o": [41, 115, 116, 135], "oa": 177, "object": [0, 7, 8, 14, 18, 26, 29, 31, 33, 36, 39, 40, 52, 59, 60, 61, 62, 63, 64, 65, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 174, 186, 187], "objective_funct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 129, 174, 182, 187, 192], "objectivefunct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 129, 174, 182, 187, 192], "observ": [31, 33, 36, 39, 40, 45, 52, 54, 55, 56, 57, 58, 72, 73, 74, 88, 94, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 135, 136, 137, 138, 140, 143, 144, 147, 166, 186, 189], "obtain": [31, 33, 36, 39, 75, 78, 136, 137, 138, 148, 151], "occur": [40, 103, 105, 106, 107, 109, 112, 114, 115, 140, 166], "occurr": [53, 66, 67, 68, 69, 70, 119, 131, 135], "off": 42, "offer": 174, "offset": [42, 100, 143], "often": [40, 99, 103, 105, 106, 107, 109, 112, 114, 115, 166, 186], "okhrin": [118, 119], "ol": [45, 114], "old": [53, 66, 67, 68, 69, 70, 119, 131], "omega": 147, "omit": [7, 8, 116], "omxs30": 114, "onc": [113, 135], "one": [5, 11, 12, 13, 29, 30, 31, 32, 33, 36, 39, 45, 48, 52, 53, 66, 67, 68, 69, 70, 99, 100, 101, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 150, 151, 172, 173, 178, 182, 186, 187, 191], "ones": [12, 14, 15, 53, 66, 67, 68, 69, 70, 100, 119, 131], "onli": [7, 8, 11, 12, 13, 14, 26, 29, 31, 33, 36, 39, 42, 48, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 143, 147, 148, 149, 150, 154, 155, 156, 157, 178, 185, 187, 189, 190], "open": [26, 174], "oper": [53, 66, 67, 68, 69, 70, 116, 119, 131, 139, 140, 141, 142, 143, 154, 155, 156, 157], "oppos": [30, 125, 148], "optim": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 45, 48, 67, 101, 102, 112, 113, 115, 118, 138, 142, 144, 149, 151, 154, 155, 156, 157, 164, 170, 171, 175, 176, 183, 185, 186, 188, 189, 190, 191, 192], "optimal_folds_numb": [31, 33, 36, 39, 186], "optimization__risk_measur": 182, "optimum": 113, "option": [3, 4, 5, 42, 52, 53, 55, 56, 60, 63, 66, 67, 68, 69, 70, 79, 81, 87, 89, 90, 97, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 169, 178, 191], "oracl": [116, 174], "order": [12, 13, 29, 41, 52, 121, 122, 125, 126, 128, 129, 133, 135, 137, 138, 139, 164, 185], "ordin": [53, 66, 67, 68, 69, 70, 119, 131], "org": [122, 123, 125, 128, 129, 133, 169], "origin": [29, 32, 52, 53, 66, 67, 68, 69, 70, 113, 114, 115, 116, 117, 119, 126, 130, 131, 187], "oserror": [55, 56], "other": [7, 8, 11, 15, 19, 29, 31, 53, 66, 67, 68, 69, 70, 113, 114, 115, 116, 117, 119, 131, 135, 136, 137, 138, 139, 144, 147, 182], "other_portfolio": 189, "otherwis": [52, 53, 66, 67, 68, 69, 70, 82, 83, 97, 100, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 128, 129, 131, 133, 135, 136, 137, 138, 141, 144, 166, 168], "otim": 156, "our": [4, 6, 7, 8, 12, 13, 36, 41, 42, 45, 174, 186], "out": [14, 15, 31, 32, 33, 36, 39, 40, 41, 42, 45, 60, 62, 64, 65, 113, 122, 126, 128, 129, 130, 134, 135, 174, 187], "outcom": 97, "outer": [32, 36, 130, 134, 144, 187], "outer_estim": [32, 33, 130, 174, 187], "outer_estimator_": 130, "outlin": [29, 30, 32, 52], "outperform": [4, 6, 7, 8, 12, 13, 31, 33, 36, 60, 62, 64, 65, 126, 130, 147, 174], "output": [36, 101, 130, 134, 139, 140, 141, 142, 143, 186, 187, 188], "over": [15, 23, 26, 42, 113, 123, 128, 135, 136, 137, 138, 144, 172, 173, 178, 182, 187], "overal": 113, "overcom": [5, 149, 191], "overfit": [14, 15, 130, 134, 174, 183], "overhead": 150, "overlap": [45, 53, 66, 67, 68, 69, 70, 99, 114, 119, 131, 186], "overwrit": [122, 123, 129, 133], "overwrite_expected_return": [122, 123, 129, 133], "owa": 88, "own": [178, 182, 186], "oxford": 178, "p": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 23, 26, 29, 30, 32, 33, 41, 45, 48, 57, 58, 99, 112, 114, 116, 179], "packag": [0, 183], "pad": [53, 66, 67, 68, 69, 70, 119, 131], "page": 115, "pair": [11, 12, 13, 101, 114, 121, 122, 123, 125, 126, 128, 129, 133, 138, 139, 142, 147, 186], "panda": [39, 40, 41, 42, 45, 100, 135, 136, 137, 138, 139, 140, 141, 142, 143, 174, 177, 180, 181, 187, 189, 190, 191, 192], "panna": 178, "paper": [29, 32, 112, 125, 126, 130, 187], "parallel": [5, 12, 101, 113, 130, 134, 150, 187], "parallel_backend": [101, 113, 130, 134, 150], "param": [41, 45, 52, 59, 60, 61, 62, 63, 64, 65, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157], "param_dist": 182, "param_distribut": [14, 15, 174, 182], "param_grid": [14, 15, 31, 33, 36, 40, 42, 45, 174, 182], "param_l2_coef": 14, "param_mu_uncertainty_set_estimator__confidence_level": 15, "param_pre_selection__k": 40, "param_prior_estimator__covariance_estimator__prior_covariance_estim": 45, "param_prior_estimator__covariance_estimator__window_s": 45, "paramet": [5, 7, 8, 9, 11, 12, 13, 26, 41, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 183, 186, 187, 188, 191], "parameter_nam": 134, "parametr": 178, "pareto": [9, 135, 142], "pariti": [17, 21, 28, 30, 32, 34, 50, 125, 126, 133, 175], "parolya": [118, 119], "part": [53, 66, 67, 68, 69, 70, 119, 131, 182], "partial": [7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 36, 40, 69, 70, 79, 81, 89, 90, 100, 122, 129, 133, 136, 137, 138, 174, 187], "particular": 115, "partit": [53, 66, 67, 68, 69, 70, 119, 131], "pass": [7, 8, 13, 42, 45, 52, 97, 101, 105, 106, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 147, 148, 149, 150, 154, 155, 156, 157, 182, 185], "past": 100, "pastur": 105, "path": [31, 33, 36, 39, 41, 98, 99, 101, 102, 130, 134, 186, 187], "pattern": [11, 122, 123, 128, 129, 133, 147], "patton": [154, 155], "paulsen": 138, "pct_to_keep": 41, "pd": [40, 42, 45, 100, 103, 105, 106, 107, 109, 112, 114, 115, 140, 143, 189], "pearson": [29, 30, 32, 64, 174], "pearsondist": [31, 33, 121, 125, 126, 130, 176, 180, 187], "penal": [14, 113, 122, 128, 129], "penalti": 113, "pep": [41, 45, 48], "per": [13, 14, 15, 36, 40, 41, 45, 130, 135, 137, 138, 150, 174], "percentag": 144, "perfectli": 189, "perfmeasur": [9, 10, 14, 15, 48, 97, 130, 134, 136, 137, 138, 142, 188, 189], "perform": [14, 15, 31, 33, 36, 38, 41, 43, 50, 52, 68, 99, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 144, 150, 151, 164, 168, 169, 174, 175, 178, 182, 183, 186, 189, 190], "period": [14, 15, 41, 42, 100, 121, 122, 125, 126, 128, 129, 133, 135, 137, 138, 140, 143, 144, 178], "permit": 123, "pfe": [41, 45, 48], "pg": [41, 45, 48], "philipp": [118, 125, 126], "pick": 147, "picking_matrix_": 147, "piecewis": [26, 123, 187], "pin": 183, "pip": [174, 184], "pipe": 190, "pipelin": [11, 38, 50, 52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 182, 190], "pipeplin": [39, 40], "pitfal": [144, 148], "place": 135, "plan": 183, "pleas": [0, 52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157], "plot": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 45, 48, 52, 99, 135, 136, 137, 138, 189], "plot_10_tracking_error": [2, 16, 175], "plot_11_empirical_prior": [3, 16, 175], "plot_12_black_and_litterman": [4, 16, 175], "plot_13_factor_model": [5, 16, 175], "plot_14_black_litterman_factor_model": [6, 16, 175], "plot_1_distributionally_robust_cvar": [26, 27, 175], "plot_1_drop_correl": [39, 43, 175], "plot_1_hrp_cvar": [29, 34, 175], "plot_1_implied_volatil": [45, 46, 175], "plot_1_investment_horizon": [48, 49, 175], "plot_1_maximum_divesif": [23, 24, 175], "plot_1_maximum_sharpe_ratio": [7, 16, 175], "plot_1_risk_parity_vari": [18, 21, 175], "plot_1_stack": [36, 37, 175], "plot_2_herc_cdar": [30, 34, 175], "plot_2_minimum_cvar": [8, 16, 175], "plot_2_risk_budgeting_cvar": [19, 21, 175], "plot_2_select_best_perform": [40, 43, 175], "plot_3_custom_pre_selection_volum": [41, 43, 175], "plot_3_efficient_fronti": [9, 16, 175], "plot_3_hrp_vs_herc": [31, 34, 175], "plot_3_risk_parity_ledoit_wolf": [20, 21, 175], "plot_4_incomplete_dataset": [42, 43, 175], "plot_4_mean_variance_cdar": [10, 16, 175], "plot_4_nco": [32, 34, 175], "plot_5_nco_grid_search": [33, 34, 175], "plot_5_weight_constraint": [11, 16, 175], "plot_6_transaction_cost": [12, 16, 175], "plot_7_management_fe": [13, 16, 175], "plot_8_regular": [14, 16, 175], "plot_9_uncertainty_set": [15, 16, 175], "plot_composit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 40, 41, 45, 48, 135, 136, 137, 138, 188, 189], "plot_contribut": [18, 19, 29, 30, 135, 136, 137, 138, 189], "plot_cumulative_return": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 45, 135, 136, 137, 138, 174, 188, 189], "plot_dendrogram": [29, 30, 32, 52], "plot_distribut": [31, 33, 36, 39, 135, 174, 188], "plot_measur": [9, 10, 14, 15, 48, 135, 188], "plot_return": [136, 137, 138], "plot_rolling_measur": [135, 136, 137, 138, 189], "plot_train_test_fold": 99, "plot_train_test_index": 99, "plotli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 45, 48, 135, 136, 137, 138], "plt": 42, "pmb": 178, "png": 42, "point": [40, 53, 66, 67, 68, 69, 70, 103, 105, 106, 107, 109, 112, 113, 114, 115, 119, 131, 135, 166], "polakow": 112, "polar": [139, 140, 141, 142, 143], "politi": [154, 155], "poor": 174, "poorli": [14, 15], "pop": 135, "popul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 48, 101, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 174, 186], "population_test": [9, 10, 14, 29, 30, 32], "population_train": [2, 9, 10, 14, 15], "portfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 60, 62, 64, 65, 76, 97, 100, 101, 112, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 142, 144, 148, 149, 154, 155, 156, 157, 174, 176, 182, 183, 186, 187, 188, 190, 191], "portfolio optim": 174, "portfolio_param": [2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 48, 101, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "portfolio_test": 187, "portfolio_train": 187, "portion": 106, "pose": 178, "posit": [12, 36, 40, 53, 66, 67, 68, 69, 70, 103, 105, 106, 107, 109, 112, 114, 115, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 149, 166, 168], "possibl": [6, 19, 20, 23, 45, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 182, 187, 191], "posterior": [4, 147, 191], "potenti": [42, 142], "power": [60, 62, 64, 65], "pq": [53, 66, 67, 68, 69, 70, 119, 131], "prabhala": 114, "practic": [178, 182, 189], "prado": [29, 32, 60, 62, 64, 65, 99, 105, 106, 126, 130, 187], "pre": [11, 39, 40, 43, 142, 144, 175], "pre_dispatch": 101, "pre_select": [39, 40, 41, 42, 174, 182, 190], "pre_selection__k": 40, "preced": [14, 15, 31, 41], "precis": [113, 115, 116, 117], "precision_": [113, 115, 116, 117], "pred": [31, 36, 40, 41, 42, 97, 182, 186], "pred1": [12, 13], "pred2": [12, 13], "pred3": 12, "pred_1": 39, "pred_2": 39, "pred_bench": [3, 7, 8, 14, 33, 36, 40, 45], "pred_bl": 4, "pred_empir": 4, "pred_gs_model": 45, "pred_herc": 31, "pred_hrp": 31, "pred_model": [3, 7, 8, 40, 45], "pred_nco": 33, "pred_no_reg": 14, "pred_no_uncertainti": 15, "pred_realised_vols_": 114, "pred_reg": 14, "pred_stack": 36, "pred_uncertainti": 15, "pred_uncertainty_r": 15, "predict": [0, 10, 11, 12, 13, 15, 42, 45, 97, 101, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 150, 182, 187, 188, 189, 190], "prefer": [42, 113, 123, 187], "prefit": 134, "prefix": [53, 66, 67, 68, 69, 70, 119, 131], "premium": 114, "prepar": [7, 8, 48, 144, 148], "preprocess": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 174, 176, 177, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192], "preselect": 142, "present": [33, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 147, 148], "press": [126, 130, 178], "prev": 189, "previou": [6, 12, 31, 33, 36, 40, 45, 100, 121, 122, 125, 126, 128, 129, 133, 138, 144, 189], "previous_weight": [12, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 138], "price": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 97, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 141, 142, 144, 147, 148, 149, 150, 154, 155, 156, 157, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192], "prices_to_return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 174, 176, 177, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192], "principl": 182, "print": [2, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 42, 45, 99, 100, 113, 174, 176, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192], "printabl": [53, 66, 67, 68, 69, 70, 119, 131], "prior": [1, 4, 5, 6, 16, 20, 36, 45, 48, 50, 106, 114, 121, 122, 123, 125, 126, 127, 128, 129, 133, 154, 155, 156, 157, 174, 175, 178, 182, 185], "prior_covariance_estim": [45, 114], "prior_covariance_estimator_": 114, "prior_estim": [3, 4, 5, 6, 20, 29, 36, 45, 48, 121, 122, 123, 125, 126, 127, 128, 129, 133, 147, 152, 153, 154, 155, 156, 157, 174, 182, 185, 187], "prior_estimator_": [5, 121, 122, 123, 127, 128, 129, 133, 147, 154, 155, 156, 157], "prior_estimator__covariance_estimator__prior_covariance_estim": 45, "prior_estimator__covariance_estimator__window_s": 45, "prior_estimator__mu_estimator__alpha": [174, 182], "prior_model": 5, "prior_model_": [5, 6, 147, 148, 149, 191], "priormodel": [3, 4, 5, 29, 121, 122, 123, 125, 126, 127, 128, 129, 133, 147, 148, 149, 187, 191], "probabl": [26, 123, 187], "problem": [0, 5, 12, 13, 26, 40, 102, 103, 105, 106, 107, 109, 112, 114, 115, 121, 122, 123, 125, 126, 128, 129, 133, 138, 149, 166, 187, 189, 191], "problem_": [122, 123, 128, 129, 133], "problem_values_": [122, 123, 128, 129, 133], "procedur": [45, 48, 178], "process": [11, 99, 101, 116, 142, 186], "processor": [101, 113, 130, 134, 150], "produc": [112, 172, 173], "product": [0, 32, 36, 130, 134, 138, 156, 178, 182, 187, 189], "profession": [144, 148, 178], "program": [26, 123, 154, 155, 156, 157, 187], "project": [148, 178], "properli": 178, "properti": [7, 8, 29, 30, 32, 45, 99, 114, 125, 126, 134, 136, 137, 138, 154, 155, 156, 157, 178, 182, 187], "proport": [112, 147], "proportion": 125, "propos": 116, "prove": [11, 26, 118, 123, 187], "provid": [5, 9, 11, 12, 13, 99, 100, 111, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 144, 147, 148, 149, 151, 178, 182, 191], "psd": 112, "psd_variant": 112, "pseudo": [113, 115, 116, 117, 154, 155], "ptf": [14, 31, 33, 36, 138], "ptf0": 9, "ptf1": [9, 29, 30, 39, 189], "ptf10": 9, "ptf11": 9, "ptf12": 9, "ptf13": 9, "ptf14": 9, "ptf15": 9, "ptf16": 9, "ptf17": 9, "ptf18": 9, "ptf19": 9, "ptf2": [9, 30, 39, 189], "ptf20": 9, "ptf21": 9, "ptf22": 9, "ptf23": 9, "ptf24": 9, "ptf25": 9, "ptf26": 9, "ptf27": 9, "ptf28": 9, "ptf29": 9, "ptf3": [9, 189], "ptf4": 9, "ptf5": 9, "ptf6": 9, "ptf7": 9, "ptf8": 9, "ptf9": 9, "ptf_bench_test": [18, 19, 20, 23, 26], "ptf_bench_train": [18, 19, 23], "ptf_bl_factor_test": 6, "ptf_empirical_test": 5, "ptf_factor_1_test": 5, "ptf_factor_2_test": 5, "ptf_factor_3_test": 5, "ptf_factor_test": 6, "ptf_model1_test": 26, "ptf_model2_test": 26, "ptf_model3_test": 26, "ptf_model4_test": 26, "ptf_model_test": [18, 19, 20, 23], "ptf_model_train": [18, 19, 23], "ptf_no_tracking_test": 2, "ptf_no_tracking_train": 2, "ptf_tracking_test": 2, "ptf_tracking_train": 2, "public": [54, 55, 56, 57, 58, 174, 179], "publish": 112, "pujara": 112, "punctuat": [53, 66, 67, 68, 69, 70, 119, 131], "pure": 115, "purg": [28, 34, 50, 99, 175], "purged_s": [99, 100], "purpos": [5, 42, 149, 187, 191], "put": 147, "px": 45, "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 139, 140, 141, 142, 143, 175], "pypi": [174, 184], "pyplot": 42, "pyportfolioopt": 174, "python": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50, 53, 66, 67, 68, 69, 70, 119, 131, 174], "q": [100, 135, 142, 186, 188], "qu": 142, "quad": [125, 129, 169, 187], "qual": [6, 54, 174, 187, 191], "qualiti": [6, 54], "qualnam": 159, "quant": 178, "quantifi": [76, 138], "quantil": [130, 134, 135, 186, 187, 188], "quantile_measur": [130, 134, 187], "quantit": [105, 106, 126, 130, 174], "quarter": 100, "quarterli": 100, "quick": 45, "quickli": 174, "r": [52, 53, 66, 67, 68, 69, 70, 119, 131, 138, 178, 189], "r2": 45, "r2_scores_": 45, "r_": [129, 131, 157, 187], "r_p": 189, "radiu": [26, 123], "raffinot": [30, 125, 187], "rais": [41, 53, 55, 56, 66, 67, 68, 69, 70, 113, 114, 115, 116, 117, 119, 122, 123, 128, 129, 131, 133, 135, 136, 137, 138, 160, 161, 162], "raise_on_failur": [10, 122, 123, 128, 129, 133], "ran": 14, "rand": 41, "rand_weight": 188, "randint": 182, "randn": [99, 100], "random": [14, 15, 41, 42, 63, 99, 100, 105, 139, 154, 155, 156, 172, 173, 185, 187, 188], "randomized_search": [14, 15, 174], "randomizedsearchcv": [14, 15, 174, 182], "randomli": 172, "rang": [10, 40, 42, 53, 66, 67, 68, 69, 70, 113, 115, 116, 117, 119, 131, 135, 182, 188], "rank": 142, "rate": [122, 123, 128, 129, 133, 136, 137, 138, 147], "rather": [139, 140, 141, 142, 143], "ratio": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 33, 36, 39, 40, 42, 45, 50, 69, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 175, 182, 187], "ratiomeasur": [9, 10, 14, 15, 31, 33, 36, 39, 40, 45, 130, 134, 135, 136, 137, 138, 141, 174, 182, 186, 188, 189], "ration": [7, 189], "rationmeasur": 97, "ravel": 10, "raw": 0, "rd_search": 182, "re": [6, 12, 13, 45, 113, 115, 116, 117, 183], "reach": 142, "read": [113, 115, 116, 117], "readabl": [11, 12, 13, 45], "real": 168, "realis": [45, 84, 114], "realiz": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 69, 70, 96, 114, 129, 133, 136, 137, 138, 174, 187], "rearrang": [29, 126, 187], "reason": [29, 125, 144], "rebal": [12, 13, 41, 45], "rebalanc": [12, 41, 42, 100, 178, 189], "rebas": [135, 136, 137, 138], "receiv": 174, "recombin": [33, 36, 99], "recombined_path": 99, "recommend": [50, 178, 182], "reconstruct": [45, 99, 102, 114], "recurs": [29, 30, 125, 126, 187], "reduc": [5, 14, 15, 42, 101, 102, 105, 118, 122, 128, 129, 133, 139, 140, 141, 142, 143, 149, 174, 183, 191, 192], "reduce_test": 100, "reduct": 14, "ref1": [11, 122, 123, 128, 129, 133], "ref2": [11, 122, 123, 128, 129, 133], "ref3": [11, 122, 123, 128, 129, 133], "ref_model": 14, "refer": [11, 14, 45, 52, 60, 61, 62, 64, 65, 76, 99, 105, 106, 112, 114, 115, 116, 118, 123, 125, 126, 130, 138, 142, 144, 147, 148, 154, 155, 156, 157, 164, 166, 170, 171, 174, 178, 185, 187], "referenc": [122, 123, 128, 129, 133, 147], "refin": 113, "reform": 178, "reformul": [26, 123, 187], "regard": 189, "regardless": 29, "region": [15, 122, 129, 154, 155, 156, 157, 158], "regist": [53, 66, 67, 68, 69, 70, 119, 131], "register_error": [53, 66, 67, 68, 69, 70, 119, 131], "regress": [45, 114, 150], "regressor": 150, "regular": [1, 15, 16, 36, 50, 53, 66, 67, 68, 69, 70, 117, 119, 122, 123, 128, 129, 131, 174, 175, 187], "regularis": [115, 116], "rel": [4, 6, 29, 75, 78, 102, 125, 136, 137, 138, 147, 169], "relat": [63, 106, 114, 189], "releas": [122, 123, 128, 129, 133, 178, 183], "relev": [113, 114, 115, 116, 117], "reli": 30, "remain": [19, 29, 30, 32, 52, 53, 66, 67, 68, 69, 70, 119, 125, 131, 139, 140, 141, 142, 143, 187], "remov": [39, 53, 66, 67, 68, 69, 70, 99, 106, 119, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 186], "removeprefix": [53, 66, 67, 68, 69, 70, 119, 131], "removesuffix": [53, 66, 67, 68, 69, 70, 119, 131], "renam": 45, "render": [7, 8], "reorder": [29, 30, 32, 52], "replac": [32, 40, 42, 53, 66, 67, 68, 69, 70, 103, 105, 106, 107, 109, 112, 114, 115, 119, 122, 123, 128, 129, 131, 133, 164, 166], "replic": 189, "repo": 179, "repr": [53, 66, 67, 68, 69, 70, 119, 131], "repres": [3, 4, 5, 6, 15, 29, 30, 31, 32, 33, 36, 39, 40, 52, 54, 73, 75, 78, 100, 113, 115, 116, 117, 136, 137, 138, 156, 186, 187, 191], "request": [113, 114, 115, 116, 117, 189], "requir": 2, "rerun": [187, 191], "rescal": [82, 113, 115, 116, 117, 127, 135, 136, 137, 138], "research": [54, 55, 56, 57, 58, 112, 154, 155, 156, 157, 179], "reserv": [53, 66, 67, 68, 69, 70, 119, 131], "reset_index": 45, "residu": 149, "residual_vari": 149, "resourc": 174, "respect": [11, 53, 113, 115, 116, 117], "rest": [53, 66, 67, 68, 69, 70, 119, 131, 185], "result": [12, 13, 53, 66, 67, 68, 69, 70, 101, 113, 115, 116, 117, 119, 131, 150, 178], "retain": [41, 113, 114, 115, 116, 117, 139, 140, 141, 142, 143, 182], "retent": [139, 140, 141, 142, 143], "retriev": [12, 122, 123, 128, 129, 133], "return": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 26, 29, 31, 33, 36, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 177, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192], "return_train_scor": [14, 40, 45], "returns_df": [42, 136, 137, 138, 189], "reveiz": 178, "revers": [135, 139, 140, 141, 142, 143], "review": [125, 126], "rfind": [53, 66, 67, 68, 69, 70, 119, 131], "rgb": [14, 15, 40], "rgba": [14, 40], "richard": 178, "ridgecv": 5, "right": [42, 53, 66, 67, 68, 69, 70, 119, 122, 123, 128, 129, 131, 133, 136, 137, 138, 154, 155, 156, 157, 158, 192], "right_inequ": [11, 122, 123, 128, 129, 133], "rindex": [53, 66, 67, 68, 69, 70, 119, 131], "risk": [2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 21, 23, 28, 32, 34, 36, 40, 52, 67, 69, 70, 72, 73, 74, 75, 77, 78, 94, 111, 114, 118, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 142, 144, 147, 148, 149, 175, 178, 182, 183, 191], "risk_": [129, 133, 187], "risk_avers": [111, 123, 129, 187], "risk_budget": [19, 133], "risk_free_r": [121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 138, 147], "risk_measur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 48, 121, 122, 125, 126, 129, 133, 174, 182, 187, 188], "riskbudget": [17, 18, 19, 20, 32, 33, 50, 174, 187], "riskfolio": 174, "riskmeasur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 48, 97, 121, 122, 125, 126, 129, 130, 133, 134, 136, 137, 138, 142, 174, 182, 187, 188, 189], "rjust": [53, 66, 67, 68, 69, 70, 119, 131], "rmse": [2, 128, 129], "robert": [147, 178], "robust": [5, 14, 15, 27, 31, 33, 36, 39, 112, 122, 123, 126, 128, 129, 130, 149, 154, 155, 156, 157, 174, 175, 191, 192], "rockafellar": [26, 123], "roll": [14, 15, 31, 33, 36, 39, 40, 135, 136, 137, 138], "rolling_measur": [135, 136, 137, 138, 189], "root": [2, 89, 91, 128, 129, 136, 137, 138, 178], "round": [41, 135, 136, 137, 138], "rout": [41, 46, 52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 175], "row": [7, 8, 41, 144], "rpartit": [53, 66, 67, 68, 69, 70, 119, 131], "rrc": [41, 45, 48, 174], "rsome": 174, "rsplit": [53, 66, 67, 68, 69, 70, 119, 131], "rstrip": [53, 66, 67, 68, 69, 70, 119, 131], "rule": [42, 136, 137, 138, 170, 171, 178], "run": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 101, 113, 130, 134, 139, 140, 141, 142, 143, 150, 178, 182, 187], "rust": [122, 123, 125, 128, 129, 133, 169], "rv": [45, 114, 182], "rv_": [45, 114], "rvert": 102, "rvert_": [15, 122, 129], "s_": [15, 122, 129, 144, 178], "same": [7, 8, 11, 12, 13, 18, 31, 33, 36, 40, 41, 52, 53, 66, 67, 68, 69, 70, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 134, 142, 147, 174, 177, 180, 181, 182, 187, 190, 191, 192], "sampl": [14, 15, 26, 31, 32, 33, 36, 39, 40, 41, 42, 45, 60, 62, 64, 65, 99, 100, 113, 114, 115, 116, 117, 118, 122, 123, 126, 128, 129, 130, 134, 139, 140, 141, 142, 143, 154, 155, 157, 164, 174, 182, 187], "sara": 114, "sargen": 112, "satisfi": 10, "save": [5, 45, 122, 123, 128, 129, 133, 191], "save_problem": [122, 123, 128, 129, 133], "sc": [122, 123, 125, 128, 129, 133, 169], "scalar": 97, "scale": [15, 113, 115, 116, 117, 122, 123, 128, 129, 133, 135, 136, 137, 138, 142, 178], "scale_constraint": [122, 123, 128, 129, 133], "scale_object": [122, 123, 128, 129, 133], "scatter": [14, 15, 40, 135], "scene_camera": 10, "scheme": [53, 66, 67, 68, 69, 70, 119, 131, 182], "sch\u00f6ttle": [154, 155, 156, 157], "scienc": 112, "scientif": 174, "scikit": [5, 7, 8, 97, 113, 114, 115, 116, 117, 174, 177, 180, 181, 182, 183, 185, 186, 187, 190, 191, 192], "scikit-learn": 174, "scipi": [14, 15, 52, 53, 174, 182], "score": [14, 15, 31, 36, 40, 42, 45, 97, 113, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 182], "score_func": 97, "scorer": [40, 97], "script": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 185], "search": [14, 15, 33, 45, 53, 66, 67, 68, 69, 70, 102, 113, 119, 131], "second": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 70, 84, 89, 90, 91, 95, 100, 129, 136, 137, 138, 139, 182], "secondli": 178, "section": [14, 15, 45, 52, 53], "sector": 11, "secur": [5, 54, 55, 56, 57, 58, 106, 144, 149, 178, 179, 191], "see": [4, 7, 8, 14, 15, 26, 29, 30, 31, 40, 42, 45, 48, 52, 53, 100, 103, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 139, 140, 141, 142, 143, 147, 148, 149, 150, 154, 155, 156, 157, 174, 182], "seed": [154, 155], "seen": [52, 60, 61, 62, 63, 64, 65, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 125, 126, 128, 129, 130, 133, 134, 139, 140, 141, 142, 143, 147, 148, 149, 178], "select": [11, 12, 13, 14, 15, 31, 39, 43, 113, 130, 134, 139, 140, 141, 142, 143, 144, 154, 155, 175, 183, 187, 189], "select_complete_asset": 42, "select_non_expiring_asset": 42, "select_non_expiring_assets__expiration_lookahead": 42, "selectcomplet": 42, "selected_idx": 41, "selectkextrem": [40, 174, 182, 190], "selectnondomin": 190, "selectnonexpir": 42, "selector": [140, 143], "selectormixin": 41, "self": [41, 52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 187], "sell": [11, 12, 121, 122, 123, 125, 126, 128, 129, 133], "semi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 69, 70, 89, 90, 100, 112, 122, 129, 133, 136, 137, 138, 149, 174, 182, 187], "semi_devi": [70, 122, 129, 133, 136, 137, 138, 187], "semi_vari": [70, 121, 122, 125, 126, 129, 133, 136, 137, 138, 174, 182, 187], "semimonthend": 100, "sens": [113, 115, 116, 117], "sensit": 174, "sep": [53, 66, 67, 68, 69, 70, 119, 131], "separ": [5, 6, 53, 66, 67, 68, 69, 70, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 148, 149, 150, 191], "sequenti": 139, "seri": [45, 83, 99, 100, 112, 114, 136, 137, 138, 185, 186], "serial": [99, 186], "seriat": [29, 126, 187], "set": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 50, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 83, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 166, 169, 172, 175, 178, 179, 182, 186, 187, 188, 189], "set_config": [39, 40, 41, 42, 45, 105, 106, 111, 113, 114, 115, 116, 117, 118, 123, 125, 127, 128, 130, 134, 143, 147, 148, 149, 150, 154, 155, 156, 157, 174, 185, 190], "set_fit_request": [41, 45, 114, 185], "set_output": [139, 140, 141, 142, 143], "set_param": [2, 12, 13, 14, 15, 31, 52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157], "set_portfolio_param": [9, 10, 135, 188], "set_score_request": [113, 115, 116, 117], "settl": 42, "shallow": 135, "shape": [6, 9, 10, 12, 13, 14, 15, 29, 30, 31, 32, 33, 36, 39, 41, 45, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 186, 187, 188, 190, 192], "share": 122, "sharp": [1, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 32, 33, 36, 39, 40, 42, 45, 50, 69, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 175, 182, 187, 189], "sharpe_ratio": [39, 69, 130, 134, 135, 136, 137, 138, 141, 174, 186, 187, 188, 189], "short": [2, 14, 15, 36, 121, 122, 123, 125, 126, 128, 129, 133, 178], "shortcom": [139, 174], "shorten": 42, "shortfal": [7, 8, 70, 73, 129, 136, 137, 138], "should": [12, 33, 59, 103, 104, 113, 114, 115, 116, 117, 144, 145, 146, 152, 153, 178, 182, 189], "show": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 45, 48, 135, 185], "show_front": [135, 188], "showlegend": [14, 40], "shown": [45, 186], "shrink": 118, "shrinkag": [3, 5, 13, 17, 21, 50, 115, 116, 117, 118, 119, 121, 122, 125, 126, 128, 129, 133, 174, 175, 191], "shrinkage_": [115, 116], "shrunk": [115, 116, 117], "shrunkcovari": [20, 177], "shrunkmu": [3, 5, 119, 174, 181, 191], "shrunkmumethod": 118, "shuffl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 100, 174, 182, 186, 187, 188, 190], "sigma": [45, 111, 114, 154, 156, 157, 158, 178, 192], "sigma_": 178, "sign": 97, "signal": [105, 116], "signatur": [97, 182], "significantli": [14, 166], "sim": [156, 157], "similar": [178, 182], "simpl": [6, 52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 178, 187], "simpleimput": 42, "simplex": [172, 173], "simpli": [3, 12, 139], "simplic": 41, "simplifi": [48, 178], "simul": [31, 33, 36, 40], "simultan": 112, "sinc": [12, 29, 41, 99, 125, 174, 186], "singl": [2, 29, 30, 31, 32, 33, 42, 52, 53, 99, 101, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 142, 144, 178, 186, 187], "site": [55, 56], "six": 14, "size": [6, 15, 31, 33, 36, 39, 45, 53, 54, 66, 67, 68, 69, 70, 102, 107, 108, 109, 110, 112, 114, 115, 119, 122, 123, 128, 129, 131, 133, 135, 136, 137, 138, 154, 155, 156, 157, 158, 164, 170, 171, 174, 186, 187, 191, 192], "skb": 41, "skew": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 45, 67, 114, 136, 137, 138, 174, 178], "skf": 41, "skfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192], "skfolio_data": [55, 56, 179], "skip": [102, 134], "sklean": 191, "sklearn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 97, 99, 100, 105, 106, 111, 113, 114, 115, 116, 117, 118, 123, 125, 127, 128, 130, 134, 143, 147, 148, 149, 150, 154, 155, 156, 157, 174, 176, 182, 185, 186, 187, 188, 189, 190], "skv": 41, "slice": [53, 66, 67, 68, 69, 70, 119, 131, 135, 136, 137, 138], "slightli": [31, 33], "slot": [136, 137, 138, 189], "slow": [103, 105, 106, 107, 109, 112, 114, 115, 166], "slower": [149, 150], "small": [5, 116, 118, 149, 191], "smaller": [40, 103, 105, 106, 107, 109, 112, 114, 115, 166], "smooth": [107, 108], "snippet": 174, "so": [12, 13, 26, 52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 174, 189], "social": 112, "solut": [125, 156], "solv": [133, 187, 192], "solver": [26, 113, 122, 123, 125, 128, 129, 133, 169, 187], "solver_param": [122, 123, 125, 128, 129, 133, 169], "some": [60, 62, 64, 65, 100, 106, 113, 114, 115, 116, 117, 133, 151, 185, 188], "sometim": 178, "sort": [135, 137, 138, 139, 141, 142], "sort_idx": [14, 15], "sort_measur": 135, "sortino": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 69, 136, 137, 138, 182], "sortino_ratio": [69, 136, 137, 138, 174, 182, 188, 189], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "sp500": 58, "space": [14, 26, 53, 66, 67, 68, 69, 70, 102, 119, 123, 131, 135, 136, 137, 138, 187], "span": [29, 41], "spars": 113, "spawn": 101, "spd": 166, "spearman": [65, 174], "spearmandist": [180, 187], "special": 128, "specif": [0, 5, 53, 66, 67, 68, 69, 70, 100, 106, 119, 122, 123, 128, 129, 131, 133, 134, 149, 182, 191], "specifi": [11, 14, 15, 19, 41, 42, 45, 53, 55, 56, 59, 63, 66, 67, 68, 69, 70, 73, 100, 101, 103, 104, 113, 115, 116, 117, 119, 130, 131, 134, 136, 137, 138, 143, 145, 146, 147, 152, 153], "spectral": [113, 115, 116, 117], "speed": 26, "sphinx": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [139, 140, 141, 142, 143], "split": [7, 8, 12, 29, 42, 45, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 98, 99, 100, 101, 113, 115, 119, 125, 126, 130, 131, 134, 179, 186, 187], "splitlin": [53, 66, 67, 68, 69, 70, 119, 131], "splitter": [101, 113], "spx": [2, 3, 4, 5, 6, 29, 121, 122, 123, 125, 126, 128, 129, 133, 147, 179], "spx_price": 2, "spx_test": 2, "spx_train": 2, "sqrt": [2, 53, 60, 62, 64, 65, 113, 114, 115, 116, 117, 136, 137, 138, 164], "squar": [2, 29, 30, 32, 52, 60, 62, 64, 65, 89, 91, 113, 115, 116, 117, 128, 129, 136, 137, 138, 154, 155, 156, 157, 161, 178], "sric": 138, "ssrn": [126, 130], "stabil": [14, 31, 122, 123, 125, 128, 129, 133, 164, 169], "stabl": [29, 30, 31, 32, 113, 125, 126, 135, 183, 187], "stack": [35, 37, 50, 134, 174, 175], "stackingoptim": [36, 187], "stake": 36, "standard": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 45, 54, 55, 56, 57, 58, 60, 62, 64, 65, 69, 70, 89, 91, 113, 125, 129, 135, 136, 137, 138, 165, 166, 167, 179, 187], "standard_devi": [70, 122, 129, 133, 136, 137, 138], "starer": 112, "start": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 42, 45, 48, 50, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 82, 99, 100, 119, 126, 131, 135, 136, 137, 138, 140, 159, 166, 174, 179, 187], "startswith": [53, 66, 67, 68, 69, 70, 119, 131], "stat": [14, 15, 174, 182, 188], "state": 116, "static": [53, 66, 67, 68, 69, 70, 119, 131], "stationari": [154, 155], "statist": [29, 52, 112, 125, 164, 178], "statsmodel": 174, "std": [31, 33, 36, 39, 45, 165, 167], "std_test_scor": [14, 40, 45, 113], "std_train_scor": [14, 40], "stein": [3, 5, 118, 119, 191], "step": [29, 30, 40, 45, 114, 125, 126, 139, 147, 178, 187], "sticker": [7, 8], "still": [8, 183], "stochast": [84, 136, 137, 138], "stock": [2, 13, 114, 140], "stop": [10, 53, 66, 67, 68, 69, 70, 113, 119, 131, 135, 140], "store": [55, 56, 113, 115, 116, 117, 177, 180, 181, 187, 191, 192], "store_precis": [113, 115, 116, 117], "str": [45, 53, 55, 56, 66, 67, 68, 69, 70, 100, 101, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 159, 169, 188], "strategi": [7, 8, 18, 19, 20, 23, 42, 101, 113, 130, 134, 143], "stratifi": 101, "strength": [36, 134, 187], "strict": [53, 66, 67, 68, 69, 70, 119, 131], "strictli": [136, 137, 138], "string": [11, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149], "strip": [53, 66, 67, 68, 69, 70, 119, 131], "structur": [5, 29, 30, 32, 149, 177, 180, 181, 187, 190, 191, 192], "studi": 114, "sub": [29, 36, 53, 66, 67, 68, 69, 70, 113, 114, 115, 116, 117, 119, 126, 131, 134, 135, 187], "subfold": [55, 56], "subobject": [52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157], "suboptim": [139, 178], "subplot": 42, "subplots_adjust": 42, "subsequ": [42, 100], "subset": 106, "substitut": [53, 66, 67, 68, 69, 70, 119, 131], "substr": [53, 66, 67, 68, 69, 70, 119, 131], "succeq": [154, 156, 158, 192], "success": [12, 13, 166], "suffer": [29, 30, 32], "suffici": 11, "suffix": [53, 66, 67, 68, 69, 70, 119, 131], "suitabl": [53, 66, 67, 68, 69, 70, 100, 119, 131], "sum": [11, 122, 123, 127, 128, 129, 132, 133, 144, 147, 172, 173, 178, 189], "sum_": [12, 13, 14, 53, 121, 122, 125, 126, 128, 129, 133, 138, 164, 169, 178], "summari": [7, 8, 9, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 40, 45, 99, 135, 136, 137, 138, 174, 178, 186, 188, 189], "super": 187, "superior": [84, 136, 137, 138], "support": [123, 130, 139, 140, 141, 142, 143, 187, 188], "suppos": [13, 139, 185], "surfac": [1, 16, 50, 135, 175], "survivorship": 42, "swapcas": [53, 66, 67, 68, 69, 70, 119, 131], "swinkel": 114, "sx5e": [121, 122, 123, 125, 126, 128, 129, 133, 147], "sy": 135, "symetri": 102, "symmetr": [136, 137, 138, 162, 166, 168], "syntax": 182, "systemat": [5, 130, 134, 149, 191], "szeke": 61, "t": [11, 12, 13, 15, 29, 45, 53, 66, 67, 68, 69, 70, 102, 111, 113, 114, 115, 116, 117, 119, 121, 122, 125, 126, 128, 129, 131, 133, 144, 147, 154, 155, 156, 157, 158, 164, 169, 178, 187, 189, 192], "tab": [53, 66, 67, 68, 69, 70, 119, 131], "tabl": [53, 66, 67, 68, 69, 70, 119, 131], "tabsiz": [53, 66, 67, 68, 69, 70, 119, 131], "tag": [2, 9, 10, 14, 15, 31, 33, 36, 39, 48, 135, 136, 137, 138], "tag_list": [31, 36, 39, 135], "tail": [41, 73, 81, 136, 137, 138, 174], "tailor": 186, "take": [4, 5, 12, 14, 15, 122, 123, 128, 129, 133, 135, 139, 147, 177, 178, 180, 181, 182, 187, 189, 190, 191, 192], "taken": 18, "target": [2, 15, 79, 81, 87, 89, 90, 99, 101, 102, 118, 127, 128, 129, 130, 134, 139, 140, 141, 142, 143, 144, 186], "target_n_test_path": [31, 33, 36, 39, 102, 186], "target_train_s": [31, 33, 36, 39, 102, 186], "tau": [112, 147], "tc": 12, "techniqu": 42, "technologi": 11, "tend": [14, 39, 112, 122, 128, 129, 174], "tenth": 45, "term": [11, 31, 33, 122, 123, 128, 129, 142, 149, 178], "test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 42, 45, 53, 61, 66, 67, 68, 69, 70, 98, 99, 100, 101, 102, 113, 115, 116, 117, 119, 130, 131, 134, 143, 166, 186, 188, 189], "test_index": [99, 100], "test_set_index": 99, "test_siz": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 100, 174, 182, 187, 188, 190], "text": [53, 66, 67, 68, 69, 70, 119, 125, 129, 131, 133, 154, 156, 158, 164, 169, 187, 192], "th": 113, "than": [5, 11, 14, 29, 30, 31, 32, 40, 48, 52, 84, 100, 101, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 122, 123, 125, 126, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 166, 169, 178, 187, 189, 191], "thank": 174, "thei": [0, 53, 66, 67, 68, 69, 70, 82, 83, 119, 131, 148, 174, 178, 179, 182, 187, 189], "them": [5, 6, 13, 26, 31, 33, 36, 39, 40, 134, 135, 149, 185, 189, 191], "theori": [63, 112, 170, 174], "therefor": [14, 100, 125, 142, 166, 178], "theta": 77, "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 83, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 174, 178, 182, 183, 185, 186, 187, 188, 189, 191], "third": [29, 30, 32, 53, 66, 67, 68, 69, 70, 92, 100, 119, 131], "thoma": [30, 125, 187], "those": [42, 99, 186], "three": [14, 15, 31, 33, 36, 40, 53, 66, 67, 68, 69, 70, 112, 118, 119, 131, 139, 179], "threshold": [39, 52, 61, 103, 105, 106, 107, 109, 112, 114, 115, 139, 142, 144, 166, 190], "through": [5, 77, 113, 136, 137, 138, 149, 178, 187, 191], "tibshirani": 164, "tickformat": [14, 15, 40], "time": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 60, 62, 63, 64, 65, 97, 99, 100, 102, 111, 113, 114, 121, 122, 123, 125, 126, 128, 129, 131, 133, 136, 137, 138, 144, 178, 185, 186, 187], "timedelta": [100, 143], "timefram": 42, "timeseriessplit": 100, "timestamp": 143, "tip": 41, "titl": [14, 15, 40, 45, 53, 66, 67, 68, 69, 70, 119, 131, 135, 174], "titlecas": [53, 66, 67, 68, 69, 70, 119, 131], "tlt": [122, 123, 128, 129, 133, 147, 174], "to_df": [136, 137, 138], "to_keep_": [41, 139, 140, 141, 142, 143], "to_surfac": [10, 135], "togeth": [6, 36, 134, 174, 187, 189], "toi": [7, 8, 33, 45], "tol": 113, "tol_gap_ab": [122, 123, 128, 129, 133], "tol_gap_rel": [122, 123, 128, 129, 133], "toler": 113, "tone": 106, "tonexti": [14, 40], "too": [53, 66, 67, 68, 69, 70, 119, 131], "tool": [7, 8, 42, 174, 182, 186, 189], "top": [29, 30, 40, 41, 42, 125, 126, 174, 183, 187], "topic": 189, "topmost": [29, 126, 187], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 101, 102, 118, 121, 122, 125, 126, 128, 129, 133, 138, 144, 175, 187], "toward": [12, 13, 118], "tr": [113, 115, 116, 117], "trace": [115, 116, 117], "track": [1, 16, 50, 128, 129, 174, 175, 187], "tracking_rms": 2, "tractabl": 123, "trade": [13, 42, 114, 118, 140, 174, 189], "tradeoff": 2, "tradit": 105, "trail": [5, 53, 66, 67, 68, 69, 70, 119, 131, 140], "train": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 99, 100, 101, 102, 113, 114, 123, 130, 134, 143, 150, 186, 187, 189], "train_index": [99, 100], "train_siz": [12, 13, 14, 15, 31, 33, 36, 40, 41, 42, 45, 100, 174], "train_spx": 2, "train_test_split": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 174, 182, 186, 187, 188, 190], "transact": [1, 16, 50, 116, 121, 122, 123, 125, 126, 128, 129, 133, 138, 175, 187, 189], "transaction_cost": [12, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 138, 174], "transform": [7, 8, 11, 12, 13, 38, 39, 40, 42, 45, 48, 50, 60, 62, 64, 65, 114, 139, 140, 141, 142, 143, 144, 148, 174, 178], "transform_output": [39, 40, 41, 42, 143, 174, 190], "translat": [53, 66, 67, 68, 69, 70, 119, 131], "travers": [29, 126, 187], "tree": [29, 30, 32, 125, 126, 130, 187], "triangular": [3, 4, 5, 151, 191], "true": [10, 14, 29, 30, 32, 40, 41, 45, 48, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 83, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 166, 168, 169, 174, 178, 182, 185, 188], "truncat": [53, 66, 67, 68, 69, 70, 119, 131], "try": [53, 55, 56, 66, 67, 68, 69, 70, 119, 131], "tune": [174, 183], "tupl": [53, 66, 67, 68, 69, 70, 119, 131, 134, 167], "turnov": [122, 128, 129, 133, 174, 187], "tutori": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 122, 123, 125, 128, 129, 133, 169], "two": [2, 6, 14, 29, 31, 33, 40, 52, 53, 63, 66, 67, 68, 69, 70, 84, 102, 112, 113, 115, 116, 117, 118, 119, 125, 126, 131, 135, 136, 137, 138, 139, 164, 178, 182, 187], "type": [100, 113, 115, 116, 117, 135, 159], "u": [29, 30, 32, 53, 66, 67, 68, 69, 70, 119, 122, 123, 128, 129, 131, 133, 147, 164, 174], "u_": [154, 155, 156, 157, 158, 192], "ulcer": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 69, 70, 93, 129, 133, 136, 137, 138, 174, 187], "ulcer_index": [70, 121, 122, 125, 126, 129, 133, 136, 137, 138], "ulcer_index_ratio": [69, 136, 137, 138], "umbrella": 15, "un": 14, "unbias": [109, 118, 138], "uncas": [53, 66, 67, 68, 69, 70, 119, 131], "uncertain": [13, 121, 122, 125, 126, 128, 129, 133], "uncertainti": [1, 16, 26, 50, 122, 129, 147, 152, 153, 154, 155, 156, 157, 158, 175, 187], "uncertainty_set": [15, 174, 187, 192], "uncertainty_set_": [154, 155, 156, 157, 192], "uncertaintyset": [154, 155, 156, 157, 192], "unchang": [103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 139, 140, 141, 142, 143, 166], "uncommon": 178, "uncompound": [82, 83], "under": [9, 10, 13, 14, 15, 112, 113, 115, 116, 117, 157, 174, 178, 183, 187], "underli": [101, 105, 106, 111, 113, 114, 118, 123, 125, 127, 128, 130, 134, 147, 148, 149, 150, 154, 155, 156, 157, 189], "underperform": [7, 8, 33, 147], "underscor": [5, 15], "unfortun": 174, "unh": [7, 8, 41, 45, 48, 57], "unicod": [53, 66, 67, 68, 69, 70, 119, 131], "unicodeencodeerror": [53, 66, 67, 68, 69, 70, 119, 131], "unifi": 174, "uniform": [14, 15, 26, 123, 172, 173, 182, 187], "uniformli": [14, 15, 182], "unit": [135, 136, 137, 138], "univers": [126, 130, 144, 178, 190], "unless": [53, 66, 67, 68, 69, 70, 101, 113, 119, 130, 131, 134, 140, 150], "unrealist": 12, "unrepresent": [53, 66, 67, 68, 69, 70, 119, 131], "unstack": 45, "unsupervis": [139, 140, 141, 142, 143], "until": [142, 183], "untouch": [53, 66, 67, 68, 69, 70, 119, 131], "unus": 53, "unwant": [13, 121, 122, 125, 126, 128, 129, 133], "up": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 30, 31, 32, 33, 36, 39, 40, 45, 48, 54, 55, 56, 57, 58, 179], "updat": [4, 12, 29, 30, 52, 59, 60, 61, 62, 63, 64, 65, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 187, 191], "update_layout": [10, 14, 15, 40], "update_xax": 15, "update_yax": [14, 15, 40], "upgma": 53, "upgmc": 53, "upper": [14, 15, 53, 66, 67, 68, 69, 70, 75, 78, 119, 121, 122, 123, 125, 126, 128, 129, 131, 133, 136, 137, 138, 169], "uppercas": [53, 66, 67, 68, 69, 70, 119, 131], "upsid": [29, 30, 32, 79, 81, 87, 89, 90, 122, 129, 133, 136, 137, 138], "url": 174, "uryasev": [26, 123], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 46, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 78, 79, 81, 84, 87, 88, 89, 90, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 166, 169, 170, 171, 174, 175, 176, 178, 179, 182, 185, 186, 187, 189, 191, 192], "usabl": [53, 66, 67, 68, 69, 70, 119, 131], "user": [0, 7, 8, 45, 52, 59, 60, 61, 62, 63, 64, 65, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 166, 174, 178, 179], "usmv": [54, 187, 191], "usual": [13, 106, 182], "utf": [53, 66, 67, 68, 69, 70, 119, 131], "util": [12, 13, 29, 36, 41, 77, 113, 114, 115, 116, 117, 123, 129, 131, 136, 137, 138, 174, 187, 188], "v": [28, 34, 41, 45, 50, 53, 144, 148, 164, 175, 178, 186], "valid": [14, 32, 40, 53, 66, 67, 68, 69, 70, 98, 99, 100, 101, 113, 119, 130, 131, 134, 143, 182, 183, 187], "valu": [2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 164, 166, 168, 174, 182, 187], "value_at_risk": [67, 121, 125, 126, 136, 137, 138], "value_at_risk_beta": [136, 137, 138], "value_at_risk_ratio": [69, 136, 137, 138], "valueerror": [41, 53, 66, 67, 68, 69, 70, 119, 131, 135, 160, 161, 162], "var": [67, 73, 78, 94, 136, 137, 138], "variabl": [5, 14, 15, 63, 84, 99, 122, 123, 128, 129, 133, 136, 137, 138, 139, 149, 156, 179, 182, 187, 191], "varianc": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 29, 30, 32, 33, 36, 39, 40, 45, 48, 50, 52, 53, 70, 84, 90, 103, 105, 106, 107, 109, 112, 114, 115, 118, 121, 122, 125, 126, 129, 130, 133, 136, 137, 138, 142, 149, 151, 154, 155, 156, 157, 166, 175, 178, 182, 187, 188, 189], "variance_from_asset": 138, "variance_upp": 10, "variant": 112, "variat": [63, 174, 182], "variou": 134, "vast": [7, 8], "vec": [154, 156, 158, 192], "vector": [11, 12, 13, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 118, 121, 122, 123, 125, 126, 128, 129, 133, 135, 136, 138, 139, 140, 141, 142, 143, 147, 156, 165, 167, 172, 173, 178, 186, 187, 189], "verbos": [101, 113, 122, 123, 125, 128, 129, 130, 133, 134, 169], "veri": [30, 113, 134, 178, 182, 187], "verifi": 168, "version": [14, 52, 53, 66, 67, 68, 69, 70, 97, 113, 114, 115, 116, 117, 119, 131, 139, 140, 141, 142, 143, 182, 183], "versu": [2, 10], "vert": [14, 76, 122, 125, 128, 129, 138, 169], "vert_": [14, 76, 122, 125, 128, 129, 138, 169], "vertic": 40, "via": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 53, 66, 67, 68, 69, 70, 119, 131, 179], "view": [41, 147, 174, 187, 191], "view_confid": 147, "views_": 147, "vikberg": 114, "visual": [12, 13], "vlue": [6, 54, 174, 187, 191], "vod": 55, "vol": [7, 18, 19, 45, 174], "vol_weighted_target": 118, "volatil": [7, 12, 14, 18, 19, 23, 36, 44, 46, 50, 54, 114, 118, 127, 128, 138, 174, 175, 185, 187], "volatility_risk_premium_adj": 114, "volum": [38, 43, 50, 115, 175], "volumepreselect": 41, "volumes_usd": 41, "voluntari": 42, "voor": 53, "vrpa": 114, "w": [11, 12, 13, 14, 15, 76, 111, 121, 122, 123, 125, 126, 128, 129, 131, 133, 138, 156, 169, 178, 187, 189], "w_": [12, 13, 14, 102, 121, 122, 125, 126, 128, 129, 133, 138, 164, 169, 178, 189], "w_i": [125, 169], "wa": [7, 8, 12, 33, 42, 45, 53, 61, 139, 140, 141, 142, 143], "wai": [40, 128, 129, 182], "walk": [12, 13, 15, 41, 100, 174], "walkforward": [12, 13, 14, 15, 31, 33, 36, 40, 41, 45, 143, 174, 189], "wang": [52, 125, 164], "want": [10, 12, 13, 42, 125, 186, 187], "ward": [29, 30, 31, 32, 33, 52, 53, 125, 126, 187], "warn": [122, 123, 128, 129, 133, 166], "wasserstein": [26, 123, 187], "wasserstein_ball_radiu": [26, 123, 187], "we": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50, 97, 102, 113, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 142, 144, 149, 156, 166, 174, 178, 182, 183, 185, 186, 187, 188, 191], "week": 100, "wei": [52, 125, 164], "weight": [0, 1, 2, 4, 8, 12, 13, 14, 16, 23, 26, 29, 30, 31, 32, 33, 36, 41, 50, 53, 76, 88, 102, 107, 108, 111, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 144, 147, 169, 172, 173, 175, 178, 187, 188, 189], "weight_n_test_path": 102, "weight_train_s": 102, "weights_": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 39, 45, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 174, 182, 185, 187, 188, 192], "weights_per_observ": [41, 137, 138], "weir": 55, "well": [52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 174, 186, 187], "were": [4, 6, 174], "werner": [154, 155, 156, 157], "when": [11, 12, 13, 14, 29, 30, 32, 40, 42, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 166, 182, 186, 189], "where": [11, 29, 30, 45, 53, 66, 67, 68, 69, 70, 99, 101, 113, 115, 116, 117, 119, 125, 126, 128, 131, 135, 139, 140, 141, 142, 143, 164, 178, 182, 186, 187, 189], "whether": [53, 66, 67, 68, 69, 70, 113, 115, 116, 117, 119, 131, 168], "which": [4, 5, 6, 11, 12, 13, 14, 15, 23, 26, 29, 30, 32, 41, 45, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 75, 77, 78, 99, 101, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 154, 155, 156, 157, 166, 169, 178, 179, 182, 186, 187, 189, 191], "while": [2, 36, 42, 84, 99, 112, 134, 136, 137, 138, 174, 182, 183], "white": [154, 155], "whitespac": [53, 66, 67, 68, 69, 70, 119, 131], "whole": [32, 130, 187], "whose": [53, 66, 67, 68, 69, 70, 99, 113, 115, 116, 117, 119, 131, 139, 140, 141, 142, 143, 186], "wi": [135, 136, 137, 138], "wide": [60, 62, 64, 65, 182], "width": [14, 40, 53, 66, 67, 68, 69, 70, 119, 131], "wiesel": 116, "william": [76, 138], "window": [45, 107, 108, 109, 110, 112, 114, 135, 136, 137, 138], "window_s": [45, 107, 108, 109, 110, 112, 114], "wise": 178, "wishart": 156, "wit": 178, "within": [26, 30, 53, 66, 67, 68, 69, 70, 119, 123, 125, 131, 134, 140, 143, 164, 182, 187], "without": [2, 5, 6, 7, 8, 12, 13, 14, 15, 20, 39, 40, 42, 122, 123, 128, 129, 133, 136, 137, 138], "wmt": [7, 8, 29, 30, 32, 41, 45, 48, 57], "wolf": [115, 174], "wom": [41, 100], "word": [31, 53, 66, 67, 68, 69, 70, 119, 131], "work": [36, 40, 42, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157], "workaround": 42, "wors": [136, 137, 138], "worst": [7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 36, 40, 69, 70, 72, 73, 74, 94, 96, 122, 123, 129, 133, 136, 137, 138, 141, 174, 192], "worst_real": [70, 121, 122, 125, 126, 129, 133, 136, 137, 138], "worst_realization_ratio": [69, 136, 137, 138], "would": [11, 13, 14, 36, 121, 122, 125, 126, 128, 129, 133, 139, 140, 141, 142, 143, 174, 178, 187, 189], "wpgma": 53, "wpgmc": 53, "wpp": 55, "wrap": 97, "write": 182, "written": [122, 123, 125, 128, 129, 133, 169], "wtb": 55, "www": [122, 123, 125, 128, 129, 133, 169], "x": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 160, 161, 162, 163, 168, 170, 171, 174, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192], "x0": [138, 139, 140, 141, 142, 143], "x1": [138, 139, 140, 141, 142, 143], "x_new": [139, 140, 141, 142, 143], "x_r": [139, 140, 141, 142, 143], "x_test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 113, 115, 116, 117, 174, 182, 186, 187, 188, 190], "x_train": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 174, 182, 187, 188, 190], "xaxis_titl": [14, 15, 40], "xmlcharrefreplac": [53, 66, 67, 68, 69, 70, 119, 131], "xom": [7, 8, 41, 45, 48, 57], "y": [2, 5, 6, 9, 10, 14, 15, 29, 40, 41, 45, 48, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 174, 187, 188, 191], "y_test": [2, 5, 6, 29, 174, 187], "y_test_mean": [14, 15], "y_test_std": 14, "y_train": [2, 5, 6, 29, 174, 187], "y_train_mean": 14, "y_train_std": 14, "yahoo": [54, 55, 56, 57, 58, 179], "yaxis_titl": [14, 15, 40], "year": [12, 13, 14, 15, 26, 31, 33, 36, 40, 45, 48, 100, 174, 178], "yearli": [13, 178], "yellow": [29, 30, 32, 52], "yield": [99, 100, 113, 130, 134, 178], "you": [7, 8, 9, 11, 12, 13, 15, 29, 41, 45, 63, 97, 100, 111, 113, 114, 115, 116, 117, 122, 123, 128, 129, 133, 134, 144, 147, 174, 178, 183, 185, 186, 187], "your": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 100, 178, 182, 187], "yue": [52, 125, 164], "z": [10, 53, 66, 67, 68, 69, 70, 119, 131, 135, 139, 188], "zero": [14, 53, 66, 67, 68, 69, 70, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 119, 122, 128, 129, 131, 136, 137, 138, 139, 140, 141, 142, 143, 154, 155, 156, 157, 166, 172, 189], "zero_imput": 42, "zfill": [53, 66, 67, 68, 69, 70, 119, 131], "zhou": 142, "zip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 45, 48, 50], "zvra": 56, "zyme": 56, "zyne": 56, "zyxi": 56, "\u00ecn": 182}, "titles": ["API Reference", "Mean-Risk", "Tracking Error", "Empirical Prior", "Black &amp; Litterman", "Factor Model", "Black &amp; Litterman Factor Model", "Maximum Sharpe Ratio", "Minimum CVaR", "Efficient Frontier", "Mean-Variance-CDaR Surface", "Weight Constraints", "Transaction Costs", "Management Fees", "L1 and L2 Regularization", "Uncertainty Set", "Computation times", "Risk Budgeting", "Risk Parity - Variance", "Risk Budgeting - CVaR", "Risk Parity - Covariance shrinkage", "Computation times", "Maximum Diversification", "Maximum Diversification", "Computation times", "Distributionally Robust CVaR", "Distributionally Robust CVaR", "Computation times", "Hierarchical Clustering and NCO", "Hierarchical Risk Parity - CVaR", "Hierarchical Equal Risk Contribution - CDaR", "HRP vs HERC", "Nested Clusters Optimization", "NCO - Combinatorial Purged CV", "Computation times", "Ensemble Optimizations", "Stacking Optimization", "Computation times", "Pre-selection", "Drop Highly Correlated Assets", "Select Best Performers", "Custom Pre-selection Using Volumes", "Handling Incomplete Datasets: Inception, Expiry, and Default", "Computation times", "Metadata Routing", "Using Implied Volatility with Metadata Routing", "Computation times", "Data Preparation", "Investment Horizon", "Computation times", "Examples", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.HierarchicalClustering", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.LinkageMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_factors_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_ftse100_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_nasdaq_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.BaseDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.CovarianceDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.DistanceCorrelation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.KendallDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.MutualInformation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.PearsonDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.SpearmanDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.BaseMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ExtraRiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.PerfMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RatioMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.average_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cdar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cvar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.drawdown_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.edar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.effective_number_assets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.entropic_risk_measure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.evar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.first_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_cumulative_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_drawdowns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.gini_mean_difference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.max_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean_absolute_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.owa_gmd_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.standard_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.third_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ulcer_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.value_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.worst_realization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.metrics</span></code>.make_scorer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.BaseCombinatorialCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.CombinatorialPurgedCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.WalkForward", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.cross_val_predict", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.optimal_folds_number", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DenoiseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DetoneCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EquilibriumMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GerberCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GraphicalLassoCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ImpliedCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.LedoitWolf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.OAS", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMuMethods", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseComposition", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseHierarchicalOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ConvexOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.DistributionallyRobustCVaR", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.EqualWeighted", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalEqualRiskContribution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalRiskParity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.InverseVolatility", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MaximumDiversification", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MeanRisk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.NestedClustersOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ObjectiveFunction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.Random", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.RiskBudgeting", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.StackingOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.population</span></code>.Population", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.BasePortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.MultiPeriodPortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.Portfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.DropCorrelated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectComplete", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectKExtremes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectNonDominated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectNonExpiring", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.preprocessing</span></code>.prices_to_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BaseLoadingMatrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BasePrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BlackLitterman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.EmpiricalPrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.FactorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.LoadingMatrixRegression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.PriorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.UncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.NBinsMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_distance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_square", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_symmetric", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.commutation_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.compute_optimal_n_clusters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.corr_to_cov", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_nearest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_to_corr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.is_cholesky_dec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.minimize_relative_weight_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_freedman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_knuth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights_dirichlet", "skfolio", "Computation times", "Clustering Estimators", "Covariance Estimator", "Data Preparation", "Datasets", "Distance Estimator", "Expected Return Estimator", "Hyper-Parameters Tuning", "User Guide", "Installation", "Metadata Routing", "Model Selection", "Optimization", "Population", "Portfolio", "Pre-Selection Transformers", "Prior Estimator", "Uncertainty Set Estimator"], "titleterms": {"In": 178, "The": 178, "alloc": 187, "an": 182, "analysi": [5, 7, 8, 9, 10, 18, 19, 20, 23, 26, 31, 33, 36], "analyst": [4, 6], "api": 0, "approach": 178, "assert_is_dist": 160, "assert_is_squar": 161, "assert_is_symmetr": 162, "asset": 39, "attribut": 189, "avail": 174, "average_drawdown": 71, "base": [0, 189], "basecombinatorialcv": 98, "basecomposit": 120, "basecovari": 103, "basecovarianceuncertaintyset": 152, "basedist": 59, "basehierarchicaloptim": 121, "baseloadingmatrix": 145, "basemeasur": 66, "basemu": 104, "basemuuncertaintyset": 153, "baseportfolio": 136, "baseprior": 146, "benchmark": [3, 36], "best": 40, "black": [4, 6, 174, 191], "blacklitterman": 147, "bootstrapcovarianceuncertaintyset": 154, "bootstrapmuuncertaintyset": 155, "bound": 11, "budget": [11, 17, 19, 50, 187], "case": 187, "cdar": [10, 30, 72], "citat": 174, "class": 0, "cluster": [0, 28, 32, 50, 52, 53, 174, 176, 187], "combin": [187, 191], "combinatori": [31, 33, 36, 39, 174, 186], "combinatorialpurgedcv": 99, "commutation_matrix": 163, "composit": [29, 30, 32, 182], "comput": [16, 21, 24, 27, 34, 37, 43, 46, 49, 51, 175], "compute_optimal_n_clust": 164, "concept": 174, "conclus": [7, 8, 33, 36, 45], "constraint": [11, 174], "contribut": [18, 19, 29, 30, 187], "convex": 0, "convexoptim": 122, "corr_to_cov": 165, "correct": 178, "correl": 39, "cost": [12, 174], "cov_nearest": 166, "cov_to_corr": 167, "covari": [0, 20, 45, 174, 177], "covariancedist": 60, "cross": [31, 33, 36, 39, 41, 42, 45, 174, 186], "cross_val_predict": 101, "custom": [41, 187], "cv": 33, "cvar": [8, 19, 25, 26, 29, 50, 73, 174, 187], "data": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 47, 50, 178], "dataclass": 0, "dataset": [0, 42, 45, 54, 55, 56, 57, 58, 174, 179], "default": 42, "dendrogram": [29, 30, 32], "denois": 174, "denoisecovari": 105, "deton": 174, "detonecovari": 106, "distanc": [0, 29, 30, 32, 59, 60, 61, 62, 63, 64, 65, 180], "distancecorrel": 61, "distribut": [31, 33, 36, 39], "distribution": [25, 26, 50, 187], "distributionallyrobustcvar": 123, "diversif": [22, 23, 50, 187], "drawdown_at_risk": 74, "drop": 39, "dropcorrel": 139, "edar": 75, "effective_number_asset": 76, "effici": [9, 14, 15], "embed": 174, "empir": [3, 4, 5, 191], "empiricalcovari": 109, "empiricalcovarianceuncertaintyset": 156, "empiricalmu": 110, "empiricalmuuncertaintyset": 157, "empiricalprior": 148, "ensembl": [0, 35, 50], "entropic_risk_measur": 77, "enum": 0, "equal": [30, 187], "equalweight": 124, "equilibriummu": 111, "error": 2, "estim": [0, 29, 30, 32, 45, 176, 177, 180, 181, 182, 187, 191, 192], "evar": 78, "ewcovari": 107, "ewmu": 108, "exampl": [50, 178], "exhaust": 182, "expect": [174, 181], "expiri": 42, "extrariskmeasur": 67, "factor": [0, 5, 6, 174, 191], "factormodel": 149, "fee": 13, "first_lower_partial_mo": 79, "fit": [42, 174], "fold": 174, "forward": 42, "fourth_central_mo": 80, "fourth_lower_partial_mo": 81, "frontier": [9, 14, 15], "function": 0, "further": [6, 187], "gerber": 174, "gerbercovari": 112, "get_cumulative_return": 82, "get_drawdown": 83, "gini_mean_differ": 84, "go": [6, 187], "graphicallassocv": 113, "grid": [174, 182], "group": 11, "guid": 183, "handl": 42, "herc": 31, "hierarch": [28, 29, 30, 50, 187], "hierarchicalclust": 52, "hierarchicalequalriskcontribut": 125, "hierarchicalriskpar": 126, "highli": 39, "horizon": 48, "hrp": 31, "hyper": [14, 15, 42, 45, 182], "impli": 45, "impliedcovari": 114, "import": 174, "incept": 42, "incomplet": 42, "inequ": 11, "instal": [174, 184], "invers": 45, "inversevolatil": 127, "invest": 48, "is_cholesky_dec": 168, "k": 174, "kei": 174, "kendalldist": 62, "l1": 14, "l2": [14, 174], "ledoitwolf": 115, "left": 11, "linear": [11, 48, 178], "linkag": [29, 30, 32], "linkagemethod": 53, "litterman": [4, 6, 174, 191], "load": [0, 45, 174], "load_factors_dataset": 54, "load_ftse100_dataset": 55, "load_nasdaq_dataset": 56, "load_sp500_dataset": 57, "load_sp500_index": 58, "loadingmatrixregress": 150, "logarithm": 178, "long": 11, "lower": 11, "make_scor": 97, "manag": 13, "matrix": 0, "max_drawdown": 85, "maximum": [7, 22, 23, 50, 174, 187], "maximumdiversif": 128, "mean": [1, 10, 50, 86, 187], "mean_absolute_devi": 87, "meanrisk": 129, "measur": [0, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "metadata": [44, 45, 50, 185], "method": [29, 30, 32, 189], "metric": [0, 97, 182], "minimize_relative_weight_devi": 169, "minimum": [8, 174], "model": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 48, 174, 186, 191], "model_select": [0, 98, 99, 100, 101, 102], "moment": [0, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "mu": 0, "multi": [12, 13, 189], "multiperiodportfolio": 137, "multipl": 191, "mutualinform": 63, "n_bins_freedman": 170, "n_bins_knuth": 171, "naiv": [0, 187], "nbinsmethod": 159, "nco": [28, 33, 50], "nest": [32, 174, 187], "nestedclustersoptim": 130, "norm": 174, "oa": 116, "object": 182, "objectivefunct": 131, "optim": [0, 10, 32, 35, 36, 50, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 174, 178, 182, 187], "optimal_folds_numb": 102, "owa_gmd_weight": 88, "parallel": [174, 182], "paramet": [14, 15, 31, 33, 36, 40, 42, 45, 174, 182], "pareto": 10, "pariti": [18, 20, 29, 174, 187], "pearsondist": 64, "perfmeasur": 68, "perform": 40, "period": [12, 13, 189], "pipelin": [39, 40, 41, 42, 174], "pitfal": 178, "popul": [0, 135, 188], "portfolio": [0, 12, 13, 136, 137, 138, 178, 189], "posit": 11, "pre": [0, 38, 41, 50, 174, 190], "pre_select": [0, 139, 140, 141, 142, 143], "predict": [2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 174, 186], "prepar": [47, 50, 178], "preprocess": [0, 144], "price": 48, "prices_to_return": 144, "prior": [0, 3, 29, 145, 146, 147, 148, 149, 150, 151, 187, 191], "priormodel": 151, "purg": [31, 33, 36, 39, 174, 186], "quickstart": 174, "rand_weight": 172, "rand_weights_dirichlet": 173, "random": [132, 174, 182], "ratio": [7, 174], "ratiomeasur": 69, "recognit": 174, "refer": 0, "regular": 14, "return": [48, 174, 178, 181], "right": 11, "risk": [1, 17, 18, 19, 20, 29, 30, 50, 174, 187], "riskbudget": 133, "riskmeasur": 70, "robust": [25, 26, 50, 187], "rout": [44, 45, 50, 185], "search": [174, 182], "select": [0, 38, 40, 41, 50, 174, 186, 190], "selectcomplet": 140, "selectkextrem": 141, "selectnondomin": 142, "selectnonexpir": 143, "semi_devi": 89, "semi_vari": 90, "set": [0, 15, 174, 192], "sharp": 7, "short": 11, "shrinkag": 20, "shrunk": 174, "shrunkcovari": 117, "shrunkmu": 118, "shrunkmumethod": 119, "skfolio": [0, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178], "sortino": 174, "space": 182, "spearmandist": 65, "specifi": 182, "split": 174, "stack": [36, 187], "stackingoptim": 134, "standard_devi": 91, "stat": [0, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "step": 42, "stock": 178, "summari": 29, "surfac": 10, "test": 174, "third_central_mo": 92, "time": [16, 21, 24, 27, 34, 37, 43, 46, 49, 51, 175], "tip": 182, "track": 2, "train": 174, "transact": [12, 174], "transform": [0, 41, 190], "tune": [14, 15, 31, 33, 36, 40, 42, 45, 182], "ulcer_index": 93, "uncertainti": [0, 15, 174, 192], "uncertainty_set": [0, 152, 153, 154, 155, 156, 157, 158], "uncertaintyset": 158, "upper": 11, "us": [41, 45], "user": 183, "util": [0, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "v": 31, "valid": [31, 33, 36, 39, 41, 42, 45, 174, 186], "value_at_risk": 94, "varianc": [10, 18, 95, 174], "view": [4, 6], "volatil": 45, "volum": 41, "walk": 42, "walkforward": [42, 100], "weight": [11, 174], "worst": 187, "worst_real": 96}})